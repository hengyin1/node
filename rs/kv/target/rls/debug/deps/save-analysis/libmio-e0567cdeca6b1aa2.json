{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4","program":"/Users/yinheng/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","mio","--edition=2018","/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"net\"","--cfg","feature=\"os-ext\"","--cfg","feature=\"os-poll\"","-C","metadata=e0567cdeca6b1aa2","-C","extra-filename=-e0567cdeca6b1aa2","--out-dir","/Users/yinheng/Desktop/code/node/rs/kv/target/rls/debug/deps","-L","dependency=/Users/yinheng/Desktop/code/node/rs/kv/target/rls/debug/deps","--extern","libc=/Users/yinheng/Desktop/code/node/rs/kv/target/rls/debug/deps/liblibc-a7f65bc0eeb1e9ea.rmeta","--extern","log=/Users/yinheng/Desktop/code/node/rs/kv/target/rls/debug/deps/liblog-34f3275e60f336ef.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/yinheng/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/yinheng/Desktop/code/node/rs/kv/target/rls/debug/deps/libmio-e0567cdeca6b1aa2.rmeta"},"prelude":{"crate_id":{"name":"mio","disambiguator":[16460284605868696561,0]},"crate_root":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src","external_crates":[{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","num":18,"id":{"name":"log","disambiguator":[11417943126347173544,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","num":19,"id":{"name":"cfg_if","disambiguator":[10518978035588998298,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","num":20,"id":{"name":"libc","disambiguator":[939525472127436954,0]}}],"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":266,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1030},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/mod.rs","byte_start":55214,"byte_end":55219,"line_start":8,"line_end":8,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/mod.rs","byte_start":55244,"byte_end":55250,"line_start":9,"line_end":9,"column_start":24,"column_end":30},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":0,"index":1034},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/mod.rs","byte_start":55252,"byte_end":55256,"line_start":9,"line_end":9,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":0,"index":205},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/mod.rs","byte_start":55281,"byte_end":55287,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12970086,"byte_end":12970097,"line_start":29,"line_end":29,"column_start":21,"column_end":32},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":1282},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12970099,"byte_end":12970108,"line_start":29,"line_end":29,"column_start":34,"column_end":43},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":1400},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12970204,"byte_end":12970213,"line_start":34,"line_end":34,"column_start":20,"column_end":29},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12970271,"byte_end":12970281,"line_start":39,"line_end":39,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":1505},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12970283,"byte_end":12970295,"line_start":39,"line_end":39,"column_start":33,"column_end":45},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":1601},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12970297,"byte_end":12970309,"line_start":39,"line_end":39,"column_start":47,"column_end":59},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":1686},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12970311,"byte_end":12970321,"line_start":39,"line_end":39,"column_start":61,"column_end":71},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":1124}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1465,"byte_end":1471,"line_start":65,"line_end":65,"column_start":16,"column_end":22},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":263},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1491,"byte_end":1499,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":79},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1516,"byte_end":1520,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1522,"byte_end":1530,"line_start":67,"line_end":67,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1004},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1548,"byte_end":1553,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1005},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1548,"byte_end":1553,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1026},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1602,"byte_end":1607,"line_start":70,"line_end":70,"column_start":16,"column_end":21},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":931},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1901,"byte_end":1904,"line_start":82,"line_end":82,"column_start":36,"column_end":39},"alias_span":null,"name":"new","value":"","parent":{"krate":0,"index":247}},{"kind":"Use","ref_id":{"krate":0,"index":1000},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1906,"byte_end":1914,"line_start":82,"line_end":82,"column_start":41,"column_end":49},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":247}},{"kind":"Use","ref_id":{"krate":0,"index":996},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1916,"byte_end":1922,"line_start":82,"line_end":82,"column_start":51,"column_end":57},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":247}},{"kind":"Use","ref_id":{"krate":0,"index":524},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1956,"byte_end":1964,"line_start":85,"line_end":85,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":246}},{"kind":"Use","ref_id":{"krate":0,"index":525},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1956,"byte_end":1964,"line_start":85,"line_end":85,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":246}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":266,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":42},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":127},{"krate":0,"index":1044},{"krate":0,"index":1124},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs\n and event notification for building high performance I/O apps with as little\n overhead as possible over the OS abstractions.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unused_imports, dead_code)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":0,"byte_end":120,"line_start":1,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":307,"byte_end":386,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ and event notification for building high performance I/O apps with as little","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":387,"byte_end":467,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ overhead as possible over the OS abstractions.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":468,"byte_end":518,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":519,"byte_end":522,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":523,"byte_end":534,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":535,"byte_end":538,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Using Mio starts by creating a [`Poll`], which reads events from the OS and","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":539,"byte_end":618,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ puts them into [`Events`]. You can handle I/O events from the OS with it.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":619,"byte_end":696,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":697,"byte_end":700,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For more detail, see [`Poll`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":701,"byte_end":735,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":736,"byte_end":739,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../mio/struct.Poll.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":740,"byte_end":777,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/ [`Events`]: ../mio/event/struct.Events.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":778,"byte_end":825,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":826,"byte_end":829,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":830,"byte_end":845,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":846,"byte_end":849,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Examples can found in the `examples` directory of the source code, or [on","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":850,"byte_end":927,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ GitHub].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":928,"byte_end":940,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":941,"byte_end":944,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [on GitHub]: https://github.com/tokio-rs/mio/tree/master/examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":945,"byte_end":1014,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1015,"byte_end":1018,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Guide","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1019,"byte_end":1031,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A getting started guide is available in the [`guide`] module.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1036,"byte_end":1101,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1102,"byte_end":1105,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Available features","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1106,"byte_end":1131,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1132,"byte_end":1135,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The available features are described in the [`features`] module.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1136,"byte_end":1204,"line_start":41,"line_end":41,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":263},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11952,"byte_end":11960,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Interest","qualname":"::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Interest used in registering.","sig":null,"attributes":[{"value":"/ Interest used in registering.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11313,"byte_end":11346,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11347,"byte_end":11350,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Interest are used in [registering] [`event::Source`]s with [`Poll`], they","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11351,"byte_end":11428,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ indicate what readiness should be monitored for. For example if a socket is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11429,"byte_end":11508,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ registered with [readable] interests and the socket becomes writable, no","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11509,"byte_end":11585,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ event will be returned from a call to [`poll`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11586,"byte_end":11637,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11638,"byte_end":11641,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [registering]: struct.Registry.html#method.register","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11642,"byte_end":11697,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11698,"byte_end":11746,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11747,"byte_end":11777,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ [readable]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11778,"byte_end":11842,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":11843,"byte_end":11885,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":12489,"byte_end":12497,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing readable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing readable interests.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":12413,"byte_end":12474,"line_start":37,"line_end":37,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":12648,"byte_end":12656,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing writable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing writable interests.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":12572,"byte_end":12633,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":28},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":12955,"byte_end":12958,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"AIO","qualname":"::interest::Interest::AIO","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing AIO completion interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing AIO completion interests.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":12731,"byte_end":12798,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"macos\"))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":12803,"byte_end":12940,"line_start":44,"line_end":49,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13668,"byte_end":13671,"line_start":69,"line_end":69,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interest`.","sig":null,"attributes":[{"value":"/ Add together two `Interest`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13217,"byte_end":13249,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13254,"byte_end":13257,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This does the same thing as the `BitOr` implementation, but is a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13262,"byte_end":13330,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ constant function.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13335,"byte_end":13357,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13362,"byte_end":13365,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13370,"byte_end":13377,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13382,"byte_end":13404,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13409,"byte_end":13412,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ const INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13417,"byte_end":13492,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ # fn silent_dead_code_warning(_: Interest) { }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13497,"byte_end":13547,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ # silent_dead_code_warning(INTERESTS)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13552,"byte_end":13593,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13598,"byte_end":13605,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13610,"byte_end":13650,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14602,"byte_end":14608,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"remove","qualname":"<Interest>::remove","value":"pub fn remove(Self, Interest) -> Option<Interest>","parent":null,"children":[],"decl_id":null,"docs":" Removes `other` `Interest` from `self`.","sig":null,"attributes":[{"value":"/ Removes `other` `Interest` from `self`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13804,"byte_end":13847,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13852,"byte_end":13855,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the set would be empty after removing `other`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13860,"byte_end":13928,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13933,"byte_end":13936,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13941,"byte_end":13948,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13953,"byte_end":13975,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13980,"byte_end":13983,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ const RW_INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":13988,"byte_end":14066,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14071,"byte_end":14074,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ // As long a one interest remain this will return `Some`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14079,"byte_end":14140,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ let w_interest = RW_INTERESTS.remove(Interest::READABLE).unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14145,"byte_end":14215,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ assert!(!w_interest.is_readable());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14220,"byte_end":14259,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/ assert!(w_interest.is_writable());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14264,"byte_end":14302,"line_start":85,"line_end":85,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14307,"byte_end":14310,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // Removing all interests from the set will return `None`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14315,"byte_end":14377,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(w_interest.remove(Interest::WRITABLE), None);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14382,"byte_end":14442,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14447,"byte_end":14450,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ // Its also possible to remove multiple interests at once.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14455,"byte_end":14517,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(RW_INTERESTS.remove(RW_INTERESTS), None);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14522,"byte_end":14578,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14583,"byte_end":14590,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14809,"byte_end":14820,"line_start":98,"line_end":98,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable readiness.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14733,"byte_end":14791,"line_start":97,"line_end":97,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14963,"byte_end":14974,"line_start":103,"line_end":103,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable readiness.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":14887,"byte_end":14945,"line_start":102,"line_end":102,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":15112,"byte_end":15118,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"name":"is_aio","qualname":"<Interest>::is_aio","value":"pub const fn is_aio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains AIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains AIO readiness","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":15041,"byte_end":15094,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":15251,"byte_end":15257,"line_start":113,"line_end":113,"column_start":18,"column_end":24},"name":"is_lio","qualname":"<Interest>::is_lio","value":"pub const fn is_lio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains LIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains LIO readiness","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":15180,"byte_end":15233,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":79},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27712,"byte_end":27716,"line_start":249,"line_end":249,"column_start":12,"column_end":16},"name":"Poll","qualname":"::poll::Poll","value":"Poll {  }","parent":null,"children":[{"krate":0,"index":80}],"decl_id":null,"docs":" Polls for readiness events on all registered values.","sig":null,"attributes":[{"value":"/ Polls for readiness events on all registered values.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":16956,"byte_end":17012,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17013,"byte_end":17016,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Poll` allows a program to monitor a large number of [`event::Source`]s,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17017,"byte_end":17093,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ waiting until one or more become \"ready\" for some class of operations; e.g.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17094,"byte_end":17173,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ reading and writing. An event source is considered ready if it is possible","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17174,"byte_end":17252,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ to immediately perform a corresponding operation; e.g. [`read`] or","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17253,"byte_end":17323,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17324,"byte_end":17338,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17339,"byte_end":17342,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To use `Poll`, an `event::Source` must first be registered with the `Poll`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17343,"byte_end":17421,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ instance using the [`register`] method on its associated `Register`,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17422,"byte_end":17494,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ supplying readiness interest. The readiness interest tells `Poll` which","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17495,"byte_end":17570,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ specific operations on the handle to monitor for readiness. A `Token` is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17571,"byte_end":17647,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ also passed to the [`register`] function. When `Poll` returns a readiness","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17648,"byte_end":17725,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ event, it will include this token.  This associates the event with the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17726,"byte_end":17800,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ event source that generated the event.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17801,"byte_end":17843,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17844,"byte_end":17847,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17848,"byte_end":17896,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ [`read`]: ./net/struct.TcpStream.html#method.read","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17897,"byte_end":17950,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ [`write`]: ./net/struct.TcpStream.html#method.write","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":17951,"byte_end":18006,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18007,"byte_end":18061,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18062,"byte_end":18065,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18066,"byte_end":18080,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18081,"byte_end":18084,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18085,"byte_end":18146,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18147,"byte_end":18150,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18298,"byte_end":18326,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18327,"byte_end":18374,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18375,"byte_end":18420,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18421,"byte_end":18449,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18450,"byte_end":18453,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use std::net::{self, SocketAddr};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18454,"byte_end":18491,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18492,"byte_end":18495,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18496,"byte_end":18538,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18539,"byte_end":18589,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ let server = net::TcpListener::bind(addr)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18590,"byte_end":18637,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18638,"byte_end":18641,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18642,"byte_end":18719,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18720,"byte_end":18752,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18753,"byte_end":18802,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18803,"byte_end":18806,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Connect the stream","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18807,"byte_end":18832,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ let mut stream = TcpStream::connect(server.local_addr()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18833,"byte_end":18896,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18897,"byte_end":18900,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18901,"byte_end":18939,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":18940,"byte_end":19034,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19035,"byte_end":19038,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19039,"byte_end":19115,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19116,"byte_end":19147,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/ loop {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19148,"byte_end":19158,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19159,"byte_end":19197,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19198,"byte_end":19201,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19202,"byte_end":19232,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19233,"byte_end":19298,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19299,"byte_end":19378,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/             // wakeup)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19379,"byte_end":19405,"line_start":64,"line_end":64,"column_start":1,"column_end":27}},{"value":"/             return Ok(());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19406,"byte_end":19436,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19437,"byte_end":19450,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19451,"byte_end":19460,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19461,"byte_end":19466,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19467,"byte_end":19474,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19475,"byte_end":19482,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19483,"byte_end":19486,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19487,"byte_end":19504,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19505,"byte_end":19508,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Using `Poll` provides a portable interface across supported platforms as","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19509,"byte_end":19585,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ long as the caller takes the following into consideration:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19586,"byte_end":19648,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19649,"byte_end":19652,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Spurious events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19653,"byte_end":19676,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19677,"byte_end":19680,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`] may return readiness events even if the associated","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19681,"byte_end":19750,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ event source is not actually ready. Given the same code, this may","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19751,"byte_end":19820,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ happen more on some platforms than others. It is important to never assume","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19821,"byte_end":19899,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ that, just because a readiness event was received, that the associated","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19900,"byte_end":19974,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ operation will succeed as well.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":19975,"byte_end":20010,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20011,"byte_end":20014,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ If operation fails with [`WouldBlock`], then the caller should not treat","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20015,"byte_end":20091,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ this as an error, but instead should wait until another readiness event is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20092,"byte_end":20170,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ received.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20171,"byte_end":20184,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20185,"byte_end":20188,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Draining readiness","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20189,"byte_end":20215,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20216,"byte_end":20219,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Once a readiness event is received, the corresponding operation must be","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20220,"byte_end":20295,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ performed repeatedly until it returns [`WouldBlock`]. Unless this is done,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20296,"byte_end":20374,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ there is no guarantee that another readiness event will be delivered, even","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20375,"byte_end":20453,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ if further data is received for the event source.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20454,"byte_end":20507,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20508,"byte_end":20511,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20512,"byte_end":20562,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20563,"byte_end":20566,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ### Readiness operations","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20567,"byte_end":20595,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20596,"byte_end":20599,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The only readiness operations that are guaranteed to be present on all","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20600,"byte_end":20674,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ supported platforms are [`readable`] and [`writable`]. All other readiness","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20675,"byte_end":20753,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ operations may have false negatives and as such should be considered","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20754,"byte_end":20826,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/ **hints**. This means that if a socket is registered with [`readable`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20827,"byte_end":20901,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ interest and either an error or close is received, a readiness event will","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20902,"byte_end":20979,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ be generated for the socket, but it **may** only include `readable`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":20980,"byte_end":21051,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ readiness. Also note that, given the potential for spurious events,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21052,"byte_end":21123,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ receiving a readiness event with `read_closed`, `write_closed`, or `error`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21124,"byte_end":21202,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ doesn't actually mean that a `read` on the socket will return a result","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21203,"byte_end":21277,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ matching the readiness event.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21278,"byte_end":21311,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21312,"byte_end":21315,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ In other words, portable programs that explicitly check for [`read_closed`],","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21316,"byte_end":21396,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ [`write_closed`], or [`error`] readiness should be doing so as an","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21397,"byte_end":21466,"line_start":112,"line_end":112,"column_start":1,"column_end":70}},{"value":"/ **optimization** and always be able to handle an error or close situation","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21467,"byte_end":21544,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ when performing the actual read operation.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21545,"byte_end":21591,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21592,"byte_end":21595,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21596,"byte_end":21658,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/ [`writable`]: ./event/struct.Event.html#method.is_writable","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21659,"byte_end":21721,"line_start":117,"line_end":117,"column_start":1,"column_end":63}},{"value":"/ [`error`]: ./event/struct.Event.html#method.is_error","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21722,"byte_end":21778,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ [`read_closed`]: ./event/struct.Event.html#method.is_read_closed","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21779,"byte_end":21847,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ [`write_closed`]: ./event/struct.Event.html#method.is_write_closed","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21848,"byte_end":21918,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21919,"byte_end":21922,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ### Registering handles","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21923,"byte_end":21950,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21951,"byte_end":21954,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Unless otherwise noted, it should be assumed that types implementing","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":21955,"byte_end":22027,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ [`event::Source`] will never become ready unless they are registered with","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22028,"byte_end":22105,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ `Poll`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22106,"byte_end":22117,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22118,"byte_end":22121,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22122,"byte_end":22138,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22139,"byte_end":22142,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22290,"byte_end":22318,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/ # use std::net;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22319,"byte_end":22338,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22339,"byte_end":22386,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22387,"byte_end":22424,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22425,"byte_end":22453,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22454,"byte_end":22483,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22484,"byte_end":22512,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22513,"byte_end":22533,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22534,"byte_end":22537,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22538,"byte_end":22591,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22592,"byte_end":22644,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/ let mut sock = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22645,"byte_end":22708,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22709,"byte_end":22712,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ thread::sleep(Duration::from_secs(1));","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22713,"byte_end":22755,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22756,"byte_end":22759,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22760,"byte_end":22788,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22789,"byte_end":22792,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // The connect is not guaranteed to have started until it is registered at","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22793,"byte_end":22871,"line_start":149,"line_end":149,"column_start":1,"column_end":79}},{"value":"/ // this point","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22872,"byte_end":22889,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ poll.registry().register(&mut sock, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22890,"byte_end":22982,"line_start":151,"line_end":151,"column_start":1,"column_end":93}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":22983,"byte_end":22999,"line_start":152,"line_end":152,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23000,"byte_end":23007,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23008,"byte_end":23015,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23016,"byte_end":23019,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ### Dropping `Poll`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23020,"byte_end":23043,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23044,"byte_end":23047,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When the `Poll` instance is dropped it may cancel in-flight operations for","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23048,"byte_end":23126,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ the registered [event sources], meaning that no further events for them may","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23127,"byte_end":23206,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ be received. It also means operations on the registered event sources may no","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23207,"byte_end":23287,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ longer work. It is up to the user to keep the `Poll` instance alive while","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23288,"byte_end":23365,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ registered event sources are being used.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23366,"byte_end":23410,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23411,"byte_end":23414,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [event sources]: ./event/trait.Source.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23415,"byte_end":23461,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23462,"byte_end":23465,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ### Accessing raw fd/socket/handle","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23466,"byte_end":23504,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23505,"byte_end":23508,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Mio makes it possible for many types to be converted into a raw file","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23509,"byte_end":23581,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/ descriptor (fd, Unix), socket (Windows) or handle (Windows). This makes it","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23582,"byte_end":23660,"line_start":169,"line_end":169,"column_start":1,"column_end":79}},{"value":"/ possible to support more operations on the type than Mio supports, for","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23661,"byte_end":23735,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ example it makes [mio-aio] possible. However accessing the raw fd is not","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23736,"byte_end":23812,"line_start":171,"line_end":171,"column_start":1,"column_end":77}},{"value":"/ without it's pitfalls.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23813,"byte_end":23839,"line_start":172,"line_end":172,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23840,"byte_end":23843,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Specifically performing I/O operations outside of Mio on these types (via","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23844,"byte_end":23921,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ the raw fd) has unspecified behaviour. It could cause no more events to be","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":23922,"byte_end":24000,"line_start":175,"line_end":175,"column_start":1,"column_end":79}},{"value":"/ generated for the type even though it returned `WouldBlock` (in an operation","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24001,"byte_end":24081,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ directly accessing the fd). The behaviour is OS specific and Mio can only","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24082,"byte_end":24159,"line_start":177,"line_end":177,"column_start":1,"column_end":78}},{"value":"/ guarantee cross-platform behaviour if it can control the I/O.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24160,"byte_end":24225,"line_start":178,"line_end":178,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24226,"byte_end":24229,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ [mio-aio]: https://github.com/asomers/mio-aio","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24230,"byte_end":24279,"line_start":180,"line_end":180,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24280,"byte_end":24283,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ *The following is **not** guaranteed, just a description of the current","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24284,"byte_end":24359,"line_start":182,"line_end":182,"column_start":1,"column_end":76}},{"value":"/ situation!* Mio is allowed to change the following without it being considered","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24360,"byte_end":24442,"line_start":183,"line_end":183,"column_start":1,"column_end":83}},{"value":"/ a breaking change, don't depend on this, it's just here to inform the user.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24443,"byte_end":24522,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"/ Currently the kqueue and epoll implementation support direct I/O operations","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24523,"byte_end":24602,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/ on the fd without Mio's knowledge. Windows however needs **all** I/O","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24603,"byte_end":24675,"line_start":186,"line_end":186,"column_start":1,"column_end":73}},{"value":"/ operations to go through Mio otherwise it is not able to update it's","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24676,"byte_end":24748,"line_start":187,"line_end":187,"column_start":1,"column_end":73}},{"value":"/ internal state properly and won't generate events.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24749,"byte_end":24803,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24804,"byte_end":24807,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ ### Polling without registering event sources","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24808,"byte_end":24857,"line_start":190,"line_end":190,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24858,"byte_end":24861,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24862,"byte_end":24865,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ *The following is **not** guaranteed, just a description of the current","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24866,"byte_end":24941,"line_start":193,"line_end":193,"column_start":1,"column_end":76}},{"value":"/ situation!* Mio is allowed to change the following without it being","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":24942,"byte_end":25013,"line_start":194,"line_end":194,"column_start":1,"column_end":72}},{"value":"/ considered a breaking change, don't depend on this, it's just here to inform","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25014,"byte_end":25094,"line_start":195,"line_end":195,"column_start":1,"column_end":81}},{"value":"/ the user. On platforms that use epoll, kqueue or IOCP (see implementation","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25095,"byte_end":25172,"line_start":196,"line_end":196,"column_start":1,"column_end":78}},{"value":"/ notes below) polling without previously registering [event sources] will","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25173,"byte_end":25249,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/ result in sleeping forever, only a process signal will be able to wake up","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25250,"byte_end":25327,"line_start":198,"line_end":198,"column_start":1,"column_end":78}},{"value":"/ the thread.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25328,"byte_end":25343,"line_start":199,"line_end":199,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25344,"byte_end":25347,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ On WASM/WASI this is different as it doesn't support process signals,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25348,"byte_end":25421,"line_start":201,"line_end":201,"column_start":1,"column_end":74}},{"value":"/ furthermore the WASI specification doesn't specify a behaviour in this","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25422,"byte_end":25496,"line_start":202,"line_end":202,"column_start":1,"column_end":75}},{"value":"/ situation, thus it's up to the implementation what to do here. As an","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25497,"byte_end":25569,"line_start":203,"line_end":203,"column_start":1,"column_end":73}},{"value":"/ example, the wasmtime runtime will return `EINVAL` in this situation, but","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25570,"byte_end":25647,"line_start":204,"line_end":204,"column_start":1,"column_end":78}},{"value":"/ different runtimes may return different results. If you have further","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25648,"byte_end":25720,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/ insights or thoughts about this situation (and/or how Mio should handle it)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25721,"byte_end":25800,"line_start":206,"line_end":206,"column_start":1,"column_end":80}},{"value":"/ please add you comment to [pull request#1580].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25801,"byte_end":25851,"line_start":207,"line_end":207,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25852,"byte_end":25855,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ [event sources]: crate::event::Source","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25856,"byte_end":25897,"line_start":209,"line_end":209,"column_start":1,"column_end":42}},{"value":"/ [pull request#1580]: https://github.com/tokio-rs/mio/pull/1580","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25898,"byte_end":25964,"line_start":210,"line_end":210,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25965,"byte_end":25968,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25969,"byte_end":25995,"line_start":212,"line_end":212,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":25996,"byte_end":25999,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ `Poll` is backed by the selector provided by the operating system.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26000,"byte_end":26070,"line_start":214,"line_end":214,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26071,"byte_end":26074,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ |      OS       |  Selector |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26075,"byte_end":26108,"line_start":216,"line_end":216,"column_start":1,"column_end":34}},{"value":"/ |---------------|-----------|","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26109,"byte_end":26142,"line_start":217,"line_end":217,"column_start":1,"column_end":34}},{"value":"/ | Android       | [epoll]   |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26143,"byte_end":26176,"line_start":218,"line_end":218,"column_start":1,"column_end":34}},{"value":"/ | DragonFly BSD | [kqueue]  |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26177,"byte_end":26210,"line_start":219,"line_end":219,"column_start":1,"column_end":34}},{"value":"/ | FreeBSD       | [kqueue]  |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26211,"byte_end":26244,"line_start":220,"line_end":220,"column_start":1,"column_end":34}},{"value":"/ | iOS           | [kqueue]  |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26245,"byte_end":26278,"line_start":221,"line_end":221,"column_start":1,"column_end":34}},{"value":"/ | illumos       | [epoll]   |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26279,"byte_end":26312,"line_start":222,"line_end":222,"column_start":1,"column_end":34}},{"value":"/ | Linux         | [epoll]   |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26313,"byte_end":26346,"line_start":223,"line_end":223,"column_start":1,"column_end":34}},{"value":"/ | NetBSD        | [kqueue]  |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26347,"byte_end":26380,"line_start":224,"line_end":224,"column_start":1,"column_end":34}},{"value":"/ | OpenBSD       | [kqueue]  |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26381,"byte_end":26414,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/ | Windows       | [IOCP]    |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26415,"byte_end":26448,"line_start":226,"line_end":226,"column_start":1,"column_end":34}},{"value":"/ | macOS         | [kqueue]  |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26449,"byte_end":26482,"line_start":227,"line_end":227,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26483,"byte_end":26486,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ On all supported platforms, socket operations are handled by using the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26487,"byte_end":26561,"line_start":229,"line_end":229,"column_start":1,"column_end":75}},{"value":"/ system selector. Platform specific extensions (e.g. [`SourceFd`]) allow","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26562,"byte_end":26637,"line_start":230,"line_end":230,"column_start":1,"column_end":76}},{"value":"/ accessing other features provided by individual system selectors. For","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26638,"byte_end":26711,"line_start":231,"line_end":231,"column_start":1,"column_end":74}},{"value":"/ example, Linux's [`signalfd`] feature can be used by registering the FD with","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26712,"byte_end":26792,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/ `Poll` via [`SourceFd`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26793,"byte_end":26821,"line_start":233,"line_end":233,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26822,"byte_end":26825,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ On all platforms except windows, a call to [`Poll::poll`] is mostly just a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26826,"byte_end":26904,"line_start":235,"line_end":235,"column_start":1,"column_end":79}},{"value":"/ direct call to the system selector. However, [IOCP] uses a completion model","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26905,"byte_end":26984,"line_start":236,"line_end":236,"column_start":1,"column_end":80}},{"value":"/ instead of a readiness model. In this case, `Poll` must adapt the completion","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":26985,"byte_end":27065,"line_start":237,"line_end":237,"column_start":1,"column_end":81}},{"value":"/ model Mio's API. While non-trivial, the bridge layer is still quite","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27066,"byte_end":27137,"line_start":238,"line_end":238,"column_start":1,"column_end":72}},{"value":"/ efficient. The most expensive part being calls to `read` and `write` require","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27138,"byte_end":27218,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/ data to be copied into an intermediate buffer before it is passed to the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27219,"byte_end":27295,"line_start":240,"line_end":240,"column_start":1,"column_end":77}},{"value":"/ kernel.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27296,"byte_end":27307,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27308,"byte_end":27311,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27312,"byte_end":27375,"line_start":243,"line_end":243,"column_start":1,"column_end":64}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27376,"byte_end":27448,"line_start":244,"line_end":244,"column_start":1,"column_end":73}},{"value":"/ [IOCP]: https://docs.microsoft.com/en-us/windows/win32/fileio/i-o-completion-ports","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27449,"byte_end":27535,"line_start":245,"line_end":245,"column_start":1,"column_end":87}},{"value":"/ [`signalfd`]: https://man7.org/linux/man-pages/man2/signalfd.2.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27536,"byte_end":27607,"line_start":246,"line_end":246,"column_start":1,"column_end":72}},{"value":"/ [`SourceFd`]: unix/struct.SourceFd.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27608,"byte_end":27651,"line_start":247,"line_end":247,"column_start":1,"column_end":44}},{"value":"/ [`Poll::poll`]: struct.Poll.html#method.poll","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27652,"byte_end":27700,"line_start":248,"line_end":248,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27786,"byte_end":27794,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"Registry","qualname":"::poll::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" Registers I/O resources.\n","sig":null,"attributes":[{"value":"/ Registers I/O resources.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27746,"byte_end":27774,"line_start":253,"line_end":253,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29109,"byte_end":29112,"line_start":293,"line_end":293,"column_start":16,"column_end":19},"name":"new","qualname":"<Poll>::new","value":"pub fn new() -> io::Result<Poll>","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Poll` handle.","sig":null,"attributes":[{"value":"cfg(feature = \"os-poll\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/macros.rs","byte_start":9773,"byte_end":9800,"line_start":10,"line_end":10,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29377,"byte_end":29385,"line_start":302,"line_end":302,"column_start":12,"column_end":20},"name":"registry","qualname":"<Poll>::registry","value":"pub fn registry(&Self) -> &Registry","parent":null,"children":[],"decl_id":null,"docs":" Create a separate `Registry` which can be used to register\n `event::Source`s.\n","sig":null,"attributes":[{"value":"/ Create a separate `Registry` which can be used to register","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29277,"byte_end":29339,"line_start":300,"line_end":300,"column_start":5,"column_end":67}},{"value":"/ `event::Source`s.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29344,"byte_end":29365,"line_start":301,"line_end":301,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33305,"byte_end":33309,"line_start":399,"line_end":399,"column_start":12,"column_end":16},"name":"poll","qualname":"<Poll>::poll","value":"pub fn poll(&mut Self, &mut Events, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for readiness events","sig":null,"attributes":[{"value":"/ Wait for readiness events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29442,"byte_end":29471,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29476,"byte_end":29479,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Blocks the current thread and waits for readiness events for any of the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29484,"byte_end":29559,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ [`event::Source`]s that have been registered with this `Poll` instance.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29564,"byte_end":29639,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/ The function will block until either at least one readiness event has","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29644,"byte_end":29717,"line_start":310,"line_end":310,"column_start":5,"column_end":78}},{"value":"/ been received or `timeout` has elapsed. A `timeout` of `None` means that","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29722,"byte_end":29798,"line_start":311,"line_end":311,"column_start":5,"column_end":81}},{"value":"/ `poll` will block until a readiness event has been received.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29803,"byte_end":29867,"line_start":312,"line_end":312,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29872,"byte_end":29875,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The supplied `events` will be cleared and newly received readiness events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29880,"byte_end":29957,"line_start":314,"line_end":314,"column_start":5,"column_end":82}},{"value":"/ will be pushed onto the end. At most `events.capacity()` events will be","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":29962,"byte_end":30037,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ returned. If there are further pending readiness events, they will be","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30042,"byte_end":30115,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ returned on the next call to `poll`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30120,"byte_end":30160,"line_start":317,"line_end":317,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30165,"byte_end":30168,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ A single call to `poll` may result in multiple readiness events being","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30173,"byte_end":30246,"line_start":319,"line_end":319,"column_start":5,"column_end":78}},{"value":"/ returned for a single event source. For example, if a TCP socket becomes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30251,"byte_end":30327,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/ both readable and writable, it may be possible for a single readiness","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30332,"byte_end":30405,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ event to be returned with both [`readable`] and [`writable`] readiness","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30410,"byte_end":30484,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/ **OR** two separate events may be returned, one with [`readable`] set","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30489,"byte_end":30562,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ and one with [`writable`] set.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30567,"byte_end":30601,"line_start":324,"line_end":324,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30606,"byte_end":30609,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Note that the `timeout` will be rounded up to the system clock","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30614,"byte_end":30680,"line_start":326,"line_end":326,"column_start":5,"column_end":71}},{"value":"/ granularity (usually 1ms), and kernel scheduling delays mean that","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30685,"byte_end":30754,"line_start":327,"line_end":327,"column_start":5,"column_end":74}},{"value":"/ the blocking interval may be overrun by a small amount.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30759,"byte_end":30818,"line_start":328,"line_end":328,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30823,"byte_end":30826,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ See the [struct] level documentation for a higher level discussion of","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30831,"byte_end":30904,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/ polling.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30909,"byte_end":30921,"line_start":331,"line_end":331,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30926,"byte_end":30929,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30934,"byte_end":30982,"line_start":333,"line_end":333,"column_start":5,"column_end":53}},{"value":"/ [`readable`]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":30987,"byte_end":31053,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/ [`writable`]: struct.Interest.html#associatedconstant.WRITABLE","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31058,"byte_end":31124,"line_start":335,"line_end":335,"column_start":5,"column_end":71}},{"value":"/ [struct]: struct.Poll.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31129,"byte_end":31159,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/ [`iter`]: ./event/struct.Events.html#method.iter","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31164,"byte_end":31216,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31221,"byte_end":31224,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31229,"byte_end":31240,"line_start":339,"line_end":339,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31245,"byte_end":31248,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ This returns any errors without attempting to retry, previous versions","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31253,"byte_end":31327,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/ of Mio would automatically retry the poll call if it was interrupted","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31332,"byte_end":31404,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ (if `EINTR` was returned).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31409,"byte_end":31439,"line_start":343,"line_end":343,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31444,"byte_end":31447,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31452,"byte_end":31466,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31471,"byte_end":31474,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31479,"byte_end":31540,"line_start":347,"line_end":347,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31545,"byte_end":31548,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31708,"byte_end":31736,"line_start":351,"line_end":351,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31741,"byte_end":31788,"line_start":352,"line_end":352,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31793,"byte_end":31838,"line_start":353,"line_end":353,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31843,"byte_end":31871,"line_start":354,"line_end":354,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31876,"byte_end":31879,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31884,"byte_end":31928,"line_start":356,"line_end":356,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31933,"byte_end":31953,"line_start":357,"line_end":357,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31958,"byte_end":31961,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":31966,"byte_end":32008,"line_start":359,"line_end":359,"column_start":5,"column_end":47}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32013,"byte_end":32063,"line_start":360,"line_end":360,"column_start":5,"column_end":55}},{"value":"/ let server = TcpListener::bind(addr)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32068,"byte_end":32110,"line_start":361,"line_end":361,"column_start":5,"column_end":47}},{"value":"/ let addr = server.local_addr()?.clone();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32115,"byte_end":32159,"line_start":362,"line_end":362,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32164,"byte_end":32167,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ // Spawn a thread to accept the socket","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32172,"byte_end":32214,"line_start":364,"line_end":364,"column_start":5,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32219,"byte_end":32246,"line_start":365,"line_end":365,"column_start":5,"column_end":32}},{"value":"/     let _ = server.accept();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32251,"byte_end":32283,"line_start":366,"line_end":366,"column_start":5,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32288,"byte_end":32295,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32300,"byte_end":32303,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32308,"byte_end":32385,"line_start":369,"line_end":369,"column_start":5,"column_end":82}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32390,"byte_end":32422,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32427,"byte_end":32476,"line_start":371,"line_end":371,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32481,"byte_end":32484,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Connect the stream","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32489,"byte_end":32514,"line_start":373,"line_end":373,"column_start":5,"column_end":30}},{"value":"/ let mut stream = TcpStream::connect(addr)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32519,"byte_end":32566,"line_start":374,"line_end":374,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32571,"byte_end":32574,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32579,"byte_end":32617,"line_start":376,"line_end":376,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32622,"byte_end":32651,"line_start":377,"line_end":377,"column_start":5,"column_end":34}},{"value":"/     &mut stream,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32656,"byte_end":32676,"line_start":378,"line_end":378,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32681,"byte_end":32698,"line_start":379,"line_end":379,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32703,"byte_end":32753,"line_start":380,"line_end":380,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32758,"byte_end":32761,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32766,"byte_end":32842,"line_start":382,"line_end":382,"column_start":5,"column_end":81}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32847,"byte_end":32878,"line_start":383,"line_end":383,"column_start":5,"column_end":36}},{"value":"/ loop {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32883,"byte_end":32893,"line_start":384,"line_end":384,"column_start":5,"column_end":15}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32898,"byte_end":32936,"line_start":385,"line_end":385,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32941,"byte_end":32944,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32949,"byte_end":32979,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":32984,"byte_end":33049,"line_start":388,"line_end":388,"column_start":5,"column_end":70}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33054,"byte_end":33133,"line_start":389,"line_end":389,"column_start":5,"column_end":84}},{"value":"/             // wakeup)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33138,"byte_end":33164,"line_start":390,"line_end":390,"column_start":5,"column_end":31}},{"value":"/             return Ok(());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33169,"byte_end":33199,"line_start":391,"line_end":391,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33204,"byte_end":33217,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33222,"byte_end":33231,"line_start":393,"line_end":393,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33236,"byte_end":33241,"line_start":394,"line_end":394,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33246,"byte_end":33253,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33258,"byte_end":33265,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33270,"byte_end":33273,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ [struct]: #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33278,"byte_end":33293,"line_start":398,"line_end":398,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37733,"byte_end":37741,"line_start":517,"line_end":517,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"pub fn register<S>(&Self, &mut S, Token, Interest) -> io::Result<()> where\nS: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33737,"byte_end":33796,"line_start":418,"line_end":418,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33801,"byte_end":33804,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Once registered, the `Poll` instance will monitor the event source for","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33809,"byte_end":33883,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ readiness state changes. When it notices a state change, it will return","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33888,"byte_end":33963,"line_start":421,"line_end":421,"column_start":5,"column_end":80}},{"value":"/ a readiness event for the handle the next time [`poll`] is called.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33968,"byte_end":34038,"line_start":422,"line_end":422,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34043,"byte_end":34046,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ See [`Poll`] docs for a high level overview.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34051,"byte_end":34099,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34104,"byte_end":34107,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34112,"byte_end":34127,"line_start":426,"line_end":426,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34132,"byte_end":34135,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ `source: &mut S: event::Source`: This is the source of events that the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34140,"byte_end":34214,"line_start":428,"line_end":428,"column_start":5,"column_end":79}},{"value":"/ `Poll` instance should monitor for readiness state changes.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34219,"byte_end":34282,"line_start":429,"line_end":429,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34287,"byte_end":34290,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ `token: Token`: The caller picks a token to associate with the socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34295,"byte_end":34369,"line_start":431,"line_end":431,"column_start":5,"column_end":79}},{"value":"/ When [`poll`] returns an event for the handle, this token is included.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34374,"byte_end":34448,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/ This allows the caller to map the event to its source. The token","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34453,"byte_end":34521,"line_start":433,"line_end":433,"column_start":5,"column_end":73}},{"value":"/ associated with the `event::Source` can be changed at any time by","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34526,"byte_end":34595,"line_start":434,"line_end":434,"column_start":5,"column_end":74}},{"value":"/ calling [`reregister`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34600,"byte_end":34627,"line_start":435,"line_end":435,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34632,"byte_end":34635,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ See documentation on [`Token`] for an example showing how to pick","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34640,"byte_end":34709,"line_start":437,"line_end":437,"column_start":5,"column_end":74}},{"value":"/ [`Token`] values.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34714,"byte_end":34735,"line_start":438,"line_end":438,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34740,"byte_end":34743,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ `interest: Interest`: Specifies which operations `Poll` should monitor","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34748,"byte_end":34822,"line_start":440,"line_end":440,"column_start":5,"column_end":79}},{"value":"/ for readiness. `Poll` will only return readiness events for operations","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34827,"byte_end":34901,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/ specified by this argument.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34906,"byte_end":34937,"line_start":442,"line_end":442,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34942,"byte_end":34945,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ If a socket is registered with readable interest and the socket becomes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":34950,"byte_end":35025,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ writable, no event will be returned from [`poll`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35030,"byte_end":35084,"line_start":445,"line_end":445,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35089,"byte_end":35092,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The readiness interest for an `event::Source` can be changed at any time","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35097,"byte_end":35173,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ by calling [`reregister`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35178,"byte_end":35208,"line_start":448,"line_end":448,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35213,"byte_end":35216,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35221,"byte_end":35232,"line_start":450,"line_end":450,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35237,"byte_end":35240,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure that if a source being registered with a `Poll`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35245,"byte_end":35316,"line_start":452,"line_end":452,"column_start":5,"column_end":76}},{"value":"/ instance was previously registered with that `Poll` instance, then a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35321,"byte_end":35393,"line_start":453,"line_end":453,"column_start":5,"column_end":77}},{"value":"/ call to [`deregister`] has already occurred. Consecutive calls to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35398,"byte_end":35467,"line_start":454,"line_end":454,"column_start":5,"column_end":74}},{"value":"/ `register` is unspecified behavior.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35472,"byte_end":35511,"line_start":455,"line_end":455,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35516,"byte_end":35519,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ Unless otherwise specified, the caller should assume that once an event","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35524,"byte_end":35599,"line_start":457,"line_end":457,"column_start":5,"column_end":80}},{"value":"/ source is registered with a `Poll` instance, it is bound to that `Poll`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35604,"byte_end":35679,"line_start":458,"line_end":458,"column_start":5,"column_end":80}},{"value":"/ instance for the lifetime of the event source. This remains true even","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35684,"byte_end":35757,"line_start":459,"line_end":459,"column_start":5,"column_end":78}},{"value":"/ if the event source is deregistered from the poll instance using","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35762,"byte_end":35830,"line_start":460,"line_end":460,"column_start":5,"column_end":73}},{"value":"/ [`deregister`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35835,"byte_end":35854,"line_start":461,"line_end":461,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35859,"byte_end":35862,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35867,"byte_end":35915,"line_start":463,"line_end":463,"column_start":5,"column_end":53}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35920,"byte_end":35962,"line_start":464,"line_end":464,"column_start":5,"column_end":47}},{"value":"/ [`reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":35967,"byte_end":36025,"line_start":465,"line_end":465,"column_start":5,"column_end":63}},{"value":"/ [`deregister`]: struct.Registry.html#method.deregister","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36030,"byte_end":36088,"line_start":466,"line_end":466,"column_start":5,"column_end":63}},{"value":"/ [`Token`]: struct.Token.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36093,"byte_end":36125,"line_start":467,"line_end":467,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36130,"byte_end":36133,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36138,"byte_end":36152,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36157,"byte_end":36160,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36320,"byte_end":36348,"line_start":473,"line_end":473,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36353,"byte_end":36372,"line_start":474,"line_end":474,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36377,"byte_end":36424,"line_start":475,"line_end":475,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36429,"byte_end":36474,"line_start":476,"line_end":476,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36479,"byte_end":36507,"line_start":477,"line_end":477,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36512,"byte_end":36541,"line_start":478,"line_end":478,"column_start":5,"column_end":34}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36546,"byte_end":36585,"line_start":479,"line_end":479,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36590,"byte_end":36593,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36598,"byte_end":36630,"line_start":481,"line_end":481,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36635,"byte_end":36638,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36643,"byte_end":36696,"line_start":483,"line_end":483,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36701,"byte_end":36753,"line_start":484,"line_end":484,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36758,"byte_end":36823,"line_start":485,"line_end":485,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36828,"byte_end":36831,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36836,"byte_end":36874,"line_start":487,"line_end":487,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36879,"byte_end":36908,"line_start":488,"line_end":488,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36913,"byte_end":36933,"line_start":489,"line_end":489,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36938,"byte_end":36955,"line_start":490,"line_end":490,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":36960,"byte_end":37010,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37015,"byte_end":37018,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37023,"byte_end":37072,"line_start":493,"line_end":493,"column_start":5,"column_end":54}},{"value":"/ let start = Instant::now();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37077,"byte_end":37108,"line_start":494,"line_end":494,"column_start":5,"column_end":36}},{"value":"/ let timeout = Duration::from_millis(500);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37113,"byte_end":37158,"line_start":495,"line_end":495,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37163,"byte_end":37166,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37171,"byte_end":37181,"line_start":497,"line_end":497,"column_start":5,"column_end":15}},{"value":"/     let elapsed = start.elapsed();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37186,"byte_end":37224,"line_start":498,"line_end":498,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37229,"byte_end":37232,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/     if elapsed >= timeout {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37237,"byte_end":37268,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/         // Connection timed out","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37273,"byte_end":37308,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/         return Ok(());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37313,"byte_end":37339,"line_start":502,"line_end":502,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37344,"byte_end":37353,"line_start":503,"line_end":503,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37358,"byte_end":37361,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     let remaining = timeout - elapsed;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37366,"byte_end":37408,"line_start":505,"line_end":505,"column_start":5,"column_end":47}},{"value":"/     poll.poll(&mut events, Some(remaining))?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37413,"byte_end":37462,"line_start":506,"line_end":506,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37467,"byte_end":37470,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37475,"byte_end":37505,"line_start":508,"line_end":508,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37510,"byte_end":37552,"line_start":509,"line_end":509,"column_start":5,"column_end":47}},{"value":"/             // Something (probably) happened on the socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37557,"byte_end":37620,"line_start":510,"line_end":510,"column_start":5,"column_end":68}},{"value":"/             return Ok(());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37625,"byte_end":37655,"line_start":511,"line_end":511,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37660,"byte_end":37673,"line_start":512,"line_end":512,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37678,"byte_end":37687,"line_start":513,"line_end":513,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37692,"byte_end":37697,"line_start":514,"line_end":514,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37702,"byte_end":37709,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":37714,"byte_end":37721,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40409,"byte_end":40419,"line_start":585,"line_end":585,"column_start":12,"column_end":22},"name":"reregister","qualname":"<Registry>::reregister","value":"pub fn reregister<S>(&Self, &mut S, Token, Interest) -> io::Result<()> where\nS: event::Source + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Re-register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Re-register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38079,"byte_end":38141,"line_start":529,"line_end":529,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38146,"byte_end":38149,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Re-registering an event source allows changing the details of the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38154,"byte_end":38223,"line_start":531,"line_end":531,"column_start":5,"column_end":74}},{"value":"/ registration. Specifically, it allows updating the associated `token`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38228,"byte_end":38301,"line_start":532,"line_end":532,"column_start":5,"column_end":78}},{"value":"/ and `interests` specified in previous `register` and `reregister` calls.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38306,"byte_end":38382,"line_start":533,"line_end":533,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38387,"byte_end":38390,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ The `reregister` arguments fully override the previous values. In other","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38395,"byte_end":38470,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ words, if a socket is registered with [`readable`] interest and the call","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38475,"byte_end":38551,"line_start":536,"line_end":536,"column_start":5,"column_end":81}},{"value":"/ to `reregister` specifies [`writable`], then read interest is no longer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38556,"byte_end":38631,"line_start":537,"line_end":537,"column_start":5,"column_end":80}},{"value":"/ requested for the handle.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38636,"byte_end":38665,"line_start":538,"line_end":538,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38670,"byte_end":38673,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38678,"byte_end":38754,"line_start":540,"line_end":540,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is unspecified.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38759,"byte_end":38812,"line_start":541,"line_end":541,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38817,"byte_end":38820,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ See the [`register`] documentation for details about the function","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38825,"byte_end":38894,"line_start":543,"line_end":543,"column_start":5,"column_end":74}},{"value":"/ arguments and see the [`struct`] docs for a high level overview of","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38899,"byte_end":38969,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/ polling.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38974,"byte_end":38986,"line_start":545,"line_end":545,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38991,"byte_end":38994,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":38999,"byte_end":39013,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39018,"byte_end":39021,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39181,"byte_end":39209,"line_start":551,"line_end":551,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39214,"byte_end":39233,"line_start":552,"line_end":552,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39238,"byte_end":39285,"line_start":553,"line_end":553,"column_start":5,"column_end":52}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39290,"byte_end":39327,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39332,"byte_end":39360,"line_start":555,"line_end":555,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39365,"byte_end":39394,"line_start":556,"line_end":556,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39399,"byte_end":39402,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39407,"byte_end":39435,"line_start":558,"line_end":558,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39440,"byte_end":39443,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39448,"byte_end":39501,"line_start":560,"line_end":560,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39506,"byte_end":39558,"line_start":561,"line_end":561,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39563,"byte_end":39628,"line_start":562,"line_end":562,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39633,"byte_end":39636,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`, requesting readable","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39641,"byte_end":39700,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39705,"byte_end":39734,"line_start":565,"line_end":565,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39739,"byte_end":39759,"line_start":566,"line_end":566,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39764,"byte_end":39781,"line_start":567,"line_end":567,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39786,"byte_end":39815,"line_start":568,"line_end":568,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39820,"byte_end":39823,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ // Reregister the socket specifying write interest instead. Even though","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39828,"byte_end":39903,"line_start":570,"line_end":570,"column_start":5,"column_end":80}},{"value":"/ // the token is the same it must be specified.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39908,"byte_end":39958,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ poll.registry().reregister(","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39963,"byte_end":39994,"line_start":572,"line_end":572,"column_start":5,"column_end":36}},{"value":"/     &mut socket,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":39999,"byte_end":40019,"line_start":573,"line_end":573,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40024,"byte_end":40041,"line_start":574,"line_end":574,"column_start":5,"column_end":22}},{"value":"/     Interest::WRITABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40046,"byte_end":40075,"line_start":575,"line_end":575,"column_start":5,"column_end":34}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40080,"byte_end":40096,"line_start":576,"line_end":576,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40101,"byte_end":40108,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40113,"byte_end":40120,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40125,"byte_end":40128,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40133,"byte_end":40181,"line_start":580,"line_end":580,"column_start":5,"column_end":53}},{"value":"/ [`struct`]: struct.Poll.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40186,"byte_end":40218,"line_start":581,"line_end":581,"column_start":5,"column_end":37}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40223,"byte_end":40277,"line_start":582,"line_end":582,"column_start":5,"column_end":59}},{"value":"/ [`readable`]: ./event/struct.Event.html#is_readable","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40282,"byte_end":40337,"line_start":583,"line_end":583,"column_start":5,"column_end":60}},{"value":"/ [`writable`]: ./event/struct.Event.html#is_writable","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40342,"byte_end":40397,"line_start":584,"line_end":584,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42890,"byte_end":42900,"line_start":648,"line_end":648,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registry>::deregister","value":"pub fn deregister<S>(&Self, &mut S) -> io::Result<()> where S: event::Source +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Deregister an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Deregister an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40761,"byte_end":40822,"line_start":597,"line_end":597,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40827,"byte_end":40830,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ When an event source is deregistered, the `Poll` instance will no longer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40835,"byte_end":40911,"line_start":599,"line_end":599,"column_start":5,"column_end":81}},{"value":"/ monitor it for readiness state changes. Deregistering clears up any","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40916,"byte_end":40987,"line_start":600,"line_end":600,"column_start":5,"column_end":76}},{"value":"/ internal resources needed to track the handle.  After an explicit call","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":40992,"byte_end":41066,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ to this method completes, it is guaranteed that the token previously","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41071,"byte_end":41143,"line_start":602,"line_end":602,"column_start":5,"column_end":77}},{"value":"/ registered to this handle will not be returned by a future poll, so long","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41148,"byte_end":41224,"line_start":603,"line_end":603,"column_start":5,"column_end":81}},{"value":"/ as a happens-before relationship is established between this call and","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41229,"byte_end":41302,"line_start":604,"line_end":604,"column_start":5,"column_end":78}},{"value":"/ the poll.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41307,"byte_end":41320,"line_start":605,"line_end":605,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41325,"byte_end":41328,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41333,"byte_end":41409,"line_start":607,"line_end":607,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is unspecified.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41414,"byte_end":41467,"line_start":608,"line_end":608,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41472,"byte_end":41475,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ A handle can be passed back to `register` after it has been","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41480,"byte_end":41543,"line_start":610,"line_end":610,"column_start":5,"column_end":68}},{"value":"/ deregistered; however, it must be passed back to the **same** `Poll`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41548,"byte_end":41620,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ instance, otherwise the behavior is unspecified.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41625,"byte_end":41677,"line_start":612,"line_end":612,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41682,"byte_end":41685,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41690,"byte_end":41704,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41709,"byte_end":41712,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41872,"byte_end":41900,"line_start":618,"line_end":618,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41905,"byte_end":41924,"line_start":619,"line_end":619,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41929,"byte_end":41976,"line_start":620,"line_end":620,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":41981,"byte_end":42026,"line_start":621,"line_end":621,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42031,"byte_end":42059,"line_start":622,"line_end":622,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42064,"byte_end":42093,"line_start":623,"line_end":623,"column_start":5,"column_end":34}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42098,"byte_end":42126,"line_start":624,"line_end":624,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42131,"byte_end":42134,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42139,"byte_end":42171,"line_start":626,"line_end":626,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42176,"byte_end":42179,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42184,"byte_end":42237,"line_start":628,"line_end":628,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42242,"byte_end":42294,"line_start":629,"line_end":629,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42299,"byte_end":42364,"line_start":630,"line_end":630,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42369,"byte_end":42372,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42377,"byte_end":42415,"line_start":632,"line_end":632,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42420,"byte_end":42449,"line_start":633,"line_end":633,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42454,"byte_end":42474,"line_start":634,"line_end":634,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42479,"byte_end":42496,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42501,"byte_end":42530,"line_start":636,"line_end":636,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42535,"byte_end":42538,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ poll.registry().deregister(&mut socket)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42543,"byte_end":42588,"line_start":638,"line_end":638,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42593,"byte_end":42596,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42601,"byte_end":42650,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42655,"byte_end":42658,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ // Set a timeout because this poll should never receive any events.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42663,"byte_end":42734,"line_start":642,"line_end":642,"column_start":5,"column_end":76}},{"value":"/ poll.poll(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42739,"byte_end":42797,"line_start":643,"line_end":643,"column_start":5,"column_end":63}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42802,"byte_end":42833,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42838,"byte_end":42854,"line_start":645,"line_end":645,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42859,"byte_end":42866,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":42871,"byte_end":42878,"line_start":647,"line_end":647,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":43297,"byte_end":43306,"line_start":660,"line_end":660,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Registry>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned `Registry`.","sig":null,"attributes":[{"value":"/ Creates a new independently owned `Registry`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":43097,"byte_end":43146,"line_start":656,"line_end":656,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":43151,"byte_end":43154,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Event sources registered with this `Registry` will be registered with","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":43159,"byte_end":43232,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ the original `Registry` and `Poll` instance.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":43237,"byte_end":43285,"line_start":659,"line_end":659,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":524},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907445,"byte_end":12907453,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"SourceFd","qualname":"::sys::unix::sourcefd::SourceFd","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter for [`RawFd`] providing an [`event::Source`] implementation.","sig":null,"attributes":[{"value":"/ Adapter for [`RawFd`] providing an [`event::Source`] implementation.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12904721,"byte_end":12904793,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12904794,"byte_end":12904797,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `SourceFd` enables registering any type with an FD with [`Poll`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12904798,"byte_end":12904867,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12904868,"byte_end":12904871,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While only implementations for TCP and UDP are provided, Mio supports","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12904872,"byte_end":12904945,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ registering any FD that can be registered with the underlying OS selector.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12904946,"byte_end":12905024,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ `SourceFd` provides the necessary bridge.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905025,"byte_end":12905070,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905071,"byte_end":12905074,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note that `SourceFd` takes a `&RawFd`. This is because `SourceFd` **does","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905075,"byte_end":12905151,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ not** take ownership of the FD. Specifically, it will not manage any","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905152,"byte_end":12905224,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ lifecycle related operations, such as closing the FD on drop. It is expected","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905225,"byte_end":12905305,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ that the `SourceFd` is constructed right before a call to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905306,"byte_end":12905367,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/ [`Registry::register`]. See the examples for more detail.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905368,"byte_end":12905429,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905430,"byte_end":12905433,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ../event/trait.Source.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905434,"byte_end":12905483,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905484,"byte_end":12905517,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905518,"byte_end":12905585,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905586,"byte_end":12905589,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905590,"byte_end":12905604,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905605,"byte_end":12905608,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905609,"byte_end":12905625,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905626,"byte_end":12905629,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905837,"byte_end":12905865,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905866,"byte_end":12905913,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/ use mio::{Interest, Poll, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905914,"byte_end":12905951,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905952,"byte_end":12905980,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905981,"byte_end":12905984,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12905985,"byte_end":12906020,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906021,"byte_end":12906051,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906052,"byte_end":12906055,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Bind a std listener","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906056,"byte_end":12906082,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906083,"byte_end":12906136,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906137,"byte_end":12906140,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906141,"byte_end":12906169,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906170,"byte_end":12906173,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906174,"byte_end":12906202,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906203,"byte_end":12906232,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/     &mut SourceFd(&listener.as_raw_fd()),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906233,"byte_end":12906278,"line_start":51,"line_end":51,"column_start":1,"column_end":46}},{"value":"/     Token(0),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906279,"byte_end":12906296,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906297,"byte_end":12906326,"line_start":53,"line_end":53,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906327,"byte_end":12906343,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906344,"byte_end":12906351,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906352,"byte_end":12906359,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906360,"byte_end":12906363,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Implementing [`event::Source`] for a custom type backed by a [`RawFd`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906364,"byte_end":12906439,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906440,"byte_end":12906443,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ use mio::{event, Interest, Registry, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906597,"byte_end":12906645,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906646,"byte_end":12906674,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906675,"byte_end":12906678,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::RawFd;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906679,"byte_end":12906712,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ use std::io;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906713,"byte_end":12906729,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906730,"byte_end":12906733,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906734,"byte_end":12906759,"line_start":68,"line_end":68,"column_start":1,"column_end":26}},{"value":"/ pub struct MyIo {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906760,"byte_end":12906781,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     fd: RawFd,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906782,"byte_end":12906800,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906801,"byte_end":12906806,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906807,"byte_end":12906810,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl event::Source for MyIo {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906811,"byte_end":12906844,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906845,"byte_end":12906931,"line_start":74,"line_end":74,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906932,"byte_end":12906961,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906962,"byte_end":12906971,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).register(registry, token, interests)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12906972,"byte_end":12907039,"line_start":77,"line_end":77,"column_start":1,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907040,"byte_end":12907049,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907050,"byte_end":12907053,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907054,"byte_end":12907142,"line_start":80,"line_end":80,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907143,"byte_end":12907172,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907173,"byte_end":12907182,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).reregister(registry, token, interests)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907183,"byte_end":12907252,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907253,"byte_end":12907262,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907263,"byte_end":12907266,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907267,"byte_end":12907340,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/         SourceFd(&self.fd).deregister(registry)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907341,"byte_end":12907392,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907393,"byte_end":12907402,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907403,"byte_end":12907408,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907409,"byte_end":12907416,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":527},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907458,"byte_end":12907471,"line_start":92,"line_end":92,"column_start":25,"column_end":38},"name":"0","qualname":"::sys::unix::sourcefd::SourceFd::0","value":"&'a i32","parent":{"krate":0,"index":524},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12931892,"byte_end":12931902,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::sys::unix::uds::socketaddr::SocketAddr","value":"SocketAddr {  }","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"decl_id":null,"docs":" An address associated with a `mio` specific Unix socket.","sig":null,"attributes":[{"value":"/ An address associated with a `mio` specific Unix socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12931526,"byte_end":12931586,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12931587,"byte_end":12931590,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is implemented instead of imported from [`net::SocketAddr`] because","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12931591,"byte_end":12931667,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ there is no way to create a [`net::SocketAddr`]. One must be returned by","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12931668,"byte_end":12931744,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ [`accept`], so this is returned instead.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12931745,"byte_end":12931789,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12931790,"byte_end":12931793,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`net::SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12931794,"byte_end":12931849,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12931850,"byte_end":12931880,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12934061,"byte_end":12934071,"line_start":81,"line_end":81,"column_start":16,"column_end":26},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"pub fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12934391,"byte_end":12934402,"line_start":90,"line_end":90,"column_start":16,"column_end":27},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"pub fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12934844,"byte_end":12934865,"line_start":102,"line_end":102,"column_start":16,"column_end":37},"name":"as_abstract_namespace","qualname":"<SocketAddr>::as_abstract_namespace","value":"pub fn as_abstract_namespace(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is an abstract namespace\n without the leading null byte.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":931},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12947023,"byte_end":12947026,"line_start":147,"line_end":147,"column_start":8,"column_end":11},"name":"new","qualname":"::sys::unix::pipe::new","value":"pub fn new() -> io::Result<(Sender, Receiver)>","parent":null,"children":[],"decl_id":null,"docs":" Create a new non-blocking Unix pipe.","sig":null,"attributes":[{"value":"/ Create a new non-blocking Unix pipe.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942386,"byte_end":12942426,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942427,"byte_end":12942430,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around Unix's [`pipe(2)`] system call and can be used as","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942431,"byte_end":12942509,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ inter-process or thread communication channel.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942510,"byte_end":12942560,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942561,"byte_end":12942564,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This channel may be created before forking the process and then one end used","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942565,"byte_end":12942645,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ in each process, e.g. the parent process has the sending end to send command","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942646,"byte_end":12942726,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ to the child process.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942727,"byte_end":12942752,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942753,"byte_end":12942756,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`pipe(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pipe.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942757,"byte_end":12942842,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942843,"byte_end":12942846,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942847,"byte_end":12942859,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942860,"byte_end":12942863,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The [`Sender`] can be registered with [`WRITABLE`] interest to receive","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942864,"byte_end":12942938,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ [writable events], the [`Receiver`] with [`READABLE`] interest. Once data is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12942939,"byte_end":12943019,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ written to the `Sender` the `Receiver` will receive an [readable event].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943020,"byte_end":12943096,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943097,"byte_end":12943100,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In addition to those events, events will also be generated if the other side","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943101,"byte_end":12943181,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ is dropped. To check if the `Sender` is dropped you'll need to check","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943182,"byte_end":12943254,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ [`is_read_closed`] on events for the `Receiver`, if it returns true the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943255,"byte_end":12943330,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ `Sender` is dropped. On the `Sender` end check [`is_write_closed`], if it","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943331,"byte_end":12943408,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ returns true the `Receiver` was dropped. Also see the second example below.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943409,"byte_end":12943488,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943489,"byte_end":12943492,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`WRITABLE`]: Interest::WRITABLE","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943493,"byte_end":12943529,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ [writable events]: event::Event::is_writable","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943530,"byte_end":12943578,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ [`READABLE`]: Interest::READABLE","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943579,"byte_end":12943615,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ [readable event]: event::Event::is_readable","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943616,"byte_end":12943663,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`is_read_closed`]: event::Event::is_read_closed","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943664,"byte_end":12943716,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ [`is_write_closed`]: event::Event::is_write_closed","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943717,"byte_end":12943771,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943772,"byte_end":12943775,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Deregistering","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943776,"byte_end":12943795,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943796,"byte_end":12943799,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Both `Sender` and `Receiver` will deregister themselves when dropped,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943800,"byte_end":12943873,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ **iff** the file descriptors are not duplicated (via [`dup(2)`]).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943874,"byte_end":12943943,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943944,"byte_end":12943947,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`dup(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12943948,"byte_end":12944031,"line_start":48,"line_end":48,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944032,"byte_end":12944035,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944036,"byte_end":12944050,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944051,"byte_end":12944054,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Simple example that writes data into the sending end and read it from the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944055,"byte_end":12944132,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ receiving end.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944133,"byte_end":12944151,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944152,"byte_end":12944155,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944156,"byte_end":12944163,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read, Write};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944164,"byte_end":12944201,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944202,"byte_end":12944205,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944206,"byte_end":12944251,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944252,"byte_end":12944276,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944277,"byte_end":12944280,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Unique tokens for the two ends of the channel.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944281,"byte_end":12944334,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/ const PIPE_RECV: Token = Token(0);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944335,"byte_end":12944373,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/ const PIPE_SEND: Token = Token(1);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944374,"byte_end":12944412,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944413,"byte_end":12944416,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944417,"byte_end":12944452,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ // Create our `Poll` instance and the `Events` container.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944453,"byte_end":12944514,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944515,"byte_end":12944547,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944548,"byte_end":12944594,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944595,"byte_end":12944598,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Create a new pipe.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944599,"byte_end":12944624,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944625,"byte_end":12944675,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944676,"byte_end":12944679,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // Register both ends of the channel.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944680,"byte_end":12944721,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944722,"byte_end":12944798,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944799,"byte_end":12944873,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944874,"byte_end":12944877,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ const MSG: &[u8; 11] = b\"Hello world\";","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944878,"byte_end":12944920,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944921,"byte_end":12944924,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944925,"byte_end":12944935,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944936,"byte_end":12944974,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944975,"byte_end":12944978,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     for event in events.iter() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12944979,"byte_end":12945015,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945016,"byte_end":12945049,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/             PIPE_SEND => sender.write(MSG)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945050,"byte_end":12945096,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/                 .and_then(|n| if n != MSG.len() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945097,"byte_end":12945150,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/                         // We'll consider a short write an error in this","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945151,"byte_end":12945227,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/                         // example. NOTE: we can't use `write_all` with","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945228,"byte_end":12945303,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/                         // non-blocking I/O.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945304,"byte_end":12945352,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/                         Err(io::ErrorKind::WriteZero.into())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945353,"byte_end":12945417,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/                     } else {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945418,"byte_end":12945450,"line_start":90,"line_end":90,"column_start":1,"column_end":33}},{"value":"/                         Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945451,"byte_end":12945485,"line_start":91,"line_end":91,"column_start":1,"column_end":35}},{"value":"/                     })?,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945486,"byte_end":12945514,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/             PIPE_RECV => {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945515,"byte_end":12945545,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/                 let mut buf = [0; 11];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945546,"byte_end":12945588,"line_start":94,"line_end":94,"column_start":1,"column_end":43}},{"value":"/                 let n = receiver.read(&mut buf)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945589,"byte_end":12945642,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/                 println!(\"received: {:?}\", &buf[0..n]);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945643,"byte_end":12945702,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/                 assert_eq!(n, MSG.len());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945703,"byte_end":12945748,"line_start":97,"line_end":97,"column_start":1,"column_end":46}},{"value":"/                 assert_eq!(&buf, &*MSG);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945749,"byte_end":12945793,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/                 return Ok(());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945794,"byte_end":12945828,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/             },","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945829,"byte_end":12945847,"line_start":100,"line_end":100,"column_start":1,"column_end":19}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945848,"byte_end":12945884,"line_start":101,"line_end":101,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945885,"byte_end":12945898,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945899,"byte_end":12945908,"line_start":103,"line_end":103,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945909,"byte_end":12945914,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945915,"byte_end":12945922,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945923,"byte_end":12945930,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945931,"byte_end":12945934,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Example that receives an event once the `Sender` is dropped.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12945935,"byte_end":12945999,"line_start":108,"line_end":108,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946000,"byte_end":12946003,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946004,"byte_end":12946011,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946012,"byte_end":12946030,"line_start":111,"line_end":111,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946031,"byte_end":12946036,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ # use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946037,"byte_end":12946084,"line_start":113,"line_end":113,"column_start":1,"column_end":48}},{"value":"/ # use mio::unix::pipe;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946085,"byte_end":12946111,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946112,"byte_end":12946117,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/ # const PIPE_RECV: Token = Token(0);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946118,"byte_end":12946158,"line_start":116,"line_end":116,"column_start":1,"column_end":41}},{"value":"/ # const PIPE_SEND: Token = Token(1);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946159,"byte_end":12946199,"line_start":117,"line_end":117,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946200,"byte_end":12946205,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946206,"byte_end":12946241,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/ // Same setup as in the example above.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946242,"byte_end":12946284,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946285,"byte_end":12946317,"line_start":121,"line_end":121,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946318,"byte_end":12946364,"line_start":122,"line_end":122,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946365,"byte_end":12946368,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946369,"byte_end":12946419,"line_start":124,"line_end":124,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946420,"byte_end":12946423,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946424,"byte_end":12946500,"line_start":126,"line_end":126,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946501,"byte_end":12946575,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946576,"byte_end":12946579,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ // Drop the sender.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946580,"byte_end":12946603,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/ drop(sender);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946604,"byte_end":12946621,"line_start":130,"line_end":130,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946622,"byte_end":12946625,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946626,"byte_end":12946660,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946661,"byte_end":12946664,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946665,"byte_end":12946697,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/     match event.token() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946698,"byte_end":12946727,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"/         PIPE_RECV if event.is_read_closed() => {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946728,"byte_end":12946780,"line_start":136,"line_end":136,"column_start":1,"column_end":53}},{"value":"/             // Detected that the sender was dropped.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946781,"byte_end":12946837,"line_start":137,"line_end":137,"column_start":1,"column_end":57}},{"value":"/             println!(\"Sender dropped!\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946838,"byte_end":12946882,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/             return Ok(());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946883,"byte_end":12946913,"line_start":139,"line_end":139,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946914,"byte_end":12946928,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946929,"byte_end":12946961,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946962,"byte_end":12946971,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946972,"byte_end":12946977,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/ # unreachable!();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12946978,"byte_end":12946999,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12947000,"byte_end":12947007,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12947008,"byte_end":12947015,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":996},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949004,"byte_end":12949010,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sys::unix::pipe::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":997}],"decl_id":null,"docs":" Sending end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Sending end of an Unix pipe.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12948884,"byte_end":12948916,"line_start":207,"line_end":207,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12948917,"byte_end":12948920,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12948921,"byte_end":12948975,"line_start":209,"line_end":209,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949127,"byte_end":12949142,"line_start":217,"line_end":217,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Sender>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Sender` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Sender` into or out of non-blocking mode.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949061,"byte_end":12949115,"line_start":216,"line_end":216,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951475,"byte_end":12951481,"line_start":282,"line_end":282,"column_start":12,"column_end":18},"name":"try_io","qualname":"<Sender>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949261,"byte_end":12949335,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949340,"byte_end":12949378,"line_start":222,"line_end":222,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949383,"byte_end":12949386,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949391,"byte_end":12949402,"line_start":224,"line_end":224,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949407,"byte_end":12949410,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949415,"byte_end":12949485,"line_start":226,"line_end":226,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949490,"byte_end":12949566,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949571,"byte_end":12949608,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949613,"byte_end":12949616,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949621,"byte_end":12949666,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949671,"byte_end":12949674,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949679,"byte_end":12949693,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949698,"byte_end":12949701,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949706,"byte_end":12949713,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949718,"byte_end":12949746,"line_start":235,"line_end":235,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949751,"byte_end":12949756,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949761,"byte_end":12949808,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949813,"byte_end":12949829,"line_start":238,"line_end":238,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949834,"byte_end":12949869,"line_start":239,"line_end":239,"column_start":5,"column_end":40}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949874,"byte_end":12949898,"line_start":240,"line_end":240,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949903,"byte_end":12949906,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = pipe::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949911,"byte_end":12949953,"line_start":242,"line_end":242,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949958,"byte_end":12949961,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ // Wait until the sender is writable...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949966,"byte_end":12950009,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950014,"byte_end":12950017,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ // Write to the sender using a direct libc call, of course the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950022,"byte_end":12950088,"line_start":246,"line_end":246,"column_start":5,"column_end":71}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950093,"byte_end":12950150,"line_start":247,"line_end":247,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950155,"byte_end":12950178,"line_start":248,"line_end":248,"column_start":5,"column_end":28}},{"value":"/ let n = sender.try_io(|| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950183,"byte_end":12950213,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950218,"byte_end":12950269,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::write(sender.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950274,"byte_end":12950355,"line_start":251,"line_end":251,"column_start":5,"column_end":86}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950360,"byte_end":12950382,"line_start":252,"line_end":252,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950387,"byte_end":12950415,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950420,"byte_end":12950436,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::write, the closure","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950441,"byte_end":12950515,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950520,"byte_end":12950568,"line_start":256,"line_end":256,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950573,"byte_end":12950616,"line_start":257,"line_end":257,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950621,"byte_end":12950630,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950635,"byte_end":12950643,"line_start":259,"line_end":259,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950648,"byte_end":12950683,"line_start":260,"line_end":260,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950688,"byte_end":12950691,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ // Wait until the receiver is readable...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950696,"byte_end":12950741,"line_start":262,"line_end":262,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950746,"byte_end":12950749,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ // Read from the receiver using a direct libc call, of course the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950754,"byte_end":12950823,"line_start":264,"line_end":264,"column_start":5,"column_end":74}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950828,"byte_end":12950884,"line_start":265,"line_end":265,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950889,"byte_end":12950916,"line_start":266,"line_end":266,"column_start":5,"column_end":32}},{"value":"/ let n = receiver.try_io(|| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950921,"byte_end":12950953,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12950958,"byte_end":12951009,"line_start":268,"line_end":268,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::read(receiver.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951014,"byte_end":12951096,"line_start":269,"line_end":269,"column_start":5,"column_end":87}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951101,"byte_end":12951123,"line_start":270,"line_end":270,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951128,"byte_end":12951156,"line_start":271,"line_end":271,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951161,"byte_end":12951177,"line_start":272,"line_end":272,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::read, the closure","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951182,"byte_end":12951255,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951260,"byte_end":12951308,"line_start":274,"line_end":274,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951313,"byte_end":12951356,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951361,"byte_end":12951370,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951375,"byte_end":12951383,"line_start":277,"line_end":277,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951388,"byte_end":12951422,"line_start":278,"line_end":278,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951427,"byte_end":12951439,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951444,"byte_end":12951451,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951456,"byte_end":12951463,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953801,"byte_end":12953809,"line_start":376,"line_end":376,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sys::unix::pipe::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":1001}],"decl_id":null,"docs":" Receiving end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Receiving end of an Unix pipe.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953679,"byte_end":12953713,"line_start":372,"line_end":372,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953714,"byte_end":12953717,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953718,"byte_end":12953772,"line_start":374,"line_end":374,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953930,"byte_end":12953945,"line_start":382,"line_end":382,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Receiver>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Receiver` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Receiver` into or out of non-blocking mode.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953862,"byte_end":12953918,"line_start":381,"line_end":381,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956278,"byte_end":12956284,"line_start":447,"line_end":447,"column_start":12,"column_end":18},"name":"try_io","qualname":"<Receiver>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954064,"byte_end":12954138,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954143,"byte_end":12954181,"line_start":387,"line_end":387,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954186,"byte_end":12954189,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954194,"byte_end":12954205,"line_start":389,"line_end":389,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954210,"byte_end":12954213,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954218,"byte_end":12954288,"line_start":391,"line_end":391,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954293,"byte_end":12954369,"line_start":392,"line_end":392,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954374,"byte_end":12954411,"line_start":393,"line_end":393,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954416,"byte_end":12954419,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954424,"byte_end":12954469,"line_start":395,"line_end":395,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954474,"byte_end":12954477,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954482,"byte_end":12954496,"line_start":397,"line_end":397,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954501,"byte_end":12954504,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954509,"byte_end":12954516,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954521,"byte_end":12954549,"line_start":400,"line_end":400,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954554,"byte_end":12954559,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954564,"byte_end":12954611,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954616,"byte_end":12954632,"line_start":403,"line_end":403,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954637,"byte_end":12954672,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954677,"byte_end":12954701,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954706,"byte_end":12954709,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let (sender, receiver) = pipe::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954714,"byte_end":12954756,"line_start":407,"line_end":407,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954761,"byte_end":12954764,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ // Wait until the sender is writable...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954769,"byte_end":12954812,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954817,"byte_end":12954820,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ // Write to the sender using a direct libc call, of course the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954825,"byte_end":12954891,"line_start":411,"line_end":411,"column_start":5,"column_end":71}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954896,"byte_end":12954953,"line_start":412,"line_end":412,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954958,"byte_end":12954981,"line_start":413,"line_end":413,"column_start":5,"column_end":28}},{"value":"/ let n = sender.try_io(|| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12954986,"byte_end":12955016,"line_start":414,"line_end":414,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955021,"byte_end":12955072,"line_start":415,"line_end":415,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::write(sender.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955077,"byte_end":12955158,"line_start":416,"line_end":416,"column_start":5,"column_end":86}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955163,"byte_end":12955185,"line_start":417,"line_end":417,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955190,"byte_end":12955218,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955223,"byte_end":12955239,"line_start":419,"line_end":419,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::write, the closure","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955244,"byte_end":12955318,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955323,"byte_end":12955371,"line_start":421,"line_end":421,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955376,"byte_end":12955419,"line_start":422,"line_end":422,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955424,"byte_end":12955433,"line_start":423,"line_end":423,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955438,"byte_end":12955446,"line_start":424,"line_end":424,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955451,"byte_end":12955486,"line_start":425,"line_end":425,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955491,"byte_end":12955494,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ // Wait until the receiver is readable...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955499,"byte_end":12955544,"line_start":427,"line_end":427,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955549,"byte_end":12955552,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ // Read from the receiver using a direct libc call, of course the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955557,"byte_end":12955626,"line_start":429,"line_end":429,"column_start":5,"column_end":74}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955631,"byte_end":12955687,"line_start":430,"line_end":430,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955692,"byte_end":12955719,"line_start":431,"line_end":431,"column_start":5,"column_end":32}},{"value":"/ let n = receiver.try_io(|| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955724,"byte_end":12955756,"line_start":432,"line_end":432,"column_start":5,"column_end":37}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955761,"byte_end":12955812,"line_start":433,"line_end":433,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::read(receiver.as_raw_fd(), buf_ptr, buf.len()) };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955817,"byte_end":12955899,"line_start":434,"line_end":434,"column_start":5,"column_end":87}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955904,"byte_end":12955926,"line_start":435,"line_end":435,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955931,"byte_end":12955959,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955964,"byte_end":12955980,"line_start":437,"line_end":437,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::read, the closure","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12955985,"byte_end":12956058,"line_start":438,"line_end":438,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956063,"byte_end":12956111,"line_start":439,"line_end":439,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956116,"byte_end":12956159,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956164,"byte_end":12956173,"line_start":441,"line_end":441,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956178,"byte_end":12956186,"line_start":442,"line_end":442,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956191,"byte_end":12956225,"line_start":443,"line_end":443,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956230,"byte_end":12956242,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956247,"byte_end":12956254,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956259,"byte_end":12956266,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51917,"byte_end":51922,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Token","qualname":"::token::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Associates readiness events with [`event::Source`]s.","sig":null,"attributes":[{"value":"/ Associates readiness events with [`event::Source`]s.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":46968,"byte_end":47024,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47025,"byte_end":47028,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Token` is a wrapper around `usize` and is used as an argument to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47029,"byte_end":47098,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ [`Registry::register`] and [`Registry::reregister`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47099,"byte_end":47155,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47156,"byte_end":47159,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47160,"byte_end":47211,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47212,"byte_end":47215,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47216,"byte_end":47264,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47265,"byte_end":47295,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ [`Registry::register`]: struct.Registry.html#method.register","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47296,"byte_end":47360,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`Registry::reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47361,"byte_end":47429,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47430,"byte_end":47433,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47434,"byte_end":47447,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47448,"byte_end":47451,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Using `Token` to track which socket generated the event. In this example,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47452,"byte_end":47529,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ `HashMap` is used, but usually something like [`slab`] is better.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47530,"byte_end":47599,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47600,"byte_end":47603,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/slab","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47604,"byte_end":47647,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47648,"byte_end":47651,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47799,"byte_end":47827,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47828,"byte_end":47875,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47876,"byte_end":47921,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47922,"byte_end":47952,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47953,"byte_end":47956,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ use std::thread;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47957,"byte_end":47977,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":47978,"byte_end":48008,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48009,"byte_end":48043,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48044,"byte_end":48047,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // After this number of sockets is accepted, the server will shutdown.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48048,"byte_end":48122,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ const MAX_SOCKETS: usize = 32;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48123,"byte_end":48157,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48158,"byte_end":48161,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Pick a token that will not be used by any other socket and use that one","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48162,"byte_end":48240,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ // for the listener.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48241,"byte_end":48265,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ const LISTENER: Token = Token(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48266,"byte_end":48306,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48307,"byte_end":48310,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Used to store the sockets.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48311,"byte_end":48344,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ let mut sockets = HashMap::new();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48345,"byte_end":48382,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48383,"byte_end":48386,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // This is used to generate a unique token for a socket","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48387,"byte_end":48446,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ let mut next_socket_index = 0;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48447,"byte_end":48481,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48482,"byte_end":48485,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The `Poll` instance","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48486,"byte_end":48512,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48513,"byte_end":48545,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48546,"byte_end":48549,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Tcp listener","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48550,"byte_end":48569,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48570,"byte_end":48636,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48637,"byte_end":48640,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48641,"byte_end":48669,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(&mut listener, LISTENER, Interest::READABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48670,"byte_end":48745,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48746,"byte_end":48749,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Spawn a thread that will connect a bunch of sockets then close them","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48750,"byte_end":48824,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48825,"byte_end":48863,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48864,"byte_end":48891,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     use std::net::TcpStream;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48892,"byte_end":48924,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48925,"byte_end":48928,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // +1 here is to connect an extra socket to signal the socket to close","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":48929,"byte_end":49007,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/     for _ in 0..(MAX_SOCKETS+1) {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49008,"byte_end":49045,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/         // Connect then drop the socket","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49046,"byte_end":49089,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         let _ = TcpStream::connect(addr).unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49090,"byte_end":49144,"line_start":61,"line_end":61,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49145,"byte_end":49154,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49155,"byte_end":49162,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49163,"byte_end":49166,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Event storage","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49167,"byte_end":49187,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49188,"byte_end":49237,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49238,"byte_end":49241,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Read buffer, this will never actually get filled","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49242,"byte_end":49297,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ let mut buf = [0; 256];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49298,"byte_end":49325,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49326,"byte_end":49329,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // The main event loop","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49330,"byte_end":49356,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49357,"byte_end":49367,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     // Wait for events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49368,"byte_end":49394,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49395,"byte_end":49433,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49434,"byte_end":49437,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49438,"byte_end":49468,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/         match event.token() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49469,"byte_end":49502,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/             LISTENER => {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49503,"byte_end":49532,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/                 // Perform operations in a loop until `WouldBlock` is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49533,"byte_end":49606,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/                 // encountered.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49607,"byte_end":49642,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/                 loop {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49643,"byte_end":49669,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/                     match listener.accept() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49670,"byte_end":49719,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/                         Ok((mut socket, _)) => {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49720,"byte_end":49772,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/                             // Shutdown the server","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49773,"byte_end":49827,"line_start":84,"line_end":84,"column_start":1,"column_end":55}},{"value":"/                             if next_socket_index == MAX_SOCKETS {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49828,"byte_end":49897,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/                                 return Ok(());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49898,"byte_end":49948,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/                             }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49949,"byte_end":49982,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49983,"byte_end":49986,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/                             // Get the token for the socket","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":49987,"byte_end":50050,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/                             let token = Token(next_socket_index);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50051,"byte_end":50120,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/                             next_socket_index += 1;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50121,"byte_end":50176,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50177,"byte_end":50180,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/                             // Register the new socket w/ poll","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50181,"byte_end":50247,"line_start":93,"line_end":93,"column_start":1,"column_end":67}},{"value":"/                             poll.registry().register(&mut socket, token, Interest::READABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50248,"byte_end":50346,"line_start":94,"line_end":94,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50347,"byte_end":50350,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                             // Store the socket","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50351,"byte_end":50402,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/                             sockets.insert(token, socket);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50403,"byte_end":50465,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/                         }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50466,"byte_end":50495,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50496,"byte_end":50580,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop accepting","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50581,"byte_end":50659,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/                             break;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50660,"byte_end":50698,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50699,"byte_end":50728,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50729,"byte_end":50804,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50805,"byte_end":50830,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50831,"byte_end":50852,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50853,"byte_end":50870,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/             token => {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50871,"byte_end":50897,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/                 // Always operate in a loop","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50898,"byte_end":50945,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/                 loop {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50946,"byte_end":50972,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/                     match sockets.get_mut(&token).unwrap().read(&mut buf) {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":50973,"byte_end":51052,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/                         Ok(0) => {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51053,"byte_end":51091,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"/                             // Socket is closed, remove it from the map","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51092,"byte_end":51167,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/                             sockets.remove(&token);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51168,"byte_end":51223,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/                             break;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51224,"byte_end":51262,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51263,"byte_end":51292,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/                         // Data is not actually sent in this example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51293,"byte_end":51365,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/                         Ok(_) => unreachable!(),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51366,"byte_end":51418,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51419,"byte_end":51503,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop reading","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51504,"byte_end":51580,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/                             break;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51581,"byte_end":51619,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51620,"byte_end":51649,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51650,"byte_end":51725,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51726,"byte_end":51751,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51752,"byte_end":51773,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51774,"byte_end":51791,"line_start":125,"line_end":125,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51792,"byte_end":51805,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51806,"byte_end":51815,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51816,"byte_end":51821,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51822,"byte_end":51829,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51830,"byte_end":51837,"line_start":130,"line_end":130,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/token.rs","byte_start":51923,"byte_end":51932,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"name":"0","qualname":"::token::Token::0","value":"usize","parent":{"krate":0,"index":1004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54594,"byte_end":54599,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Waker","qualname":"::waker::Waker","value":"Waker {  }","parent":null,"children":[{"krate":0,"index":1027}],"decl_id":null,"docs":" Waker allows cross-thread waking of [`Poll`].","sig":null,"attributes":[{"value":"/ Waker allows cross-thread waking of [`Poll`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52073,"byte_end":52122,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52123,"byte_end":52126,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ When created it will cause events with [`readable`] readiness and the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52127,"byte_end":52200,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ provided `token` if [`wake`] is called, possibly from another thread.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52201,"byte_end":52274,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52275,"byte_end":52278,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52279,"byte_end":52309,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52310,"byte_end":52372,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ [`wake`]: struct.Waker.html#method.wake","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52373,"byte_end":52416,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52417,"byte_end":52420,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52421,"byte_end":52432,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52433,"byte_end":52436,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Waker` events are only guaranteed to be delivered while the `Waker` value","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52437,"byte_end":52515,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is alive.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52516,"byte_end":52529,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52530,"byte_end":52533,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Only a single `Waker` can be active per [`Poll`], if multiple threads need","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52534,"byte_end":52612,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ access to the `Waker` it can be shared via for example an `Arc`. What","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52613,"byte_end":52686,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ happens if multiple `Waker`s are registered with the same `Poll` is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52687,"byte_end":52758,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ unspecified.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52759,"byte_end":52775,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52776,"byte_end":52779,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52780,"byte_end":52806,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52807,"byte_end":52810,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ On platforms that support kqueue this will use the `EVFILT_USER` event","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52811,"byte_end":52885,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ filter, see [implementation notes of `Poll`] to see what platforms support","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52886,"byte_end":52964,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ kqueue. On Linux it uses [eventfd].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":52965,"byte_end":53004,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53005,"byte_end":53008,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [implementation notes of `Poll`]: struct.Poll.html#implementation-notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53009,"byte_end":53084,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ [eventfd]: https://man7.org/linux/man-pages/man2/eventfd.2.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53085,"byte_end":53152,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53153,"byte_end":53156,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53157,"byte_end":53171,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53172,"byte_end":53175,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Wake a [`Poll`] instance from another thread.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53176,"byte_end":53225,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53226,"byte_end":53229,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53333,"byte_end":53392,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ use std::thread;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53393,"byte_end":53413,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53414,"byte_end":53442,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53443,"byte_end":53466,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53467,"byte_end":53470,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ use mio::{Events, Token, Poll, Waker};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53471,"byte_end":53513,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53514,"byte_end":53517,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ const WAKE_TOKEN: Token = Token(10);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53518,"byte_end":53558,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53559,"byte_end":53562,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53563,"byte_end":53595,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(2);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53596,"byte_end":53642,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53643,"byte_end":53646,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let waker = Arc::new(Waker::new(poll.registry(), WAKE_TOKEN)?);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53647,"byte_end":53714,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53715,"byte_end":53718,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // We need to keep the Waker alive, so we'll create a clone for the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53719,"byte_end":53790,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ // thread we create below.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53791,"byte_end":53821,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ let waker1 = waker.clone();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53822,"byte_end":53853,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ let handle = thread::spawn(move || {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53854,"byte_end":53894,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/     // Working hard, or hardly working?","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53895,"byte_end":53938,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53939,"byte_end":53989,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53990,"byte_end":53993,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     // Now we'll wake the queue on the other thread.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":53994,"byte_end":54050,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/     waker1.wake().expect(\"unable to wake\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54051,"byte_end":54098,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54099,"byte_end":54106,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54107,"byte_end":54110,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // On our current thread we'll poll for events, without a timeout.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54111,"byte_end":54181,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54182,"byte_end":54216,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54217,"byte_end":54220,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // After about 500 milliseconds we should be awoken by the other thread and","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54221,"byte_end":54300,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ // get a single event.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54301,"byte_end":54327,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/ assert!(!events.is_empty());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54328,"byte_end":54360,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ let waker_event = events.iter().next().unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54361,"byte_end":54413,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/ assert!(waker_event.is_readable());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54414,"byte_end":54453,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(waker_event.token(), WAKE_TOKEN);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54454,"byte_end":54502,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54503,"byte_end":54532,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54533,"byte_end":54549,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54550,"byte_end":54557,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54558,"byte_end":54565,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54682,"byte_end":54685,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Waker>::new","value":"pub fn new(&Registry, Token) -> io::Result<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Waker`.\n","sig":null,"attributes":[{"value":"/ Create a new `Waker`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54645,"byte_end":54670,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":55013,"byte_end":55017,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"wake","qualname":"<Waker>::wake","value":"pub fn wake(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wake up the [`Poll`] associated with this `Waker`.","sig":null,"attributes":[{"value":"/ Wake up the [`Poll`] associated with this `Waker`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54904,"byte_end":54958,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54963,"byte_end":54966,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54971,"byte_end":55001,"line_start":92,"line_end":92,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":127},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/mod.rs","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":159},{"krate":0,"index":191},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224}],"decl_id":null,"docs":" Readiness event types and utilities.\n","sig":null,"attributes":[{"value":"/ Readiness event types and utilities.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/mod.rs","byte_start":55080,"byte_end":55120,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55697,"byte_end":55702,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":1031}],"decl_id":null,"docs":" A readiness event.","sig":null,"attributes":[{"value":"/ A readiness event.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55331,"byte_end":55353,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55354,"byte_end":55357,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `Event` is a readiness state paired with a [`Token`]. It is returned by","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55358,"byte_end":55433,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ [`Poll::poll`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55434,"byte_end":55453,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55454,"byte_end":55457,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For more documentation on polling and events, see [`Poll`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55458,"byte_end":55521,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55522,"byte_end":55525,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55526,"byte_end":55577,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55578,"byte_end":55611,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ [`Token`]: ../struct.Token.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55612,"byte_end":55647,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"repr(transparent)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55665,"byte_end":55685,"line_start":16,"line_end":16,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55790,"byte_end":55795,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"token","qualname":"<Event>::token","value":"pub fn token(&Self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" Returns the event's token.\n","sig":null,"attributes":[{"value":"/ Returns the event's token.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55748,"byte_end":55778,"line_start":22,"line_end":22,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56447,"byte_end":56458,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Event>::is_readable","value":"pub fn is_readable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains readable readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains readable readiness.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55864,"byte_end":55922,"line_start":27,"line_end":27,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55927,"byte_end":55930,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55935,"byte_end":55946,"line_start":29,"line_end":29,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55951,"byte_end":55954,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Out-of-band (OOB) data also triggers readable events. But must","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55959,"byte_end":56025,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ application don't actually read OOB data, this could leave an","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56030,"byte_end":56095,"line_start":32,"line_end":32,"column_start":5,"column_end":70}},{"value":"/ application open to a Denial-of-Service (Dos) attack, see","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56100,"byte_end":56161,"line_start":33,"line_end":33,"column_start":5,"column_end":66}},{"value":"/ <https://github.com/sandstorm-io/sandstorm-website/blob/58f93346028c0576e8147627667328eaaf4be9fa/_posts/2015-04-08-osx-security-bug.md>.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56166,"byte_end":56306,"line_start":34,"line_end":34,"column_start":5,"column_end":145}},{"value":"/ However because Mio uses edge-triggers it will not result in an infinite","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56311,"byte_end":56387,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ loop as described in the article above.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56392,"byte_end":56435,"line_start":36,"line_end":36,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56602,"byte_end":56613,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Event>::is_writable","value":"pub fn is_writable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains writable readiness.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56532,"byte_end":56590,"line_start":41,"line_end":41,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57616,"byte_end":57624,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Event>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains error readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains error readiness.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56687,"byte_end":56742,"line_start":46,"line_end":46,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56747,"byte_end":56750,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Error events occur when the socket enters an error state. In this case,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56755,"byte_end":56830,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ the socket will also receive a readable or writable event. Reading or","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56835,"byte_end":56908,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ writing to the socket will result in an error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56913,"byte_end":56963,"line_start":50,"line_end":50,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56968,"byte_end":56971,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56976,"byte_end":56987,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":56992,"byte_end":56995,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57000,"byte_end":57075,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ error event.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57080,"byte_end":57096,"line_start":55,"line_end":55,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57101,"byte_end":57104,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57109,"byte_end":57169,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57174,"byte_end":57177,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57182,"byte_end":57221,"line_start":59,"line_end":59,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57226,"byte_end":57265,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLERR`      |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57270,"byte_end":57309,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | `EV_ERROR` and `EV_EOF` with `fflags` set to `0`. |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57314,"byte_end":57387,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57392,"byte_end":57395,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57400,"byte_end":57459,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57464,"byte_end":57527,"line_start":65,"line_end":65,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57532,"byte_end":57604,"line_start":66,"line_end":66,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58938,"byte_end":58952,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Event>::is_read_closed","value":"pub fn is_read_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains read closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains read closed readiness.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57695,"byte_end":57756,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57761,"byte_end":57764,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57769,"byte_end":57780,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57785,"byte_end":57788,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Read closed readiness can be expected after any of the following have","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57793,"byte_end":57866,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ occurred:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57871,"byte_end":57884,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ * The local stream has shutdown the read half of its socket","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57889,"byte_end":57952,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/ * The local stream has shutdown both the read half and the write half","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":57957,"byte_end":58030,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/   of its socket","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58035,"byte_end":58054,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/ * The peer stream has shutdown the write half its socket; this sends a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58059,"byte_end":58133,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/   `FIN` packet that has been received by the local stream","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58138,"byte_end":58199,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58204,"byte_end":58207,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58212,"byte_end":58284,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ return readiness when read half is closed, it is guaranteed that","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58289,"byte_end":58357,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/ false-positives will not occur.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58362,"byte_end":58397,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58402,"byte_end":58405,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58410,"byte_end":58470,"line_start":87,"line_end":87,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58475,"byte_end":58478,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58483,"byte_end":58522,"line_start":89,"line_end":89,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58527,"byte_end":58566,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58571,"byte_end":58610,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/ |               | `EPOLLIN` and `EPOLLRDHUP` |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58615,"byte_end":58665,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58670,"byte_end":58709,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58714,"byte_end":58717,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58722,"byte_end":58781,"line_start":95,"line_end":95,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58786,"byte_end":58849,"line_start":96,"line_end":96,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":58854,"byte_end":58926,"line_start":97,"line_end":97,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60184,"byte_end":60199,"line_start":128,"line_end":128,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Event>::is_write_closed","value":"pub fn is_write_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains write closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains write closed readiness.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59029,"byte_end":59091,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59096,"byte_end":59099,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59104,"byte_end":59115,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59120,"byte_end":59123,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ On [epoll] this is essentially a check for `EPOLLHUP` flag as the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59128,"byte_end":59197,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ local stream shutting down its write half does not trigger this event.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59202,"byte_end":59276,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59281,"byte_end":59284,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ On [kqueue] the local stream shutting down the write half of its","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59289,"byte_end":59357,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/ socket will trigger this event.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59362,"byte_end":59397,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59402,"byte_end":59405,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59410,"byte_end":59482,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ return readiness when write half is closed, it is guaranteed that","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59487,"byte_end":59556,"line_start":113,"line_end":113,"column_start":5,"column_end":74}},{"value":"/ false-positives will not occur.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59561,"byte_end":59596,"line_start":114,"line_end":114,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59601,"byte_end":59604,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59609,"byte_end":59669,"line_start":116,"line_end":116,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59674,"byte_end":59677,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59682,"byte_end":59721,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59726,"byte_end":59765,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59770,"byte_end":59809,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/ |               | only `EPOLLERR`, or |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59814,"byte_end":59857,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/ |               | `EPOLLOUT` and `EPOLLERR` |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59862,"byte_end":59911,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59916,"byte_end":59955,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59960,"byte_end":59963,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":59968,"byte_end":60027,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60032,"byte_end":60095,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60100,"byte_end":60172,"line_start":127,"line_end":127,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60971,"byte_end":60982,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<Event>::is_priority","value":"pub fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains priority readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains priority readiness.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60277,"byte_end":60335,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60340,"byte_end":60343,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60348,"byte_end":60359,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60364,"byte_end":60367,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60372,"byte_end":60447,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ priority event.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60452,"byte_end":60471,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60476,"byte_end":60479,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60484,"byte_end":60544,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60549,"byte_end":60552,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60557,"byte_end":60596,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60601,"byte_end":60640,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLPRI`      |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60645,"byte_end":60684,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | *Not supported* |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60689,"byte_end":60728,"line_start":144,"line_end":144,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60733,"byte_end":60736,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60741,"byte_end":60800,"line_start":146,"line_end":146,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60805,"byte_end":60868,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60873,"byte_end":60945,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":60950,"byte_end":60959,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61788,"byte_end":61794,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"is_aio","qualname":"<Event>::is_aio","value":"pub fn is_aio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains AIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains AIO readiness.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61056,"byte_end":61109,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61114,"byte_end":61117,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61122,"byte_end":61133,"line_start":156,"line_end":156,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61138,"byte_end":61141,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms support AIO.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61146,"byte_end":61222,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61227,"byte_end":61230,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61235,"byte_end":61295,"line_start":160,"line_end":160,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61300,"byte_end":61303,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61308,"byte_end":61347,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61352,"byte_end":61391,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | *Not supported* |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61396,"byte_end":61435,"line_start":164,"line_end":164,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]<sup>1</sup> | `EVFILT_AIO` |","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61440,"byte_end":61483,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61488,"byte_end":61491,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ 1: Only supported on DragonFly BSD, FreeBSD, iOS and macOS.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61496,"byte_end":61559,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61564,"byte_end":61567,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61572,"byte_end":61631,"line_start":169,"line_end":169,"column_start":5,"column_end":64}},{"value":"/ [epoll]: https://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61636,"byte_end":61699,"line_start":170,"line_end":170,"column_start":5,"column_end":68}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61704,"byte_end":61776,"line_start":171,"line_end":171,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":62098,"byte_end":62104,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"is_lio","qualname":"<Event>::is_lio","value":"pub fn is_lio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains LIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains LIO readiness.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61863,"byte_end":61916,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61921,"byte_end":61924,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61929,"byte_end":61940,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61945,"byte_end":61948,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but only FreeBSD supports LIO. On","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":61953,"byte_end":62028,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ FreeBSD this method checks the `EVFILT_LIO` flag.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":62033,"byte_end":62086,"line_start":181,"line_end":181,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65101,"byte_end":65107,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Events","qualname":"::event::events::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":170}],"decl_id":null,"docs":" A collection of readiness events.","sig":null,"attributes":[{"value":"/ A collection of readiness events.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":63991,"byte_end":64028,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64029,"byte_end":64032,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `Events` is passed as an argument to [`Poll::poll`] and will be used to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64033,"byte_end":64108,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ receive any new readiness events received since the last poll. Usually, a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64109,"byte_end":64186,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ single `Events` instance is created at the same time as a [`Poll`] and","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64187,"byte_end":64261,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ reused on each call to [`Poll::poll`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64262,"byte_end":64304,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64305,"byte_end":64308,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64309,"byte_end":64360,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64361,"byte_end":64364,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64365,"byte_end":64416,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64417,"byte_end":64450,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64451,"byte_end":64454,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64455,"byte_end":64469,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64470,"byte_end":64473,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64577,"byte_end":64605,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64606,"byte_end":64653,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64654,"byte_end":64682,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64683,"byte_end":64711,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64712,"byte_end":64715,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64716,"byte_end":64765,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64766,"byte_end":64798,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64799,"byte_end":64804,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # assert!(events.is_empty());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64805,"byte_end":64838,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64839,"byte_end":64842,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Register `event::Source`s with `poll`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64843,"byte_end":64888,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64889,"byte_end":64892,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64893,"byte_end":64955,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64956,"byte_end":64959,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64960,"byte_end":64992,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":64993,"byte_end":65050,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65051,"byte_end":65056,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65057,"byte_end":65073,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65074,"byte_end":65081,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65082,"byte_end":65089,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65940,"byte_end":65944,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"Iter","qualname":"::event::events::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037}],"decl_id":null,"docs":" [`Events`] iterator.","sig":null,"attributes":[{"value":"/ [`Events`] iterator.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65137,"byte_end":65161,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65162,"byte_end":65165,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Events`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65166,"byte_end":65230,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65231,"byte_end":65234,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Events`]: struct.Events.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65235,"byte_end":65269,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ [`iter`]: struct.Events.html#method.iter","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65270,"byte_end":65314,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65315,"byte_end":65318,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65319,"byte_end":65333,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65334,"byte_end":65337,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65441,"byte_end":65469,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65470,"byte_end":65517,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65518,"byte_end":65546,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65547,"byte_end":65575,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65576,"byte_end":65579,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65580,"byte_end":65629,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65630,"byte_end":65662,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65663,"byte_end":65666,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65667,"byte_end":65703,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65704,"byte_end":65707,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65708,"byte_end":65770,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65771,"byte_end":65774,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65775,"byte_end":65807,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65808,"byte_end":65865,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65866,"byte_end":65871,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65872,"byte_end":65888,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65889,"byte_end":65896,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65897,"byte_end":65904,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66279,"byte_end":66292,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Events>::with_capacity","value":"pub fn with_capacity(usize) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Events` capable of holding up to `capacity` events.","sig":null,"attributes":[{"value":"/ Return a new `Events` capable of holding up to `capacity` events.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66011,"byte_end":66080,"line_start":82,"line_end":82,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66085,"byte_end":66088,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66093,"byte_end":66107,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66112,"byte_end":66115,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66120,"byte_end":66127,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66132,"byte_end":66152,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66157,"byte_end":66160,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66165,"byte_end":66210,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66215,"byte_end":66255,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66260,"byte_end":66267,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66651,"byte_end":66659,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Events>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `Event` values that `self` can hold.","sig":null,"attributes":[{"value":"/ Returns the number of `Event` values that `self` can hold.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66417,"byte_end":66479,"line_start":98,"line_end":98,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66484,"byte_end":66487,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66492,"byte_end":66499,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66504,"byte_end":66524,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66529,"byte_end":66532,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66537,"byte_end":66582,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66587,"byte_end":66627,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66632,"byte_end":66639,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66965,"byte_end":66973,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Events>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains no `Event` values.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains no `Event` values.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66719,"byte_end":66775,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66780,"byte_end":66783,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66788,"byte_end":66802,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66807,"byte_end":66810,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66815,"byte_end":66822,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66827,"byte_end":66847,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66852,"byte_end":66855,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66860,"byte_end":66905,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66910,"byte_end":66941,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":66946,"byte_end":66953,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67774,"byte_end":67778,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"iter","qualname":"<Events>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Event` values.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Event` values.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67032,"byte_end":67080,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67085,"byte_end":67088,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67093,"byte_end":67107,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67112,"byte_end":67115,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67231,"byte_end":67259,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67264,"byte_end":67311,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67316,"byte_end":67344,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67349,"byte_end":67377,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67382,"byte_end":67385,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67390,"byte_end":67439,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67444,"byte_end":67476,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67481,"byte_end":67484,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67489,"byte_end":67525,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67530,"byte_end":67533,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67538,"byte_end":67600,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67605,"byte_end":67608,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67613,"byte_end":67645,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67650,"byte_end":67707,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67712,"byte_end":67717,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67722,"byte_end":67738,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67743,"byte_end":67750,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67755,"byte_end":67762,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68746,"byte_end":68751,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"clear","qualname":"<Events>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clearing all `Event` values from container explicitly.","sig":null,"attributes":[{"value":"/ Clearing all `Event` values from container explicitly.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67881,"byte_end":67939,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67944,"byte_end":67947,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67952,"byte_end":67963,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67968,"byte_end":67971,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Events are cleared before every `poll`, so it is not required to call","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":67976,"byte_end":68049,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ this manually.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68054,"byte_end":68072,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68077,"byte_end":68080,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68085,"byte_end":68099,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68104,"byte_end":68107,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68223,"byte_end":68251,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68256,"byte_end":68303,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68308,"byte_end":68336,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68341,"byte_end":68369,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68374,"byte_end":68377,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68382,"byte_end":68431,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68436,"byte_end":68468,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68473,"byte_end":68476,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68481,"byte_end":68517,"line_start":174,"line_end":174,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68522,"byte_end":68525,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68530,"byte_end":68592,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68597,"byte_end":68600,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // Clear all events.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68605,"byte_end":68629,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ events.clear();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68634,"byte_end":68653,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68658,"byte_end":68689,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68694,"byte_end":68710,"line_start":181,"line_end":181,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68715,"byte_end":68722,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":68727,"byte_end":68734,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":205},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72329,"byte_end":72335,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"Source","qualname":"::event::source::Source","value":"Source","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"decl_id":null,"docs":" An event source that may be registered with [`Registry`].","sig":null,"attributes":[{"value":"/ An event source that may be registered with [`Registry`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":69782,"byte_end":69843,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":69844,"byte_end":69847,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Types that implement `event::Source` can be registered with","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":69848,"byte_end":69911,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ `Registry`. Users of Mio **should not** use the `event::Source` trait","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":69912,"byte_end":69985,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ functions directly. Instead, the equivalent functions on `Registry` should","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":69986,"byte_end":70064,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ be used.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70065,"byte_end":70077,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70078,"byte_end":70081,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`Registry`] for more details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70082,"byte_end":70120,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70121,"byte_end":70124,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Registry`]: ../struct.Registry.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70125,"byte_end":70166,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70167,"byte_end":70170,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Implementing `event::Source`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70171,"byte_end":70205,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70206,"byte_end":70209,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Event sources are always backed by system handles, such as sockets or other","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70210,"byte_end":70289,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ system handles. These `event::Source`s will be monitored by the system","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70290,"byte_end":70364,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ selector. An implementation of `Source` will almost always delegates to a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70365,"byte_end":70442,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ lower level handle. Examples of this are [`TcpStream`]s, or the *unix only*","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70443,"byte_end":70522,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ [`SourceFd`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70523,"byte_end":70540,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70541,"byte_end":70544,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70545,"byte_end":70592,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ [`SourceFd`]: ../unix/struct.SourceFd.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70593,"byte_end":70639,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70640,"byte_end":70643,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Dropping `event::Source`s","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70644,"byte_end":70675,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70676,"byte_end":70679,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All `event::Source`s, unless otherwise specified, need to be [deregistered]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70680,"byte_end":70759,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ before being dropped for them to not leak resources. This goes against the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70760,"byte_end":70838,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ normal drop behaviour of types in Rust which cleanup after themselves, e.g.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70839,"byte_end":70918,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ a `File` will close itself. However since deregistering needs access to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70919,"byte_end":70994,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ [`Registry`] this cannot be done while being dropped.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":70995,"byte_end":71052,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71053,"byte_end":71056,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [deregistered]: ../struct.Registry.html#method.deregister","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71057,"byte_end":71118,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71119,"byte_end":71122,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71123,"byte_end":71137,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71138,"byte_end":71141,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Implementing `Source` on a struct containing a socket:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71142,"byte_end":71200,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71201,"byte_end":71204,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use mio::{Interest, Registry, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71352,"byte_end":71393,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ use mio::event::Source;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71394,"byte_end":71421,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71422,"byte_end":71450,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71451,"byte_end":71454,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71455,"byte_end":71471,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71472,"byte_end":71475,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71476,"byte_end":71501,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ pub struct MySource {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71502,"byte_end":71527,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/     socket: TcpStream,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71528,"byte_end":71554,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71555,"byte_end":71560,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71561,"byte_end":71564,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Source for MySource {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71565,"byte_end":71595,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71596,"byte_end":71682,"line_start":55,"line_end":55,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71683,"byte_end":71712,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71713,"byte_end":71722,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `register` call to `socket`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71723,"byte_end":71778,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/         self.socket.register(registry, token, interests)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71779,"byte_end":71839,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71840,"byte_end":71849,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71850,"byte_end":71853,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71854,"byte_end":71942,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71943,"byte_end":71972,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71973,"byte_end":71982,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `reregister` call to `socket`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":71983,"byte_end":72040,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/         self.socket.reregister(registry, token, interests)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72041,"byte_end":72103,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72104,"byte_end":72113,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72114,"byte_end":72117,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72118,"byte_end":72191,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/         // Delegate the `deregister` call to `socket`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72192,"byte_end":72249,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/         self.socket.deregister(registry)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72250,"byte_end":72294,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72295,"byte_end":72304,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72305,"byte_end":72310,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72311,"byte_end":72318,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72687,"byte_end":72695,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"register","qualname":"::event::source::Source::register","value":"pub fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Register `self` with the given `Registry` instance.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72342,"byte_end":72397,"line_start":76,"line_end":76,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72402,"byte_end":72405,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use [`Registry::register`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72410,"byte_end":72485,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ instead. Implementors should handle registration by delegating the call","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72490,"byte_end":72565,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to another `Source` type.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72570,"byte_end":72599,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72604,"byte_end":72607,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72612,"byte_end":72679,"line_start":82,"line_end":82,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73190,"byte_end":73200,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"reregister","qualname":"::event::source::Source::reregister","value":"pub fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Re-register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Re-register `self` with the given `Registry` instance.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72826,"byte_end":72884,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72889,"byte_end":72892,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72897,"byte_end":72949,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/ [`Registry::reregister`] instead. Implementors should handle","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":72954,"byte_end":73018,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/ re-registration by either delegating the call to another `Source` type.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73023,"byte_end":73098,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73103,"byte_end":73106,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`Registry::reregister`]: ../struct.Registry.html#method.reregister","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73111,"byte_end":73182,"line_start":96,"line_end":96,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73686,"byte_end":73696,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"deregister","qualname":"::event::source::Source::deregister","value":"pub fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Deregister `self` from the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Deregister `self` from the given `Registry` instance.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73331,"byte_end":73388,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73393,"byte_end":73396,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73401,"byte_end":73453,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/ [`Registry::deregister`] instead. Implementors should handle","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73458,"byte_end":73522,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ deregistration by delegating the call to another `Source` type.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73527,"byte_end":73594,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73599,"byte_end":73602,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`Registry::deregister`]: ../struct.Registry.html#method.deregister","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73607,"byte_end":73678,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1452},{"krate":0,"index":1455},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1756}],"decl_id":null,"docs":" Networking primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/macros.rs","byte_start":10437,"byte_end":10460,"line_start":42,"line_end":42,"column_start":13,"column_end":36}},{"value":"/ Networking primitives.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12968688,"byte_end":12968714,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12968715,"byte_end":12968718,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types provided in this module are non-blocking by default and are","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12968719,"byte_end":12968792,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ designed to be portable across all supported Mio platforms. As long as the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12968793,"byte_end":12968871,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ [portability guidelines] are followed, the behavior should be identical no","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12968872,"byte_end":12968950,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ matter the target platform.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12968951,"byte_end":12968982,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12968983,"byte_end":12968986,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [portability guidelines]: ../struct.Poll.html#portability","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12968987,"byte_end":12969048,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969049,"byte_end":12969052,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969053,"byte_end":12969064,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969065,"byte_end":12969068,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When using a datagram based socket, i.e. [`UdpSocket`] or [`UnixDatagram`],","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969069,"byte_end":12969148,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ its only possible to receive a packet once. This means that if you provide a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969149,"byte_end":12969229,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ buffer that is too small you won't be able to receive the data anymore. How","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969230,"byte_end":12969309,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ OSs deal with this situation is different for each OS:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969310,"byte_end":12969368,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/  * Unixes, such as Linux, FreeBSD and macOS, will simply fill the buffer and","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969369,"byte_end":12969449,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/    return the amount of bytes written. This means that if the returned value","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969450,"byte_end":12969530,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/    is equal to the size of the buffer it may have only written a part of the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969531,"byte_end":12969611,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/    packet (or the packet has the same size as the buffer).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969612,"byte_end":12969674,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/  * Windows returns an `WSAEMSGSIZE` error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969675,"byte_end":12969721,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969722,"byte_end":12969725,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Mio does not change the value (either ok or error) returned by the OS, it's","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969726,"byte_end":12969805,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ up to the user handle this. How to deal with these difference is still up","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969806,"byte_end":12969883,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ for debate, specifically in","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969884,"byte_end":12969915,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/ <https://github.com/rust-lang/rust/issues/55794>. The best advice we can","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969916,"byte_end":12969992,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ give is to always call receive with a large enough buffer.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/mod.rs","byte_start":12969993,"byte_end":12970055,"line_start":26,"line_end":26,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971785,"byte_end":12971796,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":1190}],"decl_id":null,"docs":" A structure representing a socket server","sig":null,"attributes":[{"value":"/ A structure representing a socket server","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12970986,"byte_end":12971030,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971031,"byte_end":12971034,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971035,"byte_end":12971049,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971050,"byte_end":12971053,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971157,"byte_end":12971185,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971186,"byte_end":12971233,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971234,"byte_end":12971279,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971280,"byte_end":12971310,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971311,"byte_end":12971339,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971340,"byte_end":12971343,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:34255\".parse()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971344,"byte_end":12971414,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971415,"byte_end":12971418,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971419,"byte_end":12971451,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971452,"byte_end":12971500,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971501,"byte_end":12971504,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971505,"byte_end":12971543,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut listener, Token(0), Interest::READABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971544,"byte_end":12971619,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971620,"byte_end":12971623,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971624,"byte_end":12971686,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971687,"byte_end":12971690,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // There may be a socket ready to be accepted","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971691,"byte_end":12971740,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971741,"byte_end":12971757,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971758,"byte_end":12971765,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971766,"byte_end":12971773,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12972326,"byte_end":12972330,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"pub fn bind(SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to bind a new TCP listener to the specified address\n to receive new connections.","sig":null,"attributes":[{"value":"/ Convenience method to bind a new TCP listener to the specified address","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971864,"byte_end":12971938,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ to receive new connections.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971943,"byte_end":12971974,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971979,"byte_end":12971982,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This function will take the following steps:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971987,"byte_end":12972035,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12972040,"byte_end":12972043,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ 1. Create a new TCP socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12972048,"byte_end":12972079,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/ 2. Set the `SO_REUSEADDR` option on the socket on Unix.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12972084,"byte_end":12972143,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ 3. Bind the socket to the specified address.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12972148,"byte_end":12972196,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"/ 4. Calls `listen` on the socket to prepare it to receive new connections.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12972201,"byte_end":12972278,"line_start":57,"line_end":57,"column_start":5,"column_end":82}},{"value":"cfg(not(target_os = \"wasi\"))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12972283,"byte_end":12972314,"line_start":58,"line_end":58,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12973614,"byte_end":12973622,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> TcpListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` from a standard `net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` from a standard `net::TcpListener`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12973264,"byte_end":12973331,"line_start":81,"line_end":81,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12973336,"byte_end":12973339,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12973344,"byte_end":12973416,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12973421,"byte_end":12973495,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; ; it is left up to the user to set it","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12973500,"byte_end":12973572,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12973577,"byte_end":12973602,"line_start":86,"line_end":86,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974137,"byte_end":12974143,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"pub fn accept(&Self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new `TcpStream`.","sig":null,"attributes":[{"value":"/ Accepts a new `TcpStream`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12973755,"byte_end":12973785,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12973790,"byte_end":12973793,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This may return an `Err(e)` where `e.kind()` is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12973798,"byte_end":12973849,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/ `io::ErrorKind::WouldBlock`. This means a stream may be ready at a later","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12973854,"byte_end":12973930,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/ point and one should wait for an event before calling `accept` again.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12973935,"byte_end":12974008,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974013,"byte_end":12974016,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ If an accepted stream is returned, the remote address of the peer is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974021,"byte_end":12974093,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/ returned along with it.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974098,"byte_end":12974125,"line_start":100,"line_end":100,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974409,"byte_end":12974419,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974343,"byte_end":12974397,"line_start":107,"line_end":107,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974683,"byte_end":12974690,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974498,"byte_end":12974556,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974561,"byte_end":12974564,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974569,"byte_end":12974645,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974650,"byte_end":12974671,"line_start":115,"line_end":115,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974960,"byte_end":12974963,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974771,"byte_end":12974829,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974834,"byte_end":12974837,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974842,"byte_end":12974908,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974913,"byte_end":12974916,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12974921,"byte_end":12974948,"line_start":124,"line_end":124,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12975281,"byte_end":12975291,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12975028,"byte_end":12975086,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12975091,"byte_end":12975094,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12975099,"byte_end":12975173,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12975178,"byte_end":12975254,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12975259,"byte_end":12975269,"line_start":133,"line_end":133,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979554,"byte_end":12979563,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":1283}],"decl_id":null,"docs":" A non-blocking TCP stream between a local socket and a remote socket.","sig":null,"attributes":[{"value":"/ A non-blocking TCP stream between a local socket and a remote socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12978522,"byte_end":12978595,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12978596,"byte_end":12978599,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12978600,"byte_end":12978656,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12978657,"byte_end":12978660,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12978661,"byte_end":12978675,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12978676,"byte_end":12978679,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12978783,"byte_end":12978829,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12978830,"byte_end":12978858,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12978859,"byte_end":12978864,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12978865,"byte_end":12978912,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12978913,"byte_end":12978966,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/ let listener = TcpListener::bind(address)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12978967,"byte_end":12979014,"line_start":29,"line_end":29,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979015,"byte_end":12979060,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979061,"byte_end":12979089,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979090,"byte_end":12979118,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979119,"byte_end":12979122,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979123,"byte_end":12979188,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979189,"byte_end":12979192,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979193,"byte_end":12979225,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979226,"byte_end":12979274,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979275,"byte_end":12979278,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979279,"byte_end":12979317,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::WRITABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979318,"byte_end":12979391,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979392,"byte_end":12979395,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979396,"byte_end":12979458,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979459,"byte_end":12979462,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The socket might be ready at this point","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979463,"byte_end":12979509,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979510,"byte_end":12979526,"line_start":45,"line_end":45,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979527,"byte_end":12979534,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979535,"byte_end":12979542,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981221,"byte_end":12981228,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"pub fn connect(SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream and issue a non-blocking connect to the\n specified address.","sig":null,"attributes":[{"value":"/ Create a new TCP stream and issue a non-blocking connect to the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979627,"byte_end":12979694,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ specified address.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979699,"byte_end":12979721,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979726,"byte_end":12979729,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979734,"byte_end":12979745,"line_start":56,"line_end":56,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979750,"byte_end":12979753,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The returned `TcpStream` may not be connected (and thus usable), unlike","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979758,"byte_end":12979833,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ the API found in `std::net::TcpStream`. Because Mio issues a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979838,"byte_end":12979902,"line_start":59,"line_end":59,"column_start":5,"column_end":69}},{"value":"/ *non-blocking* connect it will not block the thread and instead return","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979907,"byte_end":12979981,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ an unconnected `TcpStream`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979986,"byte_end":12980017,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980022,"byte_end":12980025,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Ensuring the returned stream is connected is surprisingly complex when","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980030,"byte_end":12980104,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ considering cross-platform support. Doing this properly should follow","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980109,"byte_end":12980182,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ the steps below, an example implementation can be found","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980187,"byte_end":12980246,"line_start":65,"line_end":65,"column_start":5,"column_end":64}},{"value":"/ [here](https://github.com/Thomasdezeeuw/heph/blob/0c4f1ab3eaf08bea1d65776528bfd6114c9f8374/src/net/tcp/stream.rs#L560-L622).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980251,"byte_end":12980379,"line_start":66,"line_end":66,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980384,"byte_end":12980387,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/  1. Call `TcpStream::connect`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980392,"byte_end":12980425,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/  2. Register the returned stream with at least [write interest].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980430,"byte_end":12980498,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/  3. Wait for a (writable) event.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980503,"byte_end":12980539,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/  4. Check `TcpStream::peer_addr`. If it returns `libc::EINPROGRESS` or","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980544,"byte_end":12980618,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/     `ErrorKind::NotConnected` it means the stream is not yet connected,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980623,"byte_end":12980698,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/     go back to step 3. If it returns an address it means the stream is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980703,"byte_end":12980777,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/     connected, go to step 5. If another error is returned something","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980782,"byte_end":12980853,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/     whent wrong.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980858,"byte_end":12980878,"line_start":75,"line_end":75,"column_start":5,"column_end":25}},{"value":"/  5. Now the stream can be used.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980883,"byte_end":12980918,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980923,"byte_end":12980926,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12980931,"byte_end":12981001,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately, it usually means there are insufficient","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981006,"byte_end":12981082,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ entries in the routing cache.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981087,"byte_end":12981120,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981125,"byte_end":12981128,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [write interest]: Interest::WRITABLE","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981133,"byte_end":12981173,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"cfg(not(target_os = \"wasi\"))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981178,"byte_end":12981209,"line_start":83,"line_end":83,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982118,"byte_end":12982126,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from a standard `net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpStream` from a standard `net::TcpStream`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981567,"byte_end":12981630,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981635,"byte_end":12981638,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981643,"byte_end":12981713,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981718,"byte_end":12981792,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981797,"byte_end":12981868,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981873,"byte_end":12981895,"line_start":99,"line_end":99,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981900,"byte_end":12981903,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981908,"byte_end":12981918,"line_start":101,"line_end":101,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981923,"byte_end":12981926,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The TCP stream here will not have `connect` called on it, so it","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12981931,"byte_end":12981998,"line_start":103,"line_end":103,"column_start":5,"column_end":72}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982003,"byte_end":12982075,"line_start":104,"line_end":104,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982080,"byte_end":12982106,"line_start":105,"line_end":105,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982334,"byte_end":12982343,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982249,"byte_end":12982322,"line_start":112,"line_end":112,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982505,"byte_end":12982515,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982421,"byte_end":12982493,"line_start":117,"line_end":117,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982869,"byte_end":12982877,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982594,"byte_end":12982660,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982665,"byte_end":12982668,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982673,"byte_end":12982745,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982750,"byte_end":12982819,"line_start":125,"line_end":125,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982824,"byte_end":12982857,"line_start":126,"line_end":126,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983621,"byte_end":12983632,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12982964,"byte_end":12983026,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983031,"byte_end":12983034,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983039,"byte_end":12983108,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983113,"byte_end":12983186,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983191,"byte_end":12983264,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983269,"byte_end":12983344,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983349,"byte_end":12983367,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983372,"byte_end":12983375,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983380,"byte_end":12983391,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983396,"byte_end":12983399,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983404,"byte_end":12983480,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `nodelay` on an","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983485,"byte_end":12983552,"line_start":142,"line_end":142,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983557,"byte_end":12983609,"line_start":143,"line_end":143,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984169,"byte_end":12984176,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983726,"byte_end":12983788,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983793,"byte_end":12983796,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983801,"byte_end":12983871,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983876,"byte_end":12983879,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983884,"byte_end":12983915,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983920,"byte_end":12983923,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983928,"byte_end":12983939,"line_start":154,"line_end":154,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983944,"byte_end":12983947,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12983952,"byte_end":12984028,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `nodelay` on an","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984033,"byte_end":12984100,"line_start":157,"line_end":157,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984105,"byte_end":12984157,"line_start":158,"line_end":158,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984669,"byte_end":12984676,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984246,"byte_end":12984304,"line_start":163,"line_end":163,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984309,"byte_end":12984312,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984317,"byte_end":12984393,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984398,"byte_end":12984419,"line_start":166,"line_end":166,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984424,"byte_end":12984427,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984432,"byte_end":12984443,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984448,"byte_end":12984451,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984456,"byte_end":12984532,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `ttl` on an","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984537,"byte_end":12984600,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984605,"byte_end":12984657,"line_start":172,"line_end":172,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985184,"byte_end":12985187,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984757,"byte_end":12984815,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984820,"byte_end":12984823,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984828,"byte_end":12984894,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984899,"byte_end":12984902,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984907,"byte_end":12984918,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984923,"byte_end":12984926,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12984931,"byte_end":12985007,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `ttl` on an","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985012,"byte_end":12985075,"line_start":184,"line_end":184,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is unspecified behavior.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985080,"byte_end":12985132,"line_start":185,"line_end":185,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985137,"byte_end":12985140,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985145,"byte_end":12985172,"line_start":187,"line_end":187,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985505,"byte_end":12985515,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985252,"byte_end":12985310,"line_start":192,"line_end":192,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985315,"byte_end":12985318,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985323,"byte_end":12985397,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985402,"byte_end":12985478,"line_start":195,"line_end":195,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985483,"byte_end":12985493,"line_start":196,"line_end":196,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985953,"byte_end":12985957,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985601,"byte_end":12985671,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985676,"byte_end":12985745,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985750,"byte_end":12985789,"line_start":203,"line_end":203,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985794,"byte_end":12985797,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985802,"byte_end":12985876,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12985881,"byte_end":12985941,"line_start":206,"line_end":206,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987962,"byte_end":12987968,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"name":"try_io","qualname":"<TcpStream>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986044,"byte_end":12986118,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986123,"byte_end":12986161,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986166,"byte_end":12986169,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986174,"byte_end":12986185,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986190,"byte_end":12986193,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986198,"byte_end":12986268,"line_start":216,"line_end":216,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986273,"byte_end":12986349,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986354,"byte_end":12986391,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986396,"byte_end":12986399,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986404,"byte_end":12986449,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986454,"byte_end":12986457,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986462,"byte_end":12986476,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986481,"byte_end":12986484,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986574,"byte_end":12986602,"line_start":226,"line_end":226,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986607,"byte_end":12986612,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986617,"byte_end":12986664,"line_start":228,"line_end":228,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986669,"byte_end":12986685,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/ #[cfg(unix)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986690,"byte_end":12986706,"line_start":230,"line_end":230,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986711,"byte_end":12986746,"line_start":231,"line_end":231,"column_start":5,"column_end":40}},{"value":"/ #[cfg(windows)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986751,"byte_end":12986770,"line_start":232,"line_end":232,"column_start":5,"column_end":24}},{"value":"/ use std::os::windows::io::AsRawSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986775,"byte_end":12986817,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986822,"byte_end":12986850,"line_start":234,"line_end":234,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986855,"byte_end":12986858,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let address = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986863,"byte_end":12986915,"line_start":236,"line_end":236,"column_start":5,"column_end":57}},{"value":"/ let stream = TcpStream::connect(address)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986920,"byte_end":12986966,"line_start":237,"line_end":237,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986971,"byte_end":12986974,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is readable...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12986979,"byte_end":12987022,"line_start":239,"line_end":239,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987027,"byte_end":12987030,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // Read from the stream using a direct libc call, of course the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987035,"byte_end":12987102,"line_start":241,"line_end":241,"column_start":5,"column_end":72}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987107,"byte_end":12987163,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987168,"byte_end":12987195,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/ let n = stream.try_io(|| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987200,"byte_end":12987230,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987235,"byte_end":12987286,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/     #[cfg(unix)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987291,"byte_end":12987311,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/     let res = unsafe { libc::recv(stream.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987316,"byte_end":12987399,"line_start":247,"line_end":247,"column_start":5,"column_end":88}},{"value":"/     #[cfg(windows)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987404,"byte_end":12987427,"line_start":248,"line_end":248,"column_start":5,"column_end":28}},{"value":"/     let res = unsafe { libc::recvfrom(stream.as_raw_socket() as usize, buf_ptr, buf.len() as i32, 0, std::ptr::null_mut(), std::ptr::null_mut()) };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987432,"byte_end":12987583,"line_start":249,"line_end":249,"column_start":5,"column_end":156}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987588,"byte_end":12987610,"line_start":250,"line_end":250,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987615,"byte_end":12987643,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987648,"byte_end":12987664,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987669,"byte_end":12987742,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987747,"byte_end":12987795,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987800,"byte_end":12987843,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987848,"byte_end":12987857,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987862,"byte_end":12987870,"line_start":257,"line_end":257,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987875,"byte_end":12987909,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987914,"byte_end":12987926,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987931,"byte_end":12987938,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12987943,"byte_end":12987950,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995466,"byte_end":12995475,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":1401}],"decl_id":null,"docs":" A User Datagram Protocol socket.","sig":null,"attributes":[{"value":"/ A User Datagram Protocol socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12992828,"byte_end":12992864,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12992865,"byte_end":12992868,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of a bound UDP socket. This supports both IPv4 and","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12992869,"byte_end":12992949,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ IPv6 addresses, and there is no corresponding notion of a server because UDP","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12992950,"byte_end":12993030,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ is a datagram protocol.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993031,"byte_end":12993058,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993059,"byte_end":12993062,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993063,"byte_end":12993077,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993078,"byte_end":12993081,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993185,"byte_end":12993213,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993214,"byte_end":12993219,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993220,"byte_end":12993267,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ // An Echo program:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993268,"byte_end":12993291,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ // SENDER -> sends a message.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993292,"byte_end":12993325,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ // ECHOER -> listens and prints the message received.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993326,"byte_end":12993383,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993384,"byte_end":12993387,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993388,"byte_end":12993416,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993417,"byte_end":12993462,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993463,"byte_end":12993491,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993492,"byte_end":12993495,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ const SENDER: Token = Token(0);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993496,"byte_end":12993531,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ const ECHOER: Token = Token(1);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993532,"byte_end":12993567,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993568,"byte_end":12993571,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // This operation will fail if the address is in use, so we select different ports for each","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993572,"byte_end":12993667,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ // socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993668,"byte_end":12993682,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ let mut sender_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993683,"byte_end":12993752,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ let mut echoer_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993753,"byte_end":12993822,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993823,"byte_end":12993826,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // If we do not use connect here, SENDER and ECHOER would need to call send_to and recv_from","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993827,"byte_end":12993923,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/ // respectively.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993924,"byte_end":12993944,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/ sender_socket.connect(echoer_socket.local_addr()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12993945,"byte_end":12994001,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994002,"byte_end":12994005,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // We need a Poll to check if SENDER is ready to be written into, and if ECHOER is ready to be","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994006,"byte_end":12994104,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ // read from.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994105,"byte_end":12994122,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994123,"byte_end":12994155,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994156,"byte_end":12994159,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // We register our sockets here so that we can check if they are ready to be written/read.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994160,"byte_end":12994254,"line_start":59,"line_end":59,"column_start":1,"column_end":95}},{"value":"/ poll.registry().register(&mut sender_socket, SENDER, Interest::WRITABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994255,"byte_end":12994333,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ poll.registry().register(&mut echoer_socket, ECHOER, Interest::READABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994334,"byte_end":12994412,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994413,"byte_end":12994416,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let msg_to_send = [9; 9];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994417,"byte_end":12994446,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ let mut buffer = [0; 9];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994447,"byte_end":12994475,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994476,"byte_end":12994479,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994480,"byte_end":12994528,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ loop {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994529,"byte_end":12994539,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994540,"byte_end":12994606,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/     for event in events.iter() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994607,"byte_end":12994643,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994644,"byte_end":12994677,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/             // Our SENDER is ready to be written into.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994678,"byte_end":12994736,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/             SENDER => {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994737,"byte_end":12994764,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/                 let bytes_sent = sender_socket.send(&msg_to_send)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994765,"byte_end":12994836,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/                 assert_eq!(bytes_sent, 9);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994837,"byte_end":12994883,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/                 println!(\"sent {:?} -> {:?} bytes\", msg_to_send, bytes_sent);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994884,"byte_end":12994965,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/             },","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994966,"byte_end":12994984,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/             // Our ECHOER is ready to be read from.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12994985,"byte_end":12995040,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/             ECHOER => {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995041,"byte_end":12995068,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/                 let num_recv = echoer_socket.recv(&mut buffer)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995069,"byte_end":12995137,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/                 println!(\"echo {:?} -> {:?}\", buffer, num_recv);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995138,"byte_end":12995206,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/                 buffer = [0; 9];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995207,"byte_end":12995243,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 # drop(buffer); // Silence unused assignment warning.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995244,"byte_end":12995317,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/                 # return Ok(());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995318,"byte_end":12995354,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"/             }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995355,"byte_end":12995372,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995373,"byte_end":12995408,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995409,"byte_end":12995422,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995423,"byte_end":12995432,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995433,"byte_end":12995438,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995439,"byte_end":12995446,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995447,"byte_end":12995454,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996449,"byte_end":12996453,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub fn bind(SocketAddr) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995539,"byte_end":12995587,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995592,"byte_end":12995595,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995600,"byte_end":12995614,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995619,"byte_end":12995622,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995738,"byte_end":12995766,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995771,"byte_end":12995776,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995781,"byte_end":12995828,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995833,"byte_end":12995861,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995866,"byte_end":12995869,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // We must bind it to an open address.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995874,"byte_end":12995916,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ let socket = match UdpSocket::bind(\"127.0.0.1:0\".parse()?) {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995921,"byte_end":12995985,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/     Ok(new_socket) => new_socket,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995990,"byte_end":12996027,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/     Err(fail) => {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996032,"byte_end":12996054,"line_start":110,"line_end":110,"column_start":5,"column_end":27}},{"value":"/         // We panic! here, but you could try to bind it again on another address.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996059,"byte_end":12996144,"line_start":111,"line_end":111,"column_start":5,"column_end":90}},{"value":"/         panic!(\"Failed to bind socket. {:?}\", fail);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996149,"byte_end":12996205,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996210,"byte_end":12996219,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996224,"byte_end":12996230,"line_start":114,"line_end":114,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996235,"byte_end":12996238,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Our socket was created, but we should not use it before checking it's readiness.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996243,"byte_end":12996330,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ #    drop(socket); // Silence unused variable warning.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996335,"byte_end":12996393,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996398,"byte_end":12996413,"line_start":118,"line_end":118,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996418,"byte_end":12996425,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996430,"byte_end":12996437,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996904,"byte_end":12996912,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from a standard `net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from a standard `net::UdpSocket`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996564,"byte_end":12996627,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996632,"byte_end":12996635,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996640,"byte_end":12996710,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996715,"byte_end":12996789,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996794,"byte_end":12996865,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12996870,"byte_end":12996892,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997866,"byte_end":12997876,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address that this socket was created from.","sig":null,"attributes":[{"value":"/ Returns the socket address that this socket was created from.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997035,"byte_end":12997100,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997105,"byte_end":12997108,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997113,"byte_end":12997127,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997132,"byte_end":12997135,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997533,"byte_end":12997561,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997566,"byte_end":12997571,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997576,"byte_end":12997623,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997628,"byte_end":12997656,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997661,"byte_end":12997664,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997669,"byte_end":12997707,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997712,"byte_end":12997752,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(socket.local_addr()?.ip(), addr.ip());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997757,"byte_end":12997810,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997815,"byte_end":12997830,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997835,"byte_end":12997842,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997847,"byte_end":12997854,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998610,"byte_end":12998619,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer this socket was connected to.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer this socket was connected to.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12997955,"byte_end":12998034,"line_start":164,"line_end":164,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998039,"byte_end":12998042,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998047,"byte_end":12998061,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998066,"byte_end":12998069,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998185,"byte_end":12998213,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998218,"byte_end":12998223,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998228,"byte_end":12998275,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998280,"byte_end":12998308,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998313,"byte_end":12998316,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998321,"byte_end":12998359,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/ let peer_addr = \"127.0.0.1:11100\".parse()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998364,"byte_end":12998411,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998416,"byte_end":12998456,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/ socket.connect(peer_addr)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998461,"byte_end":12998492,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(socket.peer_addr()?.ip(), peer_addr.ip());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998497,"byte_end":12998554,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998559,"byte_end":12998574,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998579,"byte_end":12998586,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998591,"byte_end":12998598,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999500,"byte_end":12999507,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub fn send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998697,"byte_end":12998771,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998776,"byte_end":12998804,"line_start":188,"line_end":188,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998809,"byte_end":12998812,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of `ToSocketAddrs` trait. See its","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998817,"byte_end":12998890,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998895,"byte_end":12998935,"line_start":191,"line_end":191,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998940,"byte_end":12998943,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998948,"byte_end":12998962,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998967,"byte_end":12998970,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998975,"byte_end":12998988,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12998993,"byte_end":12999021,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999026,"byte_end":12999073,"line_start":197,"line_end":197,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999078,"byte_end":12999106,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999111,"byte_end":12999114,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999119,"byte_end":12999177,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999182,"byte_end":12999185,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is writable before calling send_to,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999190,"byte_end":12999260,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999265,"byte_end":12999312,"line_start":203,"line_end":203,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999317,"byte_end":12999320,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let bytes_sent = socket.send_to(&[9; 9], \"127.0.0.1:11100\".parse()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999325,"byte_end":12999399,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(bytes_sent, 9);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999404,"byte_end":12999434,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999439,"byte_end":12999444,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999449,"byte_end":12999464,"line_start":208,"line_end":208,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999469,"byte_end":12999476,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999481,"byte_end":12999488,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000808,"byte_end":13000817,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999642,"byte_end":12999716,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999721,"byte_end":12999772,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999777,"byte_end":12999780,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999785,"byte_end":12999796,"line_start":218,"line_end":218,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999801,"byte_end":12999804,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999809,"byte_end":12999884,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv_from returns the error","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999889,"byte_end":12999967,"line_start":221,"line_end":221,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12999972,"byte_end":13000020,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000025,"byte_end":13000092,"line_start":223,"line_end":223,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000097,"byte_end":13000165,"line_start":224,"line_end":224,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000170,"byte_end":13000173,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000178,"byte_end":13000192,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000197,"byte_end":13000200,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000205,"byte_end":13000218,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000223,"byte_end":13000251,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000256,"byte_end":13000261,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000266,"byte_end":13000313,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000318,"byte_end":13000346,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000351,"byte_end":13000354,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000359,"byte_end":13000417,"line_start":234,"line_end":234,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000422,"byte_end":13000425,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000430,"byte_end":13000502,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000507,"byte_end":13000554,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000559,"byte_end":13000562,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000567,"byte_end":13000592,"line_start":239,"line_end":239,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.recv_from(&mut buf)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000597,"byte_end":13000657,"line_start":240,"line_end":240,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000662,"byte_end":13000742,"line_start":241,"line_end":241,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000747,"byte_end":13000752,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000757,"byte_end":13000772,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000777,"byte_end":13000784,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000789,"byte_end":13000796,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002160,"byte_end":13002169,"line_start":282,"line_end":282,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub fn peek_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13000944,"byte_end":13001020,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001025,"byte_end":13001101,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001106,"byte_end":13001124,"line_start":252,"line_end":252,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001129,"byte_end":13001132,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001137,"byte_end":13001148,"line_start":254,"line_end":254,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001153,"byte_end":13001156,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001161,"byte_end":13001236,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001241,"byte_end":13001319,"line_start":257,"line_end":257,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001324,"byte_end":13001372,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001377,"byte_end":13001444,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001449,"byte_end":13001517,"line_start":260,"line_end":260,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001522,"byte_end":13001525,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001530,"byte_end":13001544,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001549,"byte_end":13001552,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001557,"byte_end":13001570,"line_start":264,"line_end":264,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001575,"byte_end":13001603,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001608,"byte_end":13001613,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001618,"byte_end":13001665,"line_start":267,"line_end":267,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001670,"byte_end":13001698,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001703,"byte_end":13001706,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001711,"byte_end":13001769,"line_start":270,"line_end":270,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001774,"byte_end":13001777,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001782,"byte_end":13001854,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001859,"byte_end":13001906,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001911,"byte_end":13001914,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001919,"byte_end":13001944,"line_start":275,"line_end":275,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.peek_from(&mut buf)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13001949,"byte_end":13002009,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002014,"byte_end":13002094,"line_start":277,"line_end":277,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002099,"byte_end":13002104,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002109,"byte_end":13002124,"line_start":279,"line_end":279,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002129,"byte_end":13002136,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002141,"byte_end":13002148,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002440,"byte_end":13002444,"line_start":288,"line_end":288,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the address previously bound via connect(). On success,\n returns the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the address previously bound via connect(). On success,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002296,"byte_end":13002383,"line_start":286,"line_end":286,"column_start":5,"column_end":92}},{"value":"/ returns the number of bytes written.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002388,"byte_end":13002428,"line_start":287,"line_end":287,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003068,"byte_end":13003072,"line_start":302,"line_end":302,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket previously bound with connect(). On success, returns\n the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket previously bound with connect(). On success, returns","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002548,"byte_end":13002634,"line_start":292,"line_end":292,"column_start":5,"column_end":91}},{"value":"/ the number of bytes read.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002639,"byte_end":13002668,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002673,"byte_end":13002676,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002681,"byte_end":13002692,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002697,"byte_end":13002700,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002705,"byte_end":13002780,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv returns the error","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002785,"byte_end":13002858,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002863,"byte_end":13002911,"line_start":299,"line_end":299,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002916,"byte_end":13002983,"line_start":300,"line_end":300,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13002988,"byte_end":13003056,"line_start":301,"line_end":301,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003710,"byte_end":13003714,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003180,"byte_end":13003256,"line_start":306,"line_end":306,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003261,"byte_end":13003310,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003315,"byte_end":13003318,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003323,"byte_end":13003334,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003339,"byte_end":13003342,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003347,"byte_end":13003422,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003427,"byte_end":13003500,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003505,"byte_end":13003553,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003558,"byte_end":13003625,"line_start":314,"line_end":314,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003630,"byte_end":13003698,"line_start":315,"line_end":315,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004208,"byte_end":13004215,"line_start":327,"line_end":327,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub fn connect(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for `send()`\n and limiting packets that are read via `recv` from the address specified\n in `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for `send()`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003822,"byte_end":13003894,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ and limiting packets that are read via `recv` from the address specified","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003899,"byte_end":13003975,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ in `addr`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003980,"byte_end":13003994,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13003999,"byte_end":13004002,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004007,"byte_end":13004077,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately, it usually means there are insufficient","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004082,"byte_end":13004158,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/ entries in the routing cache.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004163,"byte_end":13004196,"line_start":326,"line_end":326,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005069,"byte_end":13005082,"line_start":355,"line_end":355,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004305,"byte_end":13004369,"line_start":331,"line_end":331,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004374,"byte_end":13004377,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004382,"byte_end":13004453,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004458,"byte_end":13004470,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004475,"byte_end":13004478,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004483,"byte_end":13004497,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004502,"byte_end":13004505,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004621,"byte_end":13004649,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004654,"byte_end":13004659,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004664,"byte_end":13004711,"line_start":342,"line_end":342,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004716,"byte_end":13004744,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004749,"byte_end":13004752,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004757,"byte_end":13004825,"line_start":345,"line_end":345,"column_start":5,"column_end":73}},{"value":"/ if broadcast_socket.broadcast()? == false {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004830,"byte_end":13004877,"line_start":346,"line_end":346,"column_start":5,"column_end":52}},{"value":"/     broadcast_socket.set_broadcast(true)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004882,"byte_end":13004928,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004933,"byte_end":13004938,"line_start":348,"line_end":348,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004943,"byte_end":13004946,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, true);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13004951,"byte_end":13005003,"line_start":350,"line_end":350,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005008,"byte_end":13005013,"line_start":351,"line_end":351,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005018,"byte_end":13005033,"line_start":352,"line_end":352,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005038,"byte_end":13005045,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005050,"byte_end":13005057,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005850,"byte_end":13005859,"line_start":381,"line_end":381,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005168,"byte_end":13005232,"line_start":359,"line_end":359,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005237,"byte_end":13005240,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005245,"byte_end":13005292,"line_start":361,"line_end":361,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005297,"byte_end":13005325,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005330,"byte_end":13005333,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005338,"byte_end":13005371,"line_start":364,"line_end":364,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005376,"byte_end":13005379,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005384,"byte_end":13005398,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005403,"byte_end":13005406,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005522,"byte_end":13005550,"line_start":370,"line_end":370,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005555,"byte_end":13005560,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005565,"byte_end":13005612,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005617,"byte_end":13005645,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005650,"byte_end":13005653,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005658,"byte_end":13005726,"line_start":375,"line_end":375,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, false);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005731,"byte_end":13005784,"line_start":376,"line_end":376,"column_start":5,"column_end":58}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005789,"byte_end":13005794,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005799,"byte_end":13005814,"line_start":378,"line_end":378,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005819,"byte_end":13005826,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005831,"byte_end":13005838,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006163,"byte_end":13006184,"line_start":389,"line_end":389,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13005931,"byte_end":13006000,"line_start":385,"line_end":385,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006005,"byte_end":13006008,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006013,"byte_end":13006087,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006092,"byte_end":13006151,"line_start":388,"line_end":388,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006514,"byte_end":13006531,"line_start":399,"line_end":399,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006278,"byte_end":13006347,"line_start":393,"line_end":393,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006352,"byte_end":13006355,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006360,"byte_end":13006407,"line_start":395,"line_end":395,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006412,"byte_end":13006448,"line_start":396,"line_end":396,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006453,"byte_end":13006456,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006461,"byte_end":13006502,"line_start":398,"line_end":398,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006992,"byte_end":13007012,"line_start":410,"line_end":410,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006611,"byte_end":13006679,"line_start":403,"line_end":403,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006684,"byte_end":13006687,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006692,"byte_end":13006762,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006767,"byte_end":13006841,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006846,"byte_end":13006908,"line_start":407,"line_end":407,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006913,"byte_end":13006916,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13006921,"byte_end":13006980,"line_start":409,"line_end":409,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007339,"byte_end":13007355,"line_start":420,"line_end":420,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007106,"byte_end":13007174,"line_start":414,"line_end":414,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007179,"byte_end":13007182,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007187,"byte_end":13007234,"line_start":416,"line_end":416,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007239,"byte_end":13007274,"line_start":417,"line_end":417,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007279,"byte_end":13007282,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007287,"byte_end":13007327,"line_start":419,"line_end":419,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007669,"byte_end":13007690,"line_start":428,"line_end":428,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007433,"byte_end":13007504,"line_start":424,"line_end":424,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007509,"byte_end":13007512,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007517,"byte_end":13007593,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007598,"byte_end":13007657,"line_start":427,"line_end":427,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008022,"byte_end":13008039,"line_start":438,"line_end":438,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007784,"byte_end":13007855,"line_start":432,"line_end":432,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007860,"byte_end":13007863,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007868,"byte_end":13007915,"line_start":434,"line_end":434,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007920,"byte_end":13007956,"line_start":435,"line_end":435,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007961,"byte_end":13007964,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13007969,"byte_end":13008010,"line_start":437,"line_end":437,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008828,"byte_end":13008835,"line_start":466,"line_end":466,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008119,"byte_end":13008177,"line_start":442,"line_end":442,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008182,"byte_end":13008185,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008190,"byte_end":13008266,"line_start":444,"line_end":444,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008271,"byte_end":13008292,"line_start":445,"line_end":445,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008297,"byte_end":13008300,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008305,"byte_end":13008319,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008324,"byte_end":13008327,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008443,"byte_end":13008471,"line_start":451,"line_end":451,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008476,"byte_end":13008481,"line_start":452,"line_end":452,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008486,"byte_end":13008533,"line_start":453,"line_end":453,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008538,"byte_end":13008566,"line_start":454,"line_end":454,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008571,"byte_end":13008574,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008579,"byte_end":13008637,"line_start":456,"line_end":456,"column_start":5,"column_end":63}},{"value":"/ if socket.ttl()? < 255 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008642,"byte_end":13008670,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/     socket.set_ttl(255)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008675,"byte_end":13008704,"line_start":458,"line_end":458,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008709,"byte_end":13008714,"line_start":459,"line_end":459,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008719,"byte_end":13008722,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008727,"byte_end":13008762,"line_start":461,"line_end":461,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008767,"byte_end":13008772,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008777,"byte_end":13008792,"line_start":463,"line_end":463,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008797,"byte_end":13008804,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008809,"byte_end":13008816,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009582,"byte_end":13009585,"line_start":493,"line_end":493,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008916,"byte_end":13008974,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008979,"byte_end":13008982,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13008987,"byte_end":13009053,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009058,"byte_end":13009061,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009066,"byte_end":13009093,"line_start":474,"line_end":474,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009098,"byte_end":13009101,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009106,"byte_end":13009120,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009125,"byte_end":13009128,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009244,"byte_end":13009272,"line_start":480,"line_end":480,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009277,"byte_end":13009282,"line_start":481,"line_end":481,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009287,"byte_end":13009334,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009339,"byte_end":13009367,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009372,"byte_end":13009375,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009380,"byte_end":13009438,"line_start":485,"line_end":485,"column_start":5,"column_end":63}},{"value":"/ socket.set_ttl(255)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009443,"byte_end":13009468,"line_start":486,"line_end":486,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009473,"byte_end":13009476,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009481,"byte_end":13009516,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009521,"byte_end":13009526,"line_start":489,"line_end":489,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009531,"byte_end":13009546,"line_start":490,"line_end":490,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009551,"byte_end":13009558,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009563,"byte_end":13009570,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010129,"byte_end":13010146,"line_start":505,"line_end":505,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009650,"byte_end":13009708,"line_start":497,"line_end":497,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009713,"byte_end":13009716,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009721,"byte_end":13009795,"line_start":499,"line_end":499,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009800,"byte_end":13009873,"line_start":500,"line_end":500,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009878,"byte_end":13009950,"line_start":501,"line_end":501,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13009955,"byte_end":13010025,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010030,"byte_end":13010068,"line_start":503,"line_end":503,"column_start":5,"column_end":43}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010073,"byte_end":13010117,"line_start":504,"line_end":504,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010653,"byte_end":13010670,"line_start":515,"line_end":515,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010288,"byte_end":13010348,"line_start":509,"line_end":509,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010353,"byte_end":13010356,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010361,"byte_end":13010435,"line_start":511,"line_end":511,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010440,"byte_end":13010513,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010518,"byte_end":13010592,"line_start":513,"line_end":513,"column_start":5,"column_end":79}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010597,"byte_end":13010641,"line_start":514,"line_end":514,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011073,"byte_end":13011091,"line_start":526,"line_end":526,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010806,"byte_end":13010865,"line_start":519,"line_end":519,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010870,"byte_end":13010873,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010878,"byte_end":13010925,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010930,"byte_end":13010962,"line_start":522,"line_end":522,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010967,"byte_end":13010970,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13010975,"byte_end":13011012,"line_start":524,"line_end":524,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011017,"byte_end":13011061,"line_start":525,"line_end":525,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011503,"byte_end":13011521,"line_start":537,"line_end":537,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011234,"byte_end":13011295,"line_start":530,"line_end":530,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011300,"byte_end":13011303,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011308,"byte_end":13011355,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011360,"byte_end":13011392,"line_start":533,"line_end":533,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011397,"byte_end":13011400,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011405,"byte_end":13011442,"line_start":535,"line_end":535,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011447,"byte_end":13011491,"line_start":536,"line_end":536,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011780,"byte_end":13011787,"line_start":543,"line_end":543,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<UdpSocket>::only_v6","value":"pub fn only_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_V6ONLY` option on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011658,"byte_end":13011719,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011724,"byte_end":13011768,"line_start":542,"line_end":542,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012120,"byte_end":13012130,"line_start":552,"line_end":552,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011867,"byte_end":13011925,"line_start":547,"line_end":547,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011930,"byte_end":13011933,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13011938,"byte_end":13012012,"line_start":549,"line_end":549,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012017,"byte_end":13012093,"line_start":550,"line_end":550,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012098,"byte_end":13012108,"line_start":551,"line_end":551,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014125,"byte_end":13014131,"line_start":607,"line_end":607,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UdpSocket>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012216,"byte_end":13012290,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012295,"byte_end":13012333,"line_start":557,"line_end":557,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012338,"byte_end":13012341,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012346,"byte_end":13012357,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012362,"byte_end":13012365,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012370,"byte_end":13012440,"line_start":561,"line_end":561,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012445,"byte_end":13012521,"line_start":562,"line_end":562,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012526,"byte_end":13012563,"line_start":563,"line_end":563,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012568,"byte_end":13012571,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012576,"byte_end":13012621,"line_start":565,"line_end":565,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012626,"byte_end":13012629,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012634,"byte_end":13012648,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012653,"byte_end":13012656,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012746,"byte_end":13012774,"line_start":571,"line_end":571,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012779,"byte_end":13012784,"line_start":572,"line_end":572,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012789,"byte_end":13012836,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012841,"byte_end":13012857,"line_start":574,"line_end":574,"column_start":5,"column_end":21}},{"value":"/ #[cfg(unix)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012862,"byte_end":13012878,"line_start":575,"line_end":575,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012883,"byte_end":13012918,"line_start":576,"line_end":576,"column_start":5,"column_end":40}},{"value":"/ #[cfg(windows)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012923,"byte_end":13012942,"line_start":577,"line_end":577,"column_start":5,"column_end":24}},{"value":"/ use std::os::windows::io::AsRawSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012947,"byte_end":13012989,"line_start":578,"line_end":578,"column_start":5,"column_end":47}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13012994,"byte_end":13013022,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013027,"byte_end":13013030,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let address = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013035,"byte_end":13013087,"line_start":581,"line_end":581,"column_start":5,"column_end":57}},{"value":"/ let dgram = UdpSocket::bind(address)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013092,"byte_end":13013134,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013139,"byte_end":13013142,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is readable...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013147,"byte_end":13013189,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013194,"byte_end":13013197,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ // Read from the dgram using a direct libc call, of course the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013202,"byte_end":13013268,"line_start":586,"line_end":586,"column_start":5,"column_end":71}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013273,"byte_end":13013329,"line_start":587,"line_end":587,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013334,"byte_end":13013361,"line_start":588,"line_end":588,"column_start":5,"column_end":32}},{"value":"/ let n = dgram.try_io(|| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013366,"byte_end":13013395,"line_start":589,"line_end":589,"column_start":5,"column_end":34}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013400,"byte_end":13013451,"line_start":590,"line_end":590,"column_start":5,"column_end":56}},{"value":"/     #[cfg(unix)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013456,"byte_end":13013476,"line_start":591,"line_end":591,"column_start":5,"column_end":25}},{"value":"/     let res = unsafe { libc::recv(dgram.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013481,"byte_end":13013563,"line_start":592,"line_end":592,"column_start":5,"column_end":87}},{"value":"/     #[cfg(windows)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013568,"byte_end":13013591,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/     let res = unsafe { libc::recvfrom(dgram.as_raw_socket() as usize, buf_ptr, buf.len() as i32, 0, std::ptr::null_mut(), std::ptr::null_mut()) };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013596,"byte_end":13013746,"line_start":594,"line_end":594,"column_start":5,"column_end":155}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013751,"byte_end":13013773,"line_start":595,"line_end":595,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013778,"byte_end":13013806,"line_start":596,"line_end":596,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013811,"byte_end":13013827,"line_start":597,"line_end":597,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013832,"byte_end":13013905,"line_start":598,"line_end":598,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013910,"byte_end":13013958,"line_start":599,"line_end":599,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13013963,"byte_end":13014006,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014011,"byte_end":13014020,"line_start":601,"line_end":601,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014025,"byte_end":13014033,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014038,"byte_end":13014072,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014077,"byte_end":13014089,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014094,"byte_end":13014101,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014106,"byte_end":13014113,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13016671,"byte_end":13016683,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::net::uds::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":1506}],"decl_id":null,"docs":" A Unix datagram socket.\n","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13016632,"byte_end":13016659,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13016824,"byte_end":13016828,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.\n","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13016753,"byte_end":13016812,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017322,"byte_end":13017330,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> UnixDatagram","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13016971,"byte_end":13017040,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017045,"byte_end":13017048,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix datagram from the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017053,"byte_end":13017126,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017131,"byte_end":13017205,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying datagram; it is left up to the user to set it in","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017210,"byte_end":13017283,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017288,"byte_end":13017310,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017647,"byte_end":13017654,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017462,"byte_end":13017511,"line_start":33,"line_end":33,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017516,"byte_end":13017519,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017524,"byte_end":13017594,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017599,"byte_end":13017635,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017832,"byte_end":13017839,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix Datagram socket which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a Unix Datagram socket which is not bound to any address.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017751,"byte_end":13017820,"line_start":41,"line_end":41,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13018009,"byte_end":13018013,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Create an unnamed pair of connected sockets.\n","sig":null,"attributes":[{"value":"/ Create an unnamed pair of connected sockets.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13017949,"byte_end":13017997,"line_start":46,"line_end":46,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13018323,"byte_end":13018333,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.\n","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13018272,"byte_end":13018311,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13018567,"byte_end":13018576,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13018437,"byte_end":13018483,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13018488,"byte_end":13018491,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13018496,"byte_end":13018555,"line_start":63,"line_end":63,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13018837,"byte_end":13018846,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, sys::SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13018679,"byte_end":13018713,"line_start":68,"line_end":68,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13018718,"byte_end":13018721,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13018726,"byte_end":13018795,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ whence the data came.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13018800,"byte_end":13018825,"line_start":71,"line_end":71,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019120,"byte_end":13019124,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019012,"byte_end":13019046,"line_start":77,"line_end":77,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019051,"byte_end":13019054,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019059,"byte_end":13019108,"line_start":79,"line_end":79,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019363,"byte_end":13019370,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub fn send_to<P: AsRef<Path>>(&Self, &[u8], P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019232,"byte_end":13019286,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019291,"byte_end":13019294,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019299,"byte_end":13019351,"line_start":86,"line_end":86,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019795,"byte_end":13019799,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"send","qualname":"<UnixDatagram>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019508,"byte_end":13019558,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019563,"byte_end":13019566,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The peer address may be set by the `connect` method, and this method","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019571,"byte_end":13019643,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ will return an error if the socket has not already been connected.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019648,"byte_end":13019718,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019723,"byte_end":13019726,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019731,"byte_end":13019783,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019962,"byte_end":13019972,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13019903,"byte_end":13019950,"line_start":101,"line_end":101,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020338,"byte_end":13020346,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020058,"byte_end":13020123,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020128,"byte_end":13020131,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020136,"byte_end":13020204,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020209,"byte_end":13020279,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020284,"byte_end":13020326,"line_start":110,"line_end":110,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022653,"byte_end":13022659,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UnixDatagram>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020433,"byte_end":13020507,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020512,"byte_end":13020550,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020555,"byte_end":13020558,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020563,"byte_end":13020574,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020579,"byte_end":13020582,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020587,"byte_end":13020657,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020662,"byte_end":13020738,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020743,"byte_end":13020780,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020785,"byte_end":13020788,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020793,"byte_end":13020838,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020843,"byte_end":13020846,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020851,"byte_end":13020865,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020870,"byte_end":13020873,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020878,"byte_end":13020885,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020890,"byte_end":13020918,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020923,"byte_end":13020928,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020933,"byte_end":13020980,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13020985,"byte_end":13021001,"line_start":132,"line_end":132,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021006,"byte_end":13021041,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/ use mio::net::UnixDatagram;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021046,"byte_end":13021077,"line_start":134,"line_end":134,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021082,"byte_end":13021085,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let (dgram1, dgram2) = UnixDatagram::pair()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021090,"byte_end":13021139,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021144,"byte_end":13021147,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is writable...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021152,"byte_end":13021194,"line_start":138,"line_end":138,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021199,"byte_end":13021202,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ // Write to the dgram using a direct libc call, of course the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021207,"byte_end":13021272,"line_start":140,"line_end":140,"column_start":5,"column_end":70}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021277,"byte_end":13021334,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021339,"byte_end":13021362,"line_start":142,"line_end":142,"column_start":5,"column_end":28}},{"value":"/ let n = dgram1.try_io(|| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021367,"byte_end":13021397,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021402,"byte_end":13021453,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::send(dgram1.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021458,"byte_end":13021541,"line_start":145,"line_end":145,"column_start":5,"column_end":88}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021546,"byte_end":13021568,"line_start":146,"line_end":146,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021573,"byte_end":13021601,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021606,"byte_end":13021622,"line_start":148,"line_end":148,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::send, the closure","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021627,"byte_end":13021700,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021705,"byte_end":13021753,"line_start":150,"line_end":150,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021758,"byte_end":13021801,"line_start":151,"line_end":151,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021806,"byte_end":13021815,"line_start":152,"line_end":152,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021820,"byte_end":13021828,"line_start":153,"line_end":153,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021833,"byte_end":13021868,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021873,"byte_end":13021876,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ // Wait until the dgram is readable...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021881,"byte_end":13021923,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021928,"byte_end":13021931,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ // Read from the dgram using a direct libc call, of course the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13021936,"byte_end":13022002,"line_start":158,"line_end":158,"column_start":5,"column_end":71}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022007,"byte_end":13022063,"line_start":159,"line_end":159,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022068,"byte_end":13022095,"line_start":160,"line_end":160,"column_start":5,"column_end":32}},{"value":"/ let n = dgram2.try_io(|| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022100,"byte_end":13022130,"line_start":161,"line_end":161,"column_start":5,"column_end":35}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022135,"byte_end":13022186,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::recv(dgram2.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022191,"byte_end":13022274,"line_start":163,"line_end":163,"column_start":5,"column_end":88}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022279,"byte_end":13022301,"line_start":164,"line_end":164,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022306,"byte_end":13022334,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022339,"byte_end":13022355,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022360,"byte_end":13022433,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022438,"byte_end":13022486,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022491,"byte_end":13022534,"line_start":169,"line_end":169,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022539,"byte_end":13022548,"line_start":170,"line_end":170,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022553,"byte_end":13022561,"line_start":171,"line_end":171,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022566,"byte_end":13022600,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022605,"byte_end":13022617,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022622,"byte_end":13022629,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022634,"byte_end":13022641,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13024375,"byte_end":13024387,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::net::uds::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":1602}],"decl_id":null,"docs":" A non-blocking Unix domain socket server.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix domain socket server.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13024318,"byte_end":13024363,"line_start":10,"line_end":10,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13024532,"byte_end":13024536,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified socket.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13024457,"byte_end":13024520,"line_start":16,"line_end":16,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13025030,"byte_end":13025038,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> UnixListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` from a standard `net::UnixListener`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` from a standard `net::UnixListener`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13024679,"byte_end":13024748,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13024753,"byte_end":13024756,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix listener from the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13024761,"byte_end":13024834,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13024839,"byte_end":13024913,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13024918,"byte_end":13024991,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13024996,"byte_end":13025018,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13025353,"byte_end":13025359,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"accept","qualname":"<UnixListener>::accept","value":"pub fn accept(&Self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13025174,"byte_end":13025229,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13025234,"byte_end":13025237,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The call is responsible for ensuring that the listening socket is in","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13025242,"byte_end":13025314,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13025319,"byte_end":13025341,"line_start":36,"line_end":36,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13025534,"byte_end":13025544,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13025468,"byte_end":13025522,"line_start":41,"line_end":41,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13025707,"byte_end":13025717,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13025648,"byte_end":13025695,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1686},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13027407,"byte_end":13027417,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::net::uds::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":1687}],"decl_id":null,"docs":" A non-blocking Unix stream socket.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix stream socket.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13027357,"byte_end":13027395,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13027700,"byte_end":13027707,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixStream>::connect","value":"pub fn connect<P: AsRef<Path>>(P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13027483,"byte_end":13027526,"line_start":17,"line_end":17,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13027531,"byte_end":13027534,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This may return a `WouldBlock` in which case the socket connection","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13027539,"byte_end":13027609,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ cannot be completed immediately. Usually it means the backlog is full.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13027614,"byte_end":13027688,"line_start":20,"line_end":20,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028402,"byte_end":13028410,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> UnixStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixStream` from a standard `net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixStream` from a standard `net::UnixStream`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13027847,"byte_end":13027912,"line_start":25,"line_end":25,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13027917,"byte_end":13027920,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix stream from the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13027925,"byte_end":13027996,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028001,"byte_end":13028075,"line_start":28,"line_end":28,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028080,"byte_end":13028151,"line_start":29,"line_end":29,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028156,"byte_end":13028178,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028183,"byte_end":13028186,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028191,"byte_end":13028201,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028206,"byte_end":13028209,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The Unix stream here will not have `connect` called on it, so it","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028214,"byte_end":13028282,"line_start":34,"line_end":34,"column_start":5,"column_end":73}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028287,"byte_end":13028359,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028364,"byte_end":13028390,"line_start":36,"line_end":36,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028674,"byte_end":13028678,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028536,"byte_end":13028585,"line_start":43,"line_end":43,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028590,"byte_end":13028593,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns two `UnixStream`s which are connected to each other.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028598,"byte_end":13028662,"line_start":45,"line_end":45,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028960,"byte_end":13028970,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13028880,"byte_end":13028948,"line_start":52,"line_end":52,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029153,"byte_end":13029162,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029072,"byte_end":13029141,"line_start":57,"line_end":57,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029322,"byte_end":13029332,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029263,"byte_end":13029310,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029699,"byte_end":13029707,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029418,"byte_end":13029484,"line_start":67,"line_end":67,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029489,"byte_end":13029492,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029497,"byte_end":13029565,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029570,"byte_end":13029640,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029645,"byte_end":13029687,"line_start":71,"line_end":71,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13032020,"byte_end":13032026,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"try_io","qualname":"<UnixStream>::try_io","value":"pub fn try_io<F, T>(&Self, F) -> io::Result<T> where F: FnOnce() ->\nio::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute an I/O operation ensuring that the socket receives more events\n if it hits a [`WouldBlock`] error.","sig":null,"attributes":[{"value":"/ Execute an I/O operation ensuring that the socket receives more events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029794,"byte_end":13029868,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ if it hits a [`WouldBlock`] error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029873,"byte_end":13029911,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029916,"byte_end":13029919,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029924,"byte_end":13029935,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029940,"byte_end":13029943,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This method is required to be called for **all** I/O operations to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13029948,"byte_end":13030018,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ ensure the user will receive events once the socket is ready again after","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030023,"byte_end":13030099,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ returning a [`WouldBlock`] error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030104,"byte_end":13030141,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030146,"byte_end":13030149,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: io::ErrorKind::WouldBlock","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030154,"byte_end":13030199,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030204,"byte_end":13030207,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030212,"byte_end":13030226,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030231,"byte_end":13030234,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030239,"byte_end":13030246,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030251,"byte_end":13030279,"line_start":90,"line_end":90,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030284,"byte_end":13030289,"line_start":91,"line_end":91,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030294,"byte_end":13030341,"line_start":92,"line_end":92,"column_start":5,"column_end":52}},{"value":"/ use std::io;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030346,"byte_end":13030362,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030367,"byte_end":13030402,"line_start":94,"line_end":94,"column_start":5,"column_end":40}},{"value":"/ use mio::net::UnixStream;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030407,"byte_end":13030436,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030441,"byte_end":13030444,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let (stream1, stream2) = UnixStream::pair()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030449,"byte_end":13030498,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030503,"byte_end":13030506,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is writable...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030511,"byte_end":13030554,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030559,"byte_end":13030562,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Write to the stream using a direct libc call, of course the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030567,"byte_end":13030633,"line_start":101,"line_end":101,"column_start":5,"column_end":71}},{"value":"/ // `io::Write` implementation would be easier to use.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030638,"byte_end":13030695,"line_start":102,"line_end":102,"column_start":5,"column_end":62}},{"value":"/ let buf = b\"hello\";","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030700,"byte_end":13030723,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/ let n = stream1.try_io(|| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030728,"byte_end":13030759,"line_start":104,"line_end":104,"column_start":5,"column_end":36}},{"value":"/     let buf_ptr = &buf as *const _ as *const _;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030764,"byte_end":13030815,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::send(stream1.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030820,"byte_end":13030904,"line_start":106,"line_end":106,"column_start":5,"column_end":89}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030909,"byte_end":13030931,"line_start":107,"line_end":107,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030936,"byte_end":13030964,"line_start":108,"line_end":108,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030969,"byte_end":13030985,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::send, the closure","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13030990,"byte_end":13031063,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031068,"byte_end":13031116,"line_start":111,"line_end":111,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031121,"byte_end":13031164,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031169,"byte_end":13031178,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031183,"byte_end":13031191,"line_start":114,"line_end":114,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"write {} bytes\", n);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031196,"byte_end":13031231,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031236,"byte_end":13031239,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ // Wait until the stream is readable...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031244,"byte_end":13031287,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031292,"byte_end":13031295,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ // Read from the stream using a direct libc call, of course the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031300,"byte_end":13031367,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ // `io::Read` implementation would be easier to use.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031372,"byte_end":13031428,"line_start":120,"line_end":120,"column_start":5,"column_end":61}},{"value":"/ let mut buf = [0; 512];","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031433,"byte_end":13031460,"line_start":121,"line_end":121,"column_start":5,"column_end":32}},{"value":"/ let n = stream2.try_io(|| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031465,"byte_end":13031496,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/     let buf_ptr = &mut buf as *mut _ as *mut _;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031501,"byte_end":13031552,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/     let res = unsafe { libc::recv(stream2.as_raw_fd(), buf_ptr, buf.len(), 0) };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031557,"byte_end":13031641,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/     if res != -1 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031646,"byte_end":13031668,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/         Ok(res as usize)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031673,"byte_end":13031701,"line_start":126,"line_end":126,"column_start":5,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031706,"byte_end":13031722,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/         // If EAGAIN or EWOULDBLOCK is set by libc::recv, the closure","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031727,"byte_end":13031800,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/         // should return `WouldBlock` error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031805,"byte_end":13031853,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/         Err(io::Error::last_os_error())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031858,"byte_end":13031901,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031906,"byte_end":13031915,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ })?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031920,"byte_end":13031928,"line_start":132,"line_end":132,"column_start":5,"column_end":13}},{"value":"/ eprintln!(\"read {} bytes\", n);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031933,"byte_end":13031967,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031972,"byte_end":13031984,"line_start":134,"line_end":134,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13031989,"byte_end":13031996,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13032001,"byte_end":13032008,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":246},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1717,"byte_end":1721,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"unix","qualname":"::unix","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":258},{"krate":0,"index":259}],"decl_id":null,"docs":" Unix only extensions.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"os-ext\"))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1610,"byte_end":1647,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ Unix only extensions.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1728,"byte_end":1753,"line_start":75,"line_end":75,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":247},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1767,"byte_end":1771,"line_start":77,"line_end":77,"column_start":13,"column_end":17},"name":"pipe","qualname":"::unix::pipe","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":255}],"decl_id":null,"docs":" Unix pipe.","sig":null,"attributes":[{"value":"/ Unix pipe.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1782,"byte_end":1796,"line_start":78,"line_end":78,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1805,"byte_end":1808,"line_start":79,"line_end":79,"column_start":9,"column_end":12}},{"value":"/ See the [`new`] function for documentation.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1817,"byte_end":1864,"line_start":80,"line_end":80,"column_start":9,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":261},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2184,"byte_end":2192,"line_start":96,"line_end":96,"column_start":9,"column_end":17},"name":"features","qualname":"::features","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Mio's optional features.","sig":null,"attributes":[{"value":"/ # Mio's optional features.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2199,"byte_end":2229,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2234,"byte_end":2237,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This document describes the available features in Mio.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2242,"byte_end":2300,"line_start":99,"line_end":99,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2305,"byte_end":2308,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2459,"byte_end":2462,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Mio by default provides only a shell implementation that `panic!`s the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2467,"byte_end":2541,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ moment it is actually run. To run it requires OS support, this is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2546,"byte_end":2615,"line_start":105,"line_end":105,"column_start":5,"column_end":74}},{"value":"/ enabled by activating the `os-poll` feature.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2620,"byte_end":2668,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2673,"byte_end":2676,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This makes `Poll`, `Registry` and `Waker` functional.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2681,"byte_end":2738,"line_start":108,"line_end":108,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2743,"byte_end":2746,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2893,"byte_end":2896,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ `os-ext` enables additional OS specific facilities. These facilities can","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2901,"byte_end":2977,"line_start":113,"line_end":113,"column_start":5,"column_end":81}},{"value":"/ be found in the `unix` and `windows` module.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":2982,"byte_end":3030,"line_start":114,"line_end":114,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3035,"byte_end":3038,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3189,"byte_end":3192,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The `net` feature enables networking primitives in the `net` module.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3197,"byte_end":3269,"line_start":119,"line_end":119,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":262},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3281,"byte_end":3286,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"name":"guide","qualname":"::guide","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Getting started guide.","sig":null,"attributes":[{"value":"/ # Getting started guide.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3293,"byte_end":3321,"line_start":123,"line_end":123,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3326,"byte_end":3329,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ In this guide we'll do the following:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3334,"byte_end":3375,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3380,"byte_end":3383,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ 1. Create a [`Poll`] instance (and learn what it is).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3388,"byte_end":3445,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/ 2. Register an [event source].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3450,"byte_end":3484,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/ 3. Create an event loop.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3489,"byte_end":3517,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3522,"byte_end":3525,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ At the end you'll have a very small (but quick) TCP server that accepts","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3530,"byte_end":3605,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ connections and then drops (disconnects) them.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3610,"byte_end":3660,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3665,"byte_end":3668,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ## 1. Creating a `Poll` instance","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3673,"byte_end":3709,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3714,"byte_end":3717,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Using Mio starts by creating a [`Poll`] instance, which monitors events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3722,"byte_end":3797,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ from the OS and puts them into [`Events`]. This allows us to execute I/O","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3802,"byte_end":3878,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ operations based on what operations are ready.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3883,"byte_end":3933,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3938,"byte_end":3941,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3946,"byte_end":3979,"line_start":140,"line_end":140,"column_start":5,"column_end":38}},{"value":"/ [`Events`]: ../event/struct.Events.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":3984,"byte_end":4027,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4032,"byte_end":4035,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # use mio::{Poll, Events};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4153,"byte_end":4183,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4188,"byte_end":4228,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/ // `Poll` allows for polling of readiness events.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4233,"byte_end":4286,"line_start":147,"line_end":147,"column_start":5,"column_end":58}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4291,"byte_end":4319,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/ // `Events` is collection of readiness `Event`s and can be filled by","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4324,"byte_end":4396,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ // calling `Poll::poll`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4401,"byte_end":4429,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/ let events = Events::with_capacity(128);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4434,"byte_end":4478,"line_start":151,"line_end":151,"column_start":5,"column_end":49}},{"value":"/ # drop((poll, events));","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4483,"byte_end":4510,"line_start":152,"line_end":152,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4515,"byte_end":4527,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4532,"byte_end":4539,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4544,"byte_end":4551,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4556,"byte_end":4559,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ For example if we're using a [`TcpListener`],  we'll only want to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4564,"byte_end":4633,"line_start":157,"line_end":157,"column_start":5,"column_end":74}},{"value":"/ attempt to accept an incoming connection *iff* any connections are","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4638,"byte_end":4708,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ queued and ready to be accepted. We don't want to waste our time if no","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4713,"byte_end":4787,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ connections are ready.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4792,"byte_end":4818,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4823,"byte_end":4826,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener`]: ../net/struct.TcpListener.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4831,"byte_end":4882,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4887,"byte_end":4890,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ## 2. Registering event source","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4895,"byte_end":4929,"line_start":164,"line_end":164,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4934,"byte_end":4937,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance that monitors events from the OS","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":4942,"byte_end":5018,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/ for us, we need to provide it with a source of events. This is done by","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5023,"byte_end":5097,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ registering an [event source]. As the name “event source” suggests it is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5102,"byte_end":5182,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ a source of events which can be polled using a `Poll` instance. On Unix","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5187,"byte_end":5262,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ systems this is usually a file descriptor, or a socket/handle on","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5267,"byte_end":5335,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ Windows.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5340,"byte_end":5352,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5357,"byte_end":5360,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ In the example below we'll use a [`TcpListener`] for which we'll receive","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5365,"byte_end":5441,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an event (from [`Poll`]) once a connection is ready to be accepted.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5446,"byte_end":5517,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5522,"byte_end":5525,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [event source]: ../event/trait.Source.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5530,"byte_end":5576,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5581,"byte_end":5584,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5746,"byte_end":5778,"line_start":180,"line_end":180,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5783,"byte_end":5822,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5827,"byte_end":5867,"line_start":182,"line_end":182,"column_start":5,"column_end":45}},{"value":"/ # let poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5872,"byte_end":5902,"line_start":183,"line_end":183,"column_start":5,"column_end":35}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5907,"byte_end":5958,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/ // Create a `TcpListener`, binding it to `address`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":5963,"byte_end":6018,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/ let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6023,"byte_end":6074,"line_start":186,"line_end":186,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6079,"byte_end":6082,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ // Next we register it with `Poll` to receive events for it. The `SERVER`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6087,"byte_end":6164,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ // `Token` is used to determine that we received an event for the listener","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6169,"byte_end":6247,"line_start":189,"line_end":189,"column_start":5,"column_end":83}},{"value":"/ // later on.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6252,"byte_end":6268,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/ const SERVER: Token = Token(0);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6273,"byte_end":6308,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/ poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6313,"byte_end":6386,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6391,"byte_end":6403,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6408,"byte_end":6415,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6420,"byte_end":6427,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6432,"byte_end":6435,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Multiple event sources can be [registered] (concurrently), so we can","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6440,"byte_end":6512,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ monitor multiple sources at a time.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6517,"byte_end":6556,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6561,"byte_end":6564,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ [registered]: ../struct.Registry.html#method.register","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6569,"byte_end":6626,"line_start":200,"line_end":200,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6631,"byte_end":6634,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ## 3. Creating the event loop","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6639,"byte_end":6672,"line_start":202,"line_end":202,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6677,"byte_end":6680,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance and registered one or more","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6685,"byte_end":6755,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/ [event sources] with it, we can [poll] it for events. Polling for events","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6760,"byte_end":6836,"line_start":205,"line_end":205,"column_start":5,"column_end":81}},{"value":"/ is simple, we need a container to store the events: [`Events`] and need","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6841,"byte_end":6916,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ to do something based on the polled events (this part is up to you, we","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":6921,"byte_end":6995,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ can't do it all!). If we do this in a loop we've got ourselves an event","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7000,"byte_end":7075,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/ loop.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7080,"byte_end":7089,"line_start":209,"line_end":209,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7094,"byte_end":7097,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The example below shows the event loop in action, completing our small","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7102,"byte_end":7176,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ TCP server.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7181,"byte_end":7196,"line_start":212,"line_end":212,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7201,"byte_end":7204,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [poll]: ../struct.Poll.html#method.poll","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7209,"byte_end":7252,"line_start":214,"line_end":214,"column_start":5,"column_end":48}},{"value":"/ [event sources]: ../event/trait.Source.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7257,"byte_end":7304,"line_start":215,"line_end":215,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7309,"byte_end":7312,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7474,"byte_end":7492,"line_start":219,"line_end":219,"column_start":5,"column_end":23}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7497,"byte_end":7527,"line_start":220,"line_end":220,"column_start":5,"column_end":35}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7532,"byte_end":7564,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest, Events};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7569,"byte_end":7616,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7621,"byte_end":7656,"line_start":223,"line_end":223,"column_start":5,"column_end":40}},{"value":"/ # let mut poll = Poll::new()?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7661,"byte_end":7695,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/ # let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7700,"byte_end":7750,"line_start":225,"line_end":225,"column_start":5,"column_end":55}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7755,"byte_end":7806,"line_start":226,"line_end":226,"column_start":5,"column_end":56}},{"value":"/ # let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7811,"byte_end":7864,"line_start":227,"line_end":227,"column_start":5,"column_end":58}},{"value":"/ # const SERVER: Token = Token(0);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7869,"byte_end":7906,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/ # poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7911,"byte_end":7986,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ // Start our event loop.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":7991,"byte_end":8019,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/ loop {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8024,"byte_end":8034,"line_start":231,"line_end":231,"column_start":5,"column_end":15}},{"value":"/     // Poll the OS for events, waiting at most 100 milliseconds.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8039,"byte_end":8107,"line_start":232,"line_end":232,"column_start":5,"column_end":73}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8112,"byte_end":8178,"line_start":233,"line_end":233,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8183,"byte_end":8186,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     // Process each event.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8191,"byte_end":8221,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/     for event in events.iter() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8226,"byte_end":8262,"line_start":236,"line_end":236,"column_start":5,"column_end":41}},{"value":"/         // We can use the token we previously provided to `register` to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8267,"byte_end":8342,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/         // determine for which type the event is.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8347,"byte_end":8400,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         match event.token() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8405,"byte_end":8438,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/             SERVER => loop {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8443,"byte_end":8475,"line_start":240,"line_end":240,"column_start":5,"column_end":37}},{"value":"/                 // One or more connections are ready, so we'll attempt to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8480,"byte_end":8557,"line_start":241,"line_end":241,"column_start":5,"column_end":82}},{"value":"/                 // accept them (in a loop).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8562,"byte_end":8609,"line_start":242,"line_end":242,"column_start":5,"column_end":52}},{"value":"/                 match listener.accept() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8614,"byte_end":8659,"line_start":243,"line_end":243,"column_start":5,"column_end":50}},{"value":"/                     Ok((connection, address)) => {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8664,"byte_end":8718,"line_start":244,"line_end":244,"column_start":5,"column_end":59}},{"value":"/                         println!(\"Got a connection from: {}\", address);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8723,"byte_end":8798,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ #                       drop(connection);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8803,"byte_end":8848,"line_start":246,"line_end":246,"column_start":5,"column_end":50}},{"value":"/                     },","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8853,"byte_end":8879,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/                     // A \"would block error\" is returned if the operation","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8884,"byte_end":8961,"line_start":248,"line_end":248,"column_start":5,"column_end":82}},{"value":"/                     // is not ready, so we'll stop trying to accept","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":8966,"byte_end":9037,"line_start":249,"line_end":249,"column_start":5,"column_end":76}},{"value":"/                     // connections.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9042,"byte_end":9081,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/                     Err(ref err) if would_block(err) => break,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9086,"byte_end":9152,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/                     Err(err) => return Err(err),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9157,"byte_end":9209,"line_start":252,"line_end":252,"column_start":5,"column_end":57}},{"value":"/                 }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9214,"byte_end":9235,"line_start":253,"line_end":253,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9240,"byte_end":9257,"line_start":254,"line_end":254,"column_start":5,"column_end":22}},{"value":"/ #           _ => unreachable!(),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9262,"byte_end":9298,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9303,"byte_end":9316,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9321,"byte_end":9330,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/ #   return Ok(());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9335,"byte_end":9357,"line_start":258,"line_end":258,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9362,"byte_end":9367,"line_start":259,"line_end":259,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9372,"byte_end":9375,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ fn would_block(err: &io::Error) -> bool {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9380,"byte_end":9425,"line_start":261,"line_end":261,"column_start":5,"column_end":50}},{"value":"/     err.kind() == io::ErrorKind::WouldBlock","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9430,"byte_end":9477,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9482,"byte_end":9487,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9492,"byte_end":9499,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":9504,"byte_end":9511,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":12398,"byte_end":12406,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":15337,"byte_end":15345,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":15488,"byte_end":15496,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":15624,"byte_end":15632,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27834,"byte_end":27838,"line_start":258,"line_end":258,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33489,"byte_end":33493,"line_start":405,"line_end":405,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33594,"byte_end":33598,"line_start":411,"line_end":411,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33722,"byte_end":33730,"line_start":417,"line_end":417,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":43999,"byte_end":44007,"line_start":683,"line_end":683,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":44160,"byte_end":44168,"line_start":690,"line_end":690,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12883502,"byte_end":12883510,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12892303,"byte_end":12892311,"line_start":296,"line_end":296,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12892406,"byte_end":12892414,"line_start":303,"line_end":303,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12892491,"byte_end":12892499,"line_start":309,"line_end":309,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12892727,"byte_end":12892733,"line_start":320,"line_end":320,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12892859,"byte_end":12892865,"line_start":326,"line_end":326,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12892988,"byte_end":12892994,"line_start":334,"line_end":334,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12893466,"byte_end":12893472,"line_start":345,"line_end":345,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12893497,"byte_end":12893503,"line_start":346,"line_end":346,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907502,"byte_end":12907510,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/waker.rs","byte_start":12911110,"byte_end":12911115,"line_start":83,"line_end":83,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/net.rs","byte_start":12916783,"byte_end":12916798,"line_start":72,"line_end":72,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12932099,"byte_end":12932109,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12933038,"byte_end":12933048,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12935080,"byte_end":12935090,"line_start":112,"line_end":112,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12935470,"byte_end":12935482,"line_start":122,"line_end":122,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/mod.rs","byte_start":12879870,"byte_end":12879883,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949048,"byte_end":12949054,"line_start":215,"line_end":215,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951638,"byte_end":12951644,"line_start":290,"line_end":290,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12952195,"byte_end":12952201,"line_start":314,"line_end":314,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953091,"byte_end":12953097,"line_start":345,"line_end":345,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953308,"byte_end":12953314,"line_start":352,"line_end":352,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953476,"byte_end":12953482,"line_start":360,"line_end":360,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953579,"byte_end":12953585,"line_start":366,"line_end":366,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953847,"byte_end":12953855,"line_start":380,"line_end":380,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956441,"byte_end":12956449,"line_start":455,"line_end":455,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956999,"byte_end":12957007,"line_start":479,"line_end":479,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12957703,"byte_end":12957711,"line_start":502,"line_end":502,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12958010,"byte_end":12958018,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12958237,"byte_end":12958245,"line_start":519,"line_end":519,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12958411,"byte_end":12958419,"line_start":527,"line_end":527,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12958516,"byte_end":12958524,"line_start":533,"line_end":533,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54633,"byte_end":54638,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55736,"byte_end":55741,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":62909,"byte_end":62914,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":63623,"byte_end":63635,"line_start":219,"line_end":219,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65998,"byte_end":66004,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":69120,"byte_end":69124,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":69600,"byte_end":69606,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73770,"byte_end":73773,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12961299,"byte_end":12961307,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12962607,"byte_end":12962615,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12962882,"byte_end":12962890,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12963019,"byte_end":12963027,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12965911,"byte_end":12965919,"line_start":243,"line_end":243,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12966224,"byte_end":12966234,"line_start":260,"line_end":260,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12968532,"byte_end":12968542,"line_start":328,"line_end":328,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971846,"byte_end":12971857,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12975398,"byte_end":12975409,"line_start":139,"line_end":139,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12975965,"byte_end":12975976,"line_start":163,"line_end":163,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12976109,"byte_end":12976120,"line_start":170,"line_end":170,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12976244,"byte_end":12976255,"line_start":177,"line_end":177,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12976365,"byte_end":12976376,"line_start":184,"line_end":184,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979611,"byte_end":12979620,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12988116,"byte_end":12988125,"line_start":270,"line_end":270,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12988737,"byte_end":12988746,"line_start":290,"line_end":290,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12989559,"byte_end":12989568,"line_start":318,"line_end":318,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12990124,"byte_end":12990133,"line_start":342,"line_end":342,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12990266,"byte_end":12990275,"line_start":349,"line_end":349,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12990399,"byte_end":12990408,"line_start":356,"line_end":356,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12990518,"byte_end":12990527,"line_start":363,"line_end":363,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995523,"byte_end":12995532,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014288,"byte_end":13014297,"line_start":615,"line_end":615,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014853,"byte_end":13014862,"line_start":639,"line_end":639,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014995,"byte_end":13015004,"line_start":646,"line_end":646,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13015128,"byte_end":13015137,"line_start":653,"line_end":653,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13015247,"byte_end":13015256,"line_start":660,"line_end":660,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13016734,"byte_end":13016746,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022816,"byte_end":13022828,"line_start":184,"line_end":184,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13023384,"byte_end":13023396,"line_start":208,"line_end":208,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13023516,"byte_end":13023528,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13023639,"byte_end":13023651,"line_start":220,"line_end":220,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13023748,"byte_end":13023760,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13024438,"byte_end":13024450,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13025824,"byte_end":13025836,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13026392,"byte_end":13026404,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13026524,"byte_end":13026536,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13026647,"byte_end":13026659,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13026756,"byte_end":13026768,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13027466,"byte_end":13027476,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13032174,"byte_end":13032184,"line_start":145,"line_end":145,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13032797,"byte_end":13032807,"line_start":165,"line_end":165,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13033621,"byte_end":13033631,"line_start":193,"line_end":193,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13034187,"byte_end":13034197,"line_start":217,"line_end":217,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13034317,"byte_end":13034327,"line_start":223,"line_end":223,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13034438,"byte_end":13034448,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13034545,"byte_end":13034555,"line_start":235,"line_end":235,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1354,"byte_end":1359,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":127}},{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/lib.rs","byte_start":1424,"byte_end":1427,"line_start":61,"line_end":61,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1124}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":12398,"byte_end":12406,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":15337,"byte_end":15345,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":3144}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":15488,"byte_end":15496,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":3170}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/interest.rs","byte_start":15624,"byte_end":15632,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":27834,"byte_end":27838,"line_start":258,"line_end":258,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":79},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33489,"byte_end":33493,"line_start":405,"line_end":405,"column_start":18,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":79},"to":{"krate":1,"index":6345}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33594,"byte_end":33598,"line_start":411,"line_end":411,"column_start":21,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":79},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":33722,"byte_end":33730,"line_start":417,"line_end":417,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":43999,"byte_end":44007,"line_start":683,"line_end":683,"column_start":21,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/poll.rs","byte_start":44160,"byte_end":44168,"line_start":690,"line_end":690,"column_start":18,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":6345}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12883502,"byte_end":12883510,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12892303,"byte_end":12892311,"line_start":296,"line_end":296,"column_start":10,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12892406,"byte_end":12892414,"line_start":303,"line_end":303,"column_start":18,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":501},"to":{"krate":1,"index":6345}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12892491,"byte_end":12892499,"line_start":309,"line_end":309,"column_start":15,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":501},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12892727,"byte_end":12892733,"line_start":320,"line_end":320,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12892859,"byte_end":12892865,"line_start":326,"line_end":326,"column_start":16,"column_end":22},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12892988,"byte_end":12892994,"line_start":334,"line_end":334,"column_start":19,"column_end":25},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12893466,"byte_end":12893472,"line_start":345,"line_end":345,"column_start":22,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/selector/kqueue.rs","byte_start":12893497,"byte_end":12893503,"line_start":346,"line_end":346,"column_start":22,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/sourcefd.rs","byte_start":12907502,"byte_end":12907510,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":524},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/waker.rs","byte_start":12911110,"byte_end":12911115,"line_start":83,"line_end":83,"column_start":10,"column_end":15},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/net.rs","byte_start":12916783,"byte_end":12916798,"line_start":72,"line_end":72,"column_start":6,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12932099,"byte_end":12932109,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12933038,"byte_end":12933048,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12935080,"byte_end":12935090,"line_start":112,"line_end":112,"column_start":21,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/uds/socketaddr.rs","byte_start":12935470,"byte_end":12935482,"line_start":122,"line_end":122,"column_start":27,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":679},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/mod.rs","byte_start":12879870,"byte_end":12879883,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12949048,"byte_end":12949054,"line_start":215,"line_end":215,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12951638,"byte_end":12951644,"line_start":290,"line_end":290,"column_start":24,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":996},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12952195,"byte_end":12952201,"line_start":314,"line_end":314,"column_start":16,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":996},"to":{"krate":1,"index":4403}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953091,"byte_end":12953097,"line_start":345,"line_end":345,"column_start":27,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953308,"byte_end":12953314,"line_start":352,"line_end":352,"column_start":20,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":996},"to":{"krate":1,"index":6347}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953476,"byte_end":12953482,"line_start":360,"line_end":360,"column_start":18,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":996},"to":{"krate":1,"index":6345}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953579,"byte_end":12953585,"line_start":366,"line_end":366,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":996},"to":{"krate":1,"index":6349}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12953847,"byte_end":12953855,"line_start":380,"line_end":380,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956441,"byte_end":12956449,"line_start":455,"line_end":455,"column_start":24,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1000},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12956999,"byte_end":12957007,"line_start":479,"line_end":479,"column_start":15,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1000},"to":{"krate":1,"index":4343}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12957703,"byte_end":12957711,"line_start":502,"line_end":502,"column_start":28,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12958010,"byte_end":12958018,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12958237,"byte_end":12958245,"line_start":519,"line_end":519,"column_start":20,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1000},"to":{"krate":1,"index":6347}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12958411,"byte_end":12958419,"line_start":527,"line_end":527,"column_start":18,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1000},"to":{"krate":1,"index":6345}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/sys/unix/pipe.rs","byte_start":12958516,"byte_end":12958524,"line_start":533,"line_end":533,"column_start":20,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1000},"to":{"krate":1,"index":6349}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/waker.rs","byte_start":54633,"byte_end":54638,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":55736,"byte_end":55741,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":62909,"byte_end":62914,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1030},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/event.rs","byte_start":63623,"byte_end":63635,"line_start":219,"line_end":219,"column_start":37,"column_end":49},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":65998,"byte_end":66004,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":69120,"byte_end":69124,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/events.rs","byte_start":69600,"byte_end":69606,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/event/source.rs","byte_start":73770,"byte_end":73773,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"kind":{"Impl":{"id":50}},"from":{"krate":5,"index":313},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12961299,"byte_end":12961307,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12962607,"byte_end":12962615,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1085},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12962882,"byte_end":12962890,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1085},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12963019,"byte_end":12963027,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1085},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12965911,"byte_end":12965919,"line_start":243,"line_end":243,"column_start":24,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1085},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12966224,"byte_end":12966234,"line_start":260,"line_end":260,"column_start":6,"column_end":16},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/io_source.rs","byte_start":12968532,"byte_end":12968542,"line_start":328,"line_end":328,"column_start":16,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12971846,"byte_end":12971857,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12975398,"byte_end":12975409,"line_start":139,"line_end":139,"column_start":24,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1189},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12975965,"byte_end":12975976,"line_start":163,"line_end":163,"column_start":21,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12976109,"byte_end":12976120,"line_start":170,"line_end":170,"column_start":20,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":6349}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12976244,"byte_end":12976255,"line_start":177,"line_end":177,"column_start":18,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":6345}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/listener.rs","byte_start":12976365,"byte_end":12976376,"line_start":184,"line_end":184,"column_start":20,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":6347}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12979611,"byte_end":12979620,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12988116,"byte_end":12988125,"line_start":270,"line_end":270,"column_start":15,"column_end":24},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":4343}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12988737,"byte_end":12988746,"line_start":290,"line_end":290,"column_start":16,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":4403}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12989559,"byte_end":12989568,"line_start":318,"line_end":318,"column_start":24,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1282},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12990124,"byte_end":12990133,"line_start":342,"line_end":342,"column_start":21,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1282},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12990266,"byte_end":12990275,"line_start":349,"line_end":349,"column_start":20,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":6349}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12990399,"byte_end":12990408,"line_start":356,"line_end":356,"column_start":18,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":6345}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/tcp/stream.rs","byte_start":12990518,"byte_end":12990527,"line_start":363,"line_end":363,"column_start":20,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":6347}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":12995523,"byte_end":12995532,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014288,"byte_end":13014297,"line_start":615,"line_end":615,"column_start":24,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1400},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014853,"byte_end":13014862,"line_start":639,"line_end":639,"column_start":21,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1400},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13014995,"byte_end":13015004,"line_start":646,"line_end":646,"column_start":20,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":6349}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13015128,"byte_end":13015137,"line_start":653,"line_end":653,"column_start":18,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":6345}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/udp.rs","byte_start":13015247,"byte_end":13015256,"line_start":660,"line_end":660,"column_start":20,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":6347}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13016734,"byte_end":13016746,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13022816,"byte_end":13022828,"line_start":184,"line_end":184,"column_start":24,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1505},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13023384,"byte_end":13023396,"line_start":208,"line_end":208,"column_start":21,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1505},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13023516,"byte_end":13023528,"line_start":214,"line_end":214,"column_start":20,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1505},"to":{"krate":1,"index":6349}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13023639,"byte_end":13023651,"line_start":220,"line_end":220,"column_start":18,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1505},"to":{"krate":1,"index":6345}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/datagram.rs","byte_start":13023748,"byte_end":13023760,"line_start":226,"line_end":226,"column_start":20,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1505},"to":{"krate":1,"index":6347}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13024438,"byte_end":13024450,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13025824,"byte_end":13025836,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1601},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13026392,"byte_end":13026404,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13026524,"byte_end":13026536,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1601},"to":{"krate":1,"index":6349}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13026647,"byte_end":13026659,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1601},"to":{"krate":1,"index":6345}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/listener.rs","byte_start":13026756,"byte_end":13026768,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1601},"to":{"krate":1,"index":6347}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13027466,"byte_end":13027476,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13032174,"byte_end":13032184,"line_start":145,"line_end":145,"column_start":15,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":4343}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13032797,"byte_end":13032807,"line_start":165,"line_end":165,"column_start":16,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":4403}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13033621,"byte_end":13033631,"line_start":193,"line_end":193,"column_start":24,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1686},"to":{"krate":0,"index":205}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13034187,"byte_end":13034197,"line_start":217,"line_end":217,"column_start":21,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1686},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13034317,"byte_end":13034327,"line_start":223,"line_end":223,"column_start":20,"column_end":30},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":6349}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13034438,"byte_end":13034448,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":6345}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.8.4/src/net/uds/stream.rs","byte_start":13034545,"byte_end":13034555,"line_start":235,"line_end":235,"column_start":20,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":6347}}]}