{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0","program":"/Users/yinheng/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","jsonwebtoken","--edition=2021","/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"pem\"","--cfg","feature=\"simple_asn1\"","--cfg","feature=\"use_pem\"","-C","metadata=3fb6c0e6cab4b60a","-C","extra-filename=-3fb6c0e6cab4b60a","--out-dir","/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps","-L","dependency=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps","--extern","base64=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libbase64-116c470c894ade49.rmeta","--extern","pem=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libpem-9ff1ea834deba418.rmeta","--extern","ring=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libring-42b17cc7cc8291e4.rmeta","--extern","serde=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libserde-630d2e5a17215777.rmeta","--extern","serde_json=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libserde_json-39aac616b57aa200.rmeta","--extern","simple_asn1=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libsimple_asn1-eab847bb7b263e0b.rmeta","--cap-lints","allow","-L","native=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/build/ring-915cd3523a5cc509/out","--error-format=json","--sysroot","/Users/yinheng/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libjsonwebtoken-3fb6c0e6cab4b60a.rmeta"},"prelude":{"crate_id":{"name":"jsonwebtoken","disambiguator":[11160398481101787784,0]},"crate_root":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src","external_crates":[{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","num":18,"id":{"name":"serde","disambiguator":[273557055448729731,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","num":19,"id":{"name":"serde_derive","disambiguator":[8973632464091733869,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","num":20,"id":{"name":"ring","disambiguator":[2820064790522618886,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","num":21,"id":{"name":"untrusted","disambiguator":[5897084291548456916,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","num":22,"id":{"name":"spin","disambiguator":[17677803073427858596,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":23,"id":{"name":"simple_asn1","disambiguator":[3759582512216423501,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":24,"id":{"name":"num_bigint","disambiguator":[8682896024890349759,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":25,"id":{"name":"num_integer","disambiguator":[5299822315068960166,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":26,"id":{"name":"num_traits","disambiguator":[14716466307775064705,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":27,"id":{"name":"thiserror","disambiguator":[3953846935808152615,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":28,"id":{"name":"thiserror_impl","disambiguator":[1472381138078952844,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":29,"id":{"name":"time","disambiguator":[16727401583265628778,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":30,"id":{"name":"time_macros","disambiguator":[12768757650046114227,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":31,"id":{"name":"quickcheck","disambiguator":[2440077349017639982,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":32,"id":{"name":"rand","disambiguator":[16735607718543311955,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":33,"id":{"name":"rand_core","disambiguator":[5385323512014808349,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":34,"id":{"name":"getrandom","disambiguator":[4057541369709977967,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":35,"id":{"name":"cfg_if","disambiguator":[10518978035588998298,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":36,"id":{"name":"libc","disambiguator":[17030695270727625336,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":37,"id":{"name":"itoa","disambiguator":[5181687683467936091,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","num":38,"id":{"name":"base64","disambiguator":[15777400130402887194,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","num":39,"id":{"name":"serde_json","disambiguator":[15654195607417729955,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","num":40,"id":{"name":"ryu","disambiguator":[586541354834520285,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","num":41,"id":{"name":"pem","disambiguator":[2815141971851950393,0]}}],"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":0,"byte_end":668,"line_start":1,"line_end":24,"column_start":1,"column_end":57}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":469,"byte_end":478,"line_start":20,"line_end":20,"column_start":21,"column_end":30},"alias_span":null,"name":"Algorithm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":190},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":499,"byte_end":505,"line_start":21,"line_end":21,"column_start":20,"column_end":26},"alias_span":null,"name":"decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":192},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":507,"byte_end":520,"line_start":21,"line_end":21,"column_start":28,"column_end":41},"alias_span":null,"name":"decode_header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":725},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":522,"byte_end":533,"line_start":21,"line_end":21,"column_start":43,"column_end":54},"alias_span":null,"name":"DecodingKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":709},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":535,"byte_end":544,"line_start":21,"line_end":21,"column_start":56,"column_end":65},"alias_span":null,"name":"TokenData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":232},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":566,"byte_end":572,"line_start":22,"line_end":22,"column_start":20,"column_end":26},"alias_span":null,"name":"encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":730},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":574,"byte_end":585,"line_start":22,"line_end":22,"column_start":28,"column_end":39},"alias_span":null,"name":"EncodingKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":798},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":604,"byte_end":610,"line_start":23,"line_end":23,"column_start":17,"column_end":23},"alias_span":null,"name":"Header","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":474},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":633,"byte_end":654,"line_start":24,"line_end":24,"column_start":22,"column_end":43},"alias_span":null,"name":"get_current_timestamp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1851},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":656,"byte_end":666,"line_start":24,"line_end":24,"column_start":45,"column_end":55},"alias_span":null,"name":"Validation","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":0,"byte_end":668,"line_start":1,"line_end":24,"column_start":1,"column_end":57},"name":"","qualname":"::","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":31},{"krate":0,"index":135},{"krate":0,"index":193},{"krate":0,"index":234},{"krate":0,"index":272},{"krate":0,"index":303},{"krate":0,"index":369},{"krate":0,"index":387},{"krate":0,"index":413},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":533}],"decl_id":null,"docs":" Create and parses JWT (JSON Web Tokens)","sig":null,"attributes":[{"value":"/ Create and parses JWT (JSON Web Tokens)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":0,"byte_end":43,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":44,"byte_end":47,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Documentation:  [stable](https://docs.rs/jsonwebtoken/)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":48,"byte_end":107,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":108,"byte_end":130,"line_start":4,"line_end":4,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":606},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1140,"byte_end":1145,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"HS256","qualname":"::algorithms::Algorithm::HS256","value":"Algorithm::HS256","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" HMAC using SHA-256\n","sig":null,"attributes":[{"value":"/ HMAC using SHA-256","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1113,"byte_end":1135,"line_start":17,"line_end":17,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":608},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1178,"byte_end":1183,"line_start":20,"line_end":20,"column_start":5,"column_end":10},"name":"HS384","qualname":"::algorithms::Algorithm::HS384","value":"Algorithm::HS384","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" HMAC using SHA-384\n","sig":null,"attributes":[{"value":"/ HMAC using SHA-384","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1151,"byte_end":1173,"line_start":19,"line_end":19,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":610},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1216,"byte_end":1221,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"HS512","qualname":"::algorithms::Algorithm::HS512","value":"Algorithm::HS512","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" HMAC using SHA-512\n","sig":null,"attributes":[{"value":"/ HMAC using SHA-512","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1189,"byte_end":1211,"line_start":21,"line_end":21,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":612},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1256,"byte_end":1261,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"ES256","qualname":"::algorithms::Algorithm::ES256","value":"Algorithm::ES256","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" ECDSA using SHA-256\n","sig":null,"attributes":[{"value":"/ ECDSA using SHA-256","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1228,"byte_end":1251,"line_start":24,"line_end":24,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":614},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1295,"byte_end":1300,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"ES384","qualname":"::algorithms::Algorithm::ES384","value":"Algorithm::ES384","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" ECDSA using SHA-384\n","sig":null,"attributes":[{"value":"/ ECDSA using SHA-384","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1267,"byte_end":1290,"line_start":26,"line_end":26,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":616},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1347,"byte_end":1352,"line_start":30,"line_end":30,"column_start":5,"column_end":10},"name":"RS256","qualname":"::algorithms::Algorithm::RS256","value":"Algorithm::RS256","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" RSASSA-PKCS1-v1_5 using SHA-256\n","sig":null,"attributes":[{"value":"/ RSASSA-PKCS1-v1_5 using SHA-256","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1307,"byte_end":1342,"line_start":29,"line_end":29,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":618},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1398,"byte_end":1403,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"RS384","qualname":"::algorithms::Algorithm::RS384","value":"Algorithm::RS384","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" RSASSA-PKCS1-v1_5 using SHA-384\n","sig":null,"attributes":[{"value":"/ RSASSA-PKCS1-v1_5 using SHA-384","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1358,"byte_end":1393,"line_start":31,"line_end":31,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":620},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1449,"byte_end":1454,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"RS512","qualname":"::algorithms::Algorithm::RS512","value":"Algorithm::RS512","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" RSASSA-PKCS1-v1_5 using SHA-512\n","sig":null,"attributes":[{"value":"/ RSASSA-PKCS1-v1_5 using SHA-512","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1409,"byte_end":1444,"line_start":33,"line_end":33,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":622},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1494,"byte_end":1499,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"name":"PS256","qualname":"::algorithms::Algorithm::PS256","value":"Algorithm::PS256","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" RSASSA-PSS using SHA-256\n","sig":null,"attributes":[{"value":"/ RSASSA-PSS using SHA-256","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1461,"byte_end":1489,"line_start":36,"line_end":36,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":624},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1538,"byte_end":1543,"line_start":39,"line_end":39,"column_start":5,"column_end":10},"name":"PS384","qualname":"::algorithms::Algorithm::PS384","value":"Algorithm::PS384","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" RSASSA-PSS using SHA-384\n","sig":null,"attributes":[{"value":"/ RSASSA-PSS using SHA-384","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1505,"byte_end":1533,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":626},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1582,"byte_end":1587,"line_start":41,"line_end":41,"column_start":5,"column_end":10},"name":"PS512","qualname":"::algorithms::Algorithm::PS512","value":"Algorithm::PS512","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" RSASSA-PSS using SHA-512\n","sig":null,"attributes":[{"value":"/ RSASSA-PSS using SHA-512","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1549,"byte_end":1577,"line_start":40,"line_end":40,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":628},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1652,"byte_end":1657,"line_start":44,"line_end":44,"column_start":5,"column_end":10},"name":"EdDSA","qualname":"::algorithms::Algorithm::EdDSA","value":"Algorithm::EdDSA","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" Edwards-curve Digital Signature Algorithm (EdDSA)\n","sig":null,"attributes":[{"value":"/ Edwards-curve Digital Signature Algorithm (EdDSA)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1594,"byte_end":1647,"line_start":43,"line_end":43,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":605},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1097,"byte_end":1106,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"Algorithm","qualname":"::algorithms::Algorithm","value":"pub enum Algorithm {\n    HS256,\n    HS384,\n    HS512,\n    ES256,\n    ES384,\n    RS256,\n    RS384,\n    RS512,\n    PS256,\n    PS384,\n    PS512,\n    EdDSA,\n}","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628}],"decl_id":null,"docs":" The algorithms supported for signing/verifying JWTs\n","sig":null,"attributes":[{"value":"/ The algorithms supported for signing/verifying JWTs","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":919,"byte_end":974,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"allow(clippy :: upper_case_acronyms)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":975,"byte_end":1012,"line_start":14,"line_end":14,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":31},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crypto","qualname":"::crypto","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":85},{"krate":0,"index":100},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" Lower level functions, if you want to do something other than JWTs\n","sig":null,"attributes":[{"value":"/ Lower level functions, if you want to do something other than JWTs","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":148,"byte_end":218,"line_start":7,"line_end":7,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":4495,"byte_end":4499,"line_start":25,"line_end":25,"column_start":8,"column_end":12},"name":"sign","qualname":"::crypto::sign","value":"pub fn sign(&[u8], &EncodingKey, Algorithm) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Take the payload of a JWT, sign it using the algorithm given and return\n the base64 url safe encoded of the result.","sig":null,"attributes":[{"value":"/ Take the payload of a JWT, sign it using the algorithm given and return","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":4301,"byte_end":4376,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ the base64 url safe encoded of the result.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":4377,"byte_end":4423,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":4424,"byte_end":4427,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ If you just want to encode a JWT, use `encode` instead.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":4428,"byte_end":4487,"line_start":24,"line_end":24,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":6004,"byte_end":6010,"line_start":68,"line_end":68,"column_start":8,"column_end":14},"name":"verify","qualname":"::crypto::verify","value":"pub fn verify(&str, &[u8], &DecodingKey, Algorithm) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Compares the signature given with a re-computed signature for HMAC or using the public key\n for RSA/EC.","sig":null,"attributes":[{"value":"/ Compares the signature given with a re-computed signature for HMAC or using the public key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":5684,"byte_end":5778,"line_start":60,"line_end":60,"column_start":1,"column_end":95}},{"value":"/ for RSA/EC.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":5779,"byte_end":5794,"line_start":61,"line_end":61,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":5795,"byte_end":5798,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ If you just want to decode a JWT, use `decode` instead.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":5799,"byte_end":5858,"line_start":63,"line_end":63,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":5859,"byte_end":5862,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ `signature` is the signature part of a jwt (text after the second '.')","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":5863,"byte_end":5937,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":5938,"byte_end":5941,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ `message` is base64(header) + \".\" + base64(claims)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/crypto/mod.rs","byte_start":5942,"byte_end":5996,"line_start":67,"line_end":67,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":709},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":12795,"byte_end":12804,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"TokenData","qualname":"::decoding::TokenData","value":"TokenData { header, claims }","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712}],"decl_id":null,"docs":" The return type of a successful call to [decode](fn.decode.html).\n","sig":null,"attributes":[{"value":"/ The return type of a successful call to [decode](fn.decode.html).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":12697,"byte_end":12766,"line_start":12,"line_end":12,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":711},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":12849,"byte_end":12855,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"header","qualname":"::decoding::TokenData::header","value":"header::Header","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" The decoded JWT header\n","sig":null,"attributes":[{"value":"/ The decoded JWT header","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":12814,"byte_end":12840,"line_start":15,"line_end":15,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":712},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":12904,"byte_end":12910,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"name":"claims","qualname":"::decoding::TokenData::claims","value":"T","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" The decoded JWT claims\n","sig":null,"attributes":[{"value":"/ The decoded JWT claims","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":12869,"byte_end":12895,"line_start":17,"line_end":17,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":13604,"byte_end":13615,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"DecodingKey","qualname":"::decoding::DecodingKey","value":"DecodingKey {  }","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727}],"decl_id":null,"docs":" All the different kind of keys we can use to decode a JWT\n This key can be re-used so make sure you only initialize it once if you can for better performance\n","sig":null,"attributes":[{"value":"/ All the different kind of keys we can use to decode a JWT","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":13411,"byte_end":13472,"line_start":39,"line_end":39,"column_start":1,"column_end":62}},{"value":"/ This key can be re-used so make sure you only initialize it once if you can for better performance","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":13473,"byte_end":13575,"line_start":40,"line_end":40,"column_start":1,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":13769,"byte_end":13780,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"from_secret","qualname":"<DecodingKey>::from_secret","value":"pub fn from_secret(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you're using HMAC, use this.\n","sig":null,"attributes":[{"value":"/ If you're using HMAC, use this.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":13722,"byte_end":13757,"line_start":48,"line_end":48,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":14033,"byte_end":14051,"line_start":57,"line_end":57,"column_start":12,"column_end":30},"name":"from_base64_secret","qualname":"<DecodingKey>::from_base64_secret","value":"pub fn from_base64_secret(&str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" If you're using HMAC with a base64 encoded secret, use this.\n","sig":null,"attributes":[{"value":"/ If you're using HMAC with a base64 encoded secret, use this.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":13957,"byte_end":14021,"line_start":56,"line_end":56,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":14405,"byte_end":14417,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"from_rsa_pem","qualname":"<DecodingKey>::from_rsa_pem","value":"pub fn from_rsa_pem(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" If you are loading a public RSA key in a PEM format, use this.\n Only exists if the feature `use_pem` is enabled.\n","sig":null,"attributes":[{"value":"/ If you are loading a public RSA key in a PEM format, use this.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":14238,"byte_end":14304,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ Only exists if the feature `use_pem` is enabled.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":14309,"byte_end":14361,"line_start":63,"line_end":63,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"use_pem\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":14366,"byte_end":14393,"line_start":64,"line_end":64,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":14778,"byte_end":14797,"line_start":75,"line_end":75,"column_start":12,"column_end":31},"name":"from_rsa_components","qualname":"<DecodingKey>::from_rsa_components","value":"pub fn from_rsa_components(&str, &str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" If you have (n, e) RSA public key components as strings, use this.\n","sig":null,"attributes":[{"value":"/ If you have (n, e) RSA public key components as strings, use this.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":14696,"byte_end":14766,"line_start":74,"line_end":74,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":15164,"byte_end":15187,"line_start":85,"line_end":85,"column_start":12,"column_end":35},"name":"from_rsa_raw_components","qualname":"<DecodingKey>::from_rsa_raw_components","value":"pub fn from_rsa_raw_components(&[u8], &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you have (n, e) RSA public key components already decoded, use this.\n","sig":null,"attributes":[{"value":"/ If you have (n, e) RSA public key components already decoded, use this.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":15077,"byte_end":15152,"line_start":84,"line_end":84,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":15577,"byte_end":15588,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"from_ec_pem","qualname":"<DecodingKey>::from_ec_pem","value":"pub fn from_ec_pem(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" If you have a ECDSA public key in PEM format, use this.\n Only exists if the feature `use_pem` is enabled.\n","sig":null,"attributes":[{"value":"/ If you have a ECDSA public key in PEM format, use this.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":15417,"byte_end":15476,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/ Only exists if the feature `use_pem` is enabled.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":15481,"byte_end":15533,"line_start":93,"line_end":93,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"use_pem\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":15538,"byte_end":15565,"line_start":94,"line_end":94,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":16032,"byte_end":16043,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"from_ed_pem","qualname":"<DecodingKey>::from_ed_pem","value":"pub fn from_ed_pem(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" If you have a EdDSA public key in PEM format, use this.\n Only exists if the feature `use_pem` is enabled.\n","sig":null,"attributes":[{"value":"/ If you have a EdDSA public key in PEM format, use this.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":15872,"byte_end":15931,"line_start":104,"line_end":104,"column_start":5,"column_end":64}},{"value":"/ Only exists if the feature `use_pem` is enabled.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":15936,"byte_end":15988,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"use_pem\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":15993,"byte_end":16020,"line_start":106,"line_end":106,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":16421,"byte_end":16433,"line_start":117,"line_end":117,"column_start":12,"column_end":24},"name":"from_rsa_der","qualname":"<DecodingKey>::from_rsa_der","value":"pub fn from_rsa_der(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you know what you're doing and have a RSA DER encoded public key, use this.\n","sig":null,"attributes":[{"value":"/ If you know what you're doing and have a RSA DER encoded public key, use this.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":16327,"byte_end":16409,"line_start":116,"line_end":116,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":16696,"byte_end":16707,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"from_ec_der","qualname":"<DecodingKey>::from_ec_der","value":"pub fn from_ec_der(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you know what you're doing and have a RSA EC encoded public key, use this.\n","sig":null,"attributes":[{"value":"/ If you know what you're doing and have a RSA EC encoded public key, use this.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":16603,"byte_end":16684,"line_start":124,"line_end":124,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":16969,"byte_end":16980,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"from_ed_der","qualname":"<DecodingKey>::from_ed_der","value":"pub fn from_ed_der(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you know what you're doing and have a Ed DER encoded public key, use this.\n","sig":null,"attributes":[{"value":"/ If you know what you're doing and have a Ed DER encoded public key, use this.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":16876,"byte_end":16957,"line_start":132,"line_end":132,"column_start":5,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":190},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":19161,"byte_end":19167,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"decode","qualname":"::decoding::decode","value":"pub fn decode<T: DeserializeOwned>(&str, &DecodingKey, &Validation)\n-> Result<TokenData<T>>","parent":null,"children":[],"decl_id":null,"docs":" Decode and validate a JWT","sig":null,"attributes":[{"value":"/ Decode and validate a JWT","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18535,"byte_end":18564,"line_start":182,"line_end":182,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18565,"byte_end":18568,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ If the token or its signature is invalid or the claims fail validation, it will return an error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18569,"byte_end":18669,"line_start":184,"line_end":184,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18670,"byte_end":18673,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18674,"byte_end":18685,"line_start":186,"line_end":186,"column_start":1,"column_end":12}},{"value":"/ use serde::{Deserialize, Serialize};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18686,"byte_end":18726,"line_start":187,"line_end":187,"column_start":1,"column_end":41}},{"value":"/ use jsonwebtoken::{decode, DecodingKey, Validation, Algorithm};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18727,"byte_end":18794,"line_start":188,"line_end":188,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18795,"byte_end":18798,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Serialize, Deserialize)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18799,"byte_end":18843,"line_start":190,"line_end":190,"column_start":1,"column_end":45}},{"value":"/ struct Claims {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18844,"byte_end":18863,"line_start":191,"line_end":191,"column_start":1,"column_end":20}},{"value":"/    sub: String,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18864,"byte_end":18883,"line_start":192,"line_end":192,"column_start":1,"column_end":20}},{"value":"/    company: String","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18884,"byte_end":18906,"line_start":193,"line_end":193,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18907,"byte_end":18912,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18913,"byte_end":18916,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ let token = \"a.jwt.token\".to_string();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18917,"byte_end":18959,"line_start":196,"line_end":196,"column_start":1,"column_end":43}},{"value":"/ // Claims is a struct that implements Deserialize","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":18960,"byte_end":19013,"line_start":197,"line_end":197,"column_start":1,"column_end":54}},{"value":"/ let token_message = decode::<Claims>(&token, &DecodingKey::from_secret(\"secret\".as_ref()), &Validation::new(Algorithm::HS256));","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":19014,"byte_end":19145,"line_start":198,"line_end":198,"column_start":1,"column_end":132}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":19146,"byte_end":19153,"line_start":199,"line_end":199,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":192},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":20038,"byte_end":20051,"line_start":227,"line_end":227,"column_start":8,"column_end":21},"name":"decode_header","qualname":"::decoding::decode_header","value":"pub fn decode_header(&str) -> Result<Header>","parent":null,"children":[],"decl_id":null,"docs":" Decode a JWT without any signature verification/validations and return its [Header](struct.Header.html).","sig":null,"attributes":[{"value":"/ Decode a JWT without any signature verification/validations and return its [Header](struct.Header.html).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":19673,"byte_end":19781,"line_start":217,"line_end":217,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":19782,"byte_end":19785,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ If the token has an invalid format (ie 3 parts separated by a `.`), it will return an error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":19786,"byte_end":19882,"line_start":219,"line_end":219,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":19883,"byte_end":19886,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":19887,"byte_end":19898,"line_start":221,"line_end":221,"column_start":1,"column_end":12}},{"value":"/ use jsonwebtoken::decode_header;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":19899,"byte_end":19935,"line_start":222,"line_end":222,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":19936,"byte_end":19939,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ let token = \"a.jwt.token\".to_string();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":19940,"byte_end":19982,"line_start":224,"line_end":224,"column_start":1,"column_end":43}},{"value":"/ let header = decode_header(&token);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":19983,"byte_end":20022,"line_start":225,"line_end":225,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":20023,"byte_end":20030,"line_start":226,"line_end":226,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":730},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":20737,"byte_end":20748,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"EncodingKey","qualname":"::encoding::EncodingKey","value":"EncodingKey {  }","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732}],"decl_id":null,"docs":" A key to encode a JWT with. Can be a secret, a PEM-encoded key or a DER-encoded key.\n This key can be re-used so make sure you only initialize it once if you can for better performance\n","sig":null,"attributes":[{"value":"/ A key to encode a JWT with. Can be a secret, a PEM-encoded key or a DER-encoded key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":20517,"byte_end":20605,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ This key can be re-used so make sure you only initialize it once if you can for better performance","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":20606,"byte_end":20708,"line_start":12,"line_end":12,"column_start":1,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":20914,"byte_end":20925,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"from_secret","qualname":"<EncodingKey>::from_secret","value":"pub fn from_secret(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you're using a HMAC secret that is not base64, use that.\n","sig":null,"attributes":[{"value":"/ If you're using a HMAC secret that is not base64, use that.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":20839,"byte_end":20902,"line_start":20,"line_end":20,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21101,"byte_end":21119,"line_start":26,"line_end":26,"column_start":12,"column_end":30},"name":"from_base64_secret","qualname":"<EncodingKey>::from_base64_secret","value":"pub fn from_base64_secret(&str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" If you have a base64 HMAC secret, use that.\n","sig":null,"attributes":[{"value":"/ If you have a base64 HMAC secret, use that.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21042,"byte_end":21089,"line_start":25,"line_end":25,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21695,"byte_end":21707,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"from_rsa_pem","qualname":"<EncodingKey>::from_rsa_pem","value":"pub fn from_rsa_pem(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" If you are loading a RSA key from a .pem file.\n This errors if the key is not a valid RSA key.\n Only exists if the feature `use_pem` is enabled.","sig":null,"attributes":[{"value":"/ If you are loading a RSA key from a .pem file.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21279,"byte_end":21329,"line_start":31,"line_end":31,"column_start":5,"column_end":55}},{"value":"/ This errors if the key is not a valid RSA key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21334,"byte_end":21384,"line_start":32,"line_end":32,"column_start":5,"column_end":55}},{"value":"/ Only exists if the feature `use_pem` is enabled.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21389,"byte_end":21441,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21446,"byte_end":21449,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # NOTE","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21454,"byte_end":21464,"line_start":35,"line_end":35,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21469,"byte_end":21472,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ According to the [ring doc](https://briansmith.org/rustdoc/ring/signature/struct.RsaKeyPair.html#method.from_pkcs8),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21477,"byte_end":21597,"line_start":37,"line_end":37,"column_start":5,"column_end":125}},{"value":"/ the key should be at least 2047 bits.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21602,"byte_end":21643,"line_start":38,"line_end":38,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21648,"byte_end":21651,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"cfg(feature = \"use_pem\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21656,"byte_end":21683,"line_start":40,"line_end":40,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22427,"byte_end":22438,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"from_ec_pem","qualname":"<EncodingKey>::from_ec_pem","value":"pub fn from_ec_pem(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" If you are loading a ECDSA key from a .pem file\n This errors if the key is not a valid private EC key\n Only exists if the feature `use_pem` is enabled.","sig":null,"attributes":[{"value":"/ If you are loading a ECDSA key from a .pem file","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21926,"byte_end":21977,"line_start":47,"line_end":47,"column_start":5,"column_end":56}},{"value":"/ This errors if the key is not a valid private EC key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":21982,"byte_end":22038,"line_start":48,"line_end":48,"column_start":5,"column_end":61}},{"value":"/ Only exists if the feature `use_pem` is enabled.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22043,"byte_end":22095,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22100,"byte_end":22103,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # NOTE","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22108,"byte_end":22118,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22123,"byte_end":22126,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The key should be in PKCS#8 form.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22131,"byte_end":22168,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22173,"byte_end":22176,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ You can generate a key with the following:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22181,"byte_end":22227,"line_start":55,"line_end":55,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22232,"byte_end":22235,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```sh","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22240,"byte_end":22249,"line_start":57,"line_end":57,"column_start":5,"column_end":14}},{"value":"/ openssl ecparam -genkey -noout -name prime256v1 \\","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22254,"byte_end":22307,"line_start":58,"line_end":58,"column_start":5,"column_end":58}},{"value":"/     | openssl pkcs8 -topk8 -nocrypt -out ec-private.pem","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22312,"byte_end":22371,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22376,"byte_end":22383,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_pem\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22388,"byte_end":22415,"line_start":61,"line_end":61,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22876,"byte_end":22887,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"from_ed_pem","qualname":"<EncodingKey>::from_ed_pem","value":"pub fn from_ed_pem(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" If you are loading a EdDSA key from a .pem file\n This errors if the key is not a valid private Ed key\n Only exists if the feature `use_pem` is enabled.\n","sig":null,"attributes":[{"value":"/ If you are loading a EdDSA key from a .pem file","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22663,"byte_end":22714,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/ This errors if the key is not a valid private Ed key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22719,"byte_end":22775,"line_start":69,"line_end":69,"column_start":5,"column_end":61}},{"value":"/ Only exists if the feature `use_pem` is enabled.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22780,"byte_end":22832,"line_start":70,"line_end":70,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"use_pem\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":22837,"byte_end":22864,"line_start":71,"line_end":71,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":23200,"byte_end":23212,"line_start":79,"line_end":79,"column_start":12,"column_end":24},"name":"from_rsa_der","qualname":"<EncodingKey>::from_rsa_der","value":"pub fn from_rsa_der(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you know what you're doing and have the DER-encoded key, for RSA only\n","sig":null,"attributes":[{"value":"/ If you know what you're doing and have the DER-encoded key, for RSA only","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":23112,"byte_end":23188,"line_start":78,"line_end":78,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":23407,"byte_end":23418,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"from_ec_der","qualname":"<EncodingKey>::from_ec_der","value":"pub fn from_ec_der(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you know what you're doing and have the DER-encoded key, for ECDSA\n","sig":null,"attributes":[{"value":"/ If you know what you're doing and have the DER-encoded key, for ECDSA","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":23322,"byte_end":23395,"line_start":83,"line_end":83,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":23612,"byte_end":23623,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"from_ed_der","qualname":"<EncodingKey>::from_ed_der","value":"pub fn from_ed_der(&[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you know what you're doing and have the DER-encoded key, for EdDSA\n","sig":null,"attributes":[{"value":"/ If you know what you're doing and have the DER-encoded key, for EdDSA","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":23527,"byte_end":23600,"line_start":88,"line_end":88,"column_start":5,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":232},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24579,"byte_end":24585,"line_start":120,"line_end":120,"column_start":8,"column_end":14},"name":"encode","qualname":"::encoding::encode","value":"pub fn encode<T: Serialize>(&Header, &T, &EncodingKey) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Encode the header and claims given and sign the payload using the algorithm from the header and the key.\n If the algorithm given is RSA or EC, the key needs to be in the PEM format.","sig":null,"attributes":[{"value":"/ Encode the header and claims given and sign the payload using the algorithm from the header and the key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":23801,"byte_end":23909,"line_start":98,"line_end":98,"column_start":1,"column_end":109}},{"value":"/ If the algorithm given is RSA or EC, the key needs to be in the PEM format.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":23910,"byte_end":23989,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":23990,"byte_end":23993,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":23994,"byte_end":24005,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/ use serde::{Deserialize, Serialize};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24006,"byte_end":24046,"line_start":102,"line_end":102,"column_start":1,"column_end":41}},{"value":"/ use jsonwebtoken::{encode, Algorithm, Header, EncodingKey};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24047,"byte_end":24110,"line_start":103,"line_end":103,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24111,"byte_end":24114,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Serialize, Deserialize)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24115,"byte_end":24159,"line_start":105,"line_end":105,"column_start":1,"column_end":45}},{"value":"/ struct Claims {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24160,"byte_end":24179,"line_start":106,"line_end":106,"column_start":1,"column_end":20}},{"value":"/    sub: String,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24180,"byte_end":24199,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/    company: String","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24200,"byte_end":24222,"line_start":108,"line_end":108,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24223,"byte_end":24228,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24229,"byte_end":24232,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ let my_claims = Claims {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24233,"byte_end":24261,"line_start":111,"line_end":111,"column_start":1,"column_end":29}},{"value":"/     sub: \"b@b.com\".to_owned(),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24262,"byte_end":24296,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"/     company: \"ACME\".to_owned()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24297,"byte_end":24331,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/ };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24332,"byte_end":24338,"line_start":114,"line_end":114,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24339,"byte_end":24342,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ // my_claims is a struct that implements Serialize","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24343,"byte_end":24397,"line_start":116,"line_end":116,"column_start":1,"column_end":55}},{"value":"/ // This will create a JWT using HS256 as algorithm","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24398,"byte_end":24452,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/ let token = encode(&Header::default(), &my_claims, &EncodingKey::from_secret(\"secret\".as_ref())).unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24453,"byte_end":24563,"line_start":118,"line_end":118,"column_start":1,"column_end":111}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":24564,"byte_end":24571,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":234},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"errors","qualname":"::errors","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":250},{"krate":0,"index":749},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270}],"decl_id":null,"docs":" All the errors that can be encountered while encoding/decoding JWTs\n","sig":null,"attributes":[{"value":"/ All the errors that can be encountered while encoding/decoding JWTs","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":263,"byte_end":334,"line_start":11,"line_end":11,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":248},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25333,"byte_end":25339,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `Result<T, jsonwebtoken::Error>`.\n","sig":null,"attributes":[{"value":"/ A type alias for `Result<T, jsonwebtoken::Error>`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25269,"byte_end":25323,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":735},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25478,"byte_end":25483,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Error","qualname":"::errors::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that can occur when encoding/decoding JWTs\n","sig":null,"attributes":[{"value":"/ An error that can occur when encoding/decoding JWTs","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25372,"byte_end":25427,"line_start":14,"line_end":14,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25574,"byte_end":25578,"line_start":20,"line_end":20,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"pub fn kind(&Self) -> &ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Return the specific type of this error.\n","sig":null,"attributes":[{"value":"/ Return the specific type of this error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25519,"byte_end":25562,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25688,"byte_end":25697,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"into_kind","qualname":"<Error>::into_kind","value":"pub fn into_kind(Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Unwrap this error into its underlying type.\n","sig":null,"attributes":[{"value":"/ Unwrap this error into its underlying type.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25629,"byte_end":25676,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":750},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26104,"byte_end":26116,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"InvalidToken","qualname":"::errors::ErrorKind::InvalidToken","value":"ErrorKind::InvalidToken","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When a token doesn't have a valid JWT shape\n","sig":null,"attributes":[{"value":"/ When a token doesn't have a valid JWT shape","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26052,"byte_end":26099,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":752},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26163,"byte_end":26179,"line_start":41,"line_end":41,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::errors::ErrorKind::InvalidSignature","value":"ErrorKind::InvalidSignature","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When the signature doesn't match\n","sig":null,"attributes":[{"value":"/ When the signature doesn't match","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26122,"byte_end":26158,"line_start":40,"line_end":40,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":754},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26240,"byte_end":26255,"line_start":43,"line_end":43,"column_start":5,"column_end":20},"name":"InvalidEcdsaKey","qualname":"::errors::ErrorKind::InvalidEcdsaKey","value":"ErrorKind::InvalidEcdsaKey","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When the secret given is not a valid ECDSA key\n","sig":null,"attributes":[{"value":"/ When the secret given is not a valid ECDSA key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26185,"byte_end":26235,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":756},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26314,"byte_end":26327,"line_start":45,"line_end":45,"column_start":5,"column_end":18},"name":"InvalidRsaKey","qualname":"::errors::ErrorKind::InvalidRsaKey","value":"ErrorKind::InvalidRsaKey(&'static str)","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When the secret given is not a valid RSA key\n","sig":null,"attributes":[{"value":"/ When the secret given is not a valid RSA key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26261,"byte_end":26309,"line_start":44,"line_end":44,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":759},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26392,"byte_end":26408,"line_start":47,"line_end":47,"column_start":5,"column_end":21},"name":"RsaFailedSigning","qualname":"::errors::ErrorKind::RsaFailedSigning","value":"ErrorKind::RsaFailedSigning","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" We could not sign with the given key\n","sig":null,"attributes":[{"value":"/ We could not sign with the given key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26347,"byte_end":26387,"line_start":46,"line_end":46,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":761},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26496,"byte_end":26516,"line_start":49,"line_end":49,"column_start":5,"column_end":25},"name":"InvalidAlgorithmName","qualname":"::errors::ErrorKind::InvalidAlgorithmName","value":"ErrorKind::InvalidAlgorithmName","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When the algorithm from string doesn't match the one passed to `from_str`\n","sig":null,"attributes":[{"value":"/ When the algorithm from string doesn't match the one passed to `from_str`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26414,"byte_end":26491,"line_start":48,"line_end":48,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26576,"byte_end":26592,"line_start":51,"line_end":51,"column_start":5,"column_end":21},"name":"InvalidKeyFormat","qualname":"::errors::ErrorKind::InvalidKeyFormat","value":"ErrorKind::InvalidKeyFormat","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When a key is provided with an invalid format\n","sig":null,"attributes":[{"value":"/ When a key is provided with an invalid format","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26522,"byte_end":26571,"line_start":50,"line_end":50,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":765},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26687,"byte_end":26707,"line_start":55,"line_end":55,"column_start":5,"column_end":25},"name":"MissingRequiredClaim","qualname":"::errors::ErrorKind::MissingRequiredClaim","value":"ErrorKind::MissingRequiredClaim(String)","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When a claim required by the validation is not present\n","sig":null,"attributes":[{"value":"/ When a claim required by the validation is not present","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26624,"byte_end":26682,"line_start":54,"line_end":54,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":768},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26788,"byte_end":26804,"line_start":57,"line_end":57,"column_start":5,"column_end":21},"name":"ExpiredSignature","qualname":"::errors::ErrorKind::ExpiredSignature","value":"ErrorKind::ExpiredSignature","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When a token’s `exp` claim indicates that it has expired\n","sig":null,"attributes":[{"value":"/ When a token’s `exp` claim indicates that it has expired","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26721,"byte_end":26783,"line_start":56,"line_end":56,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":770},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26882,"byte_end":26895,"line_start":59,"line_end":59,"column_start":5,"column_end":18},"name":"InvalidIssuer","qualname":"::errors::ErrorKind::InvalidIssuer","value":"ErrorKind::InvalidIssuer","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When a token’s `iss` claim does not match the expected issuer\n","sig":null,"attributes":[{"value":"/ When a token’s `iss` claim does not match the expected issuer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26810,"byte_end":26877,"line_start":58,"line_end":58,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":772},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26989,"byte_end":27004,"line_start":61,"line_end":61,"column_start":5,"column_end":20},"name":"InvalidAudience","qualname":"::errors::ErrorKind::InvalidAudience","value":"ErrorKind::InvalidAudience","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When a token’s `aud` claim does not match one of the expected audience values\n","sig":null,"attributes":[{"value":"/ When a token’s `aud` claim does not match one of the expected audience values","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26901,"byte_end":26984,"line_start":60,"line_end":60,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":774},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27098,"byte_end":27112,"line_start":63,"line_end":63,"column_start":5,"column_end":19},"name":"InvalidSubject","qualname":"::errors::ErrorKind::InvalidSubject","value":"ErrorKind::InvalidSubject","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When a token’s `sub` claim does not match one of the expected audience values\n","sig":null,"attributes":[{"value":"/ When a token’s `sub` claim does not match one of the expected audience values","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27010,"byte_end":27093,"line_start":62,"line_end":62,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":776},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27185,"byte_end":27202,"line_start":65,"line_end":65,"column_start":5,"column_end":22},"name":"ImmatureSignature","qualname":"::errors::ErrorKind::ImmatureSignature","value":"ErrorKind::ImmatureSignature","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When a token’s nbf claim represents a time in the future\n","sig":null,"attributes":[{"value":"/ When a token’s nbf claim represents a time in the future","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27118,"byte_end":27180,"line_start":64,"line_end":64,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":778},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27364,"byte_end":27380,"line_start":68,"line_end":68,"column_start":5,"column_end":21},"name":"InvalidAlgorithm","qualname":"::errors::ErrorKind::InvalidAlgorithm","value":"ErrorKind::InvalidAlgorithm","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When the algorithm in the header doesn't match the one passed to `decode` or the encoding/decoding key\n used doesn't match the alg requested\n","sig":null,"attributes":[{"value":"/ When the algorithm in the header doesn't match the one passed to `decode` or the encoding/decoding key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27208,"byte_end":27314,"line_start":66,"line_end":66,"column_start":5,"column_end":111}},{"value":"/ used doesn't match the alg requested","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27319,"byte_end":27359,"line_start":67,"line_end":67,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":780},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27459,"byte_end":27475,"line_start":70,"line_end":70,"column_start":5,"column_end":21},"name":"MissingAlgorithm","qualname":"::errors::ErrorKind::MissingAlgorithm","value":"ErrorKind::MissingAlgorithm","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" When the Validation struct does not contain at least 1 algorithm\n","sig":null,"attributes":[{"value":"/ When the Validation struct does not contain at least 1 algorithm","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27386,"byte_end":27454,"line_start":69,"line_end":69,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":782},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27563,"byte_end":27569,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"name":"Base64","qualname":"::errors::ErrorKind::Base64","value":"ErrorKind::Base64(base64::DecodeError)","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" An error happened when decoding some base64 text\n","sig":null,"attributes":[{"value":"/ An error happened when decoding some base64 text","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27506,"byte_end":27558,"line_start":73,"line_end":73,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":785},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27659,"byte_end":27663,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"Json","qualname":"::errors::ErrorKind::Json","value":"ErrorKind::Json(Arc<serde_json::Error>)","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" An error happened while serializing/deserializing JSON\n","sig":null,"attributes":[{"value":"/ An error happened while serializing/deserializing JSON","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27596,"byte_end":27654,"line_start":75,"line_end":75,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":788},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27736,"byte_end":27740,"line_start":78,"line_end":78,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::errors::ErrorKind::Utf8","value":"ErrorKind::Utf8(::std::string::FromUtf8Error)","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" Some of the text was invalid UTF-8\n","sig":null,"attributes":[{"value":"/ Some of the text was invalid UTF-8","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27693,"byte_end":27731,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":791},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27829,"byte_end":27835,"line_start":80,"line_end":80,"column_start":5,"column_end":11},"name":"Crypto","qualname":"::errors::ErrorKind::Crypto","value":"ErrorKind::Crypto(::ring::error::Unspecified)","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" Something unspecified went wrong with crypto\n","sig":null,"attributes":[{"value":"/ Something unspecified went wrong with crypto","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27776,"byte_end":27824,"line_start":79,"line_end":79,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":749},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":26036,"byte_end":26045,"line_start":37,"line_end":37,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::errors::ErrorKind","value":"pub enum ErrorKind {\n    InvalidToken,\n    InvalidSignature,\n    InvalidEcdsaKey,\n    InvalidRsaKey(&'static str),\n    RsaFailedSigning,\n    InvalidAlgorithmName,\n    InvalidKeyFormat,\n    MissingRequiredClaim(String),\n    ExpiredSignature,\n    InvalidIssuer,\n    InvalidAudience,\n    InvalidSubject,\n    ImmatureSignature,\n    InvalidAlgorithm,\n    MissingAlgorithm,\n    Base64(base64::DecodeError),\n    Json(Arc<serde_json::Error>),\n    Utf8(::std::string::FromUtf8Error),\n    Crypto(::ring::error::Unspecified),\n}","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791}],"decl_id":null,"docs":" The specific type of an error.","sig":null,"attributes":[{"value":"/ The specific type of an error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25744,"byte_end":25778,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25779,"byte_end":25782,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This enum may grow additional variants, the `#[non_exhaustive]`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25783,"byte_end":25850,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ attribute makes sure clients don't count on exhaustive matching.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25851,"byte_end":25919,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ (Otherwise, adding a new variant could break existing code.)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25920,"byte_end":25984,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"non_exhaustive","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25985,"byte_end":26002,"line_start":35,"line_end":35,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":798},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":31875,"byte_end":31881,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"Header","qualname":"::header::Header","value":"Header { typ, alg, cty, jku, jwk, kid, x5u, x5c, x5t, x5t_s256 }","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":799},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884}],"decl_id":null,"docs":" A basic JWT header, the alg defaults to HS256 and typ is automatically\n set to `JWT`. All the other fields are optional.\n","sig":null,"attributes":[{"value":"/ A basic JWT header, the alg defaults to HS256 and typ is automatically","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":31671,"byte_end":31745,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ set to `JWT`. All the other fields are optional.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":31746,"byte_end":31798,"line_start":11,"line_end":11,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":876},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32092,"byte_end":32095,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"name":"typ","qualname":"::header::Header::typ","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" The type of JWS: it can only be \"JWT\" here","sig":null,"attributes":[{"value":"/ The type of JWS: it can only be \"JWT\" here","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":31888,"byte_end":31934,"line_start":14,"line_end":14,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":31939,"byte_end":31942,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC7515#4.1.9](https://tools.ietf.org/html/rfc7515#section-4.1.9).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":31947,"byte_end":32029,"line_start":16,"line_end":16,"column_start":5,"column_end":87}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32034,"byte_end":32083,"line_start":17,"line_end":17,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":799},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32243,"byte_end":32246,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"alg","qualname":"::header::Header::alg","value":"algorithms::Algorithm","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" The algorithm used","sig":null,"attributes":[{"value":"/ The algorithm used","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32117,"byte_end":32139,"line_start":19,"line_end":19,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32144,"byte_end":32147,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC7515#4.1.1](https://tools.ietf.org/html/rfc7515#section-4.1.1).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32152,"byte_end":32234,"line_start":21,"line_end":21,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":877},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32433,"byte_end":32436,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"cty","qualname":"::header::Header::cty","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" Content type","sig":null,"attributes":[{"value":"/ Content type","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32263,"byte_end":32279,"line_start":23,"line_end":23,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32284,"byte_end":32287,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC7519#5.2](https://tools.ietf.org/html/rfc7519#section-5.2).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32292,"byte_end":32370,"line_start":25,"line_end":25,"column_start":5,"column_end":83}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32375,"byte_end":32424,"line_start":26,"line_end":26,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":878},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32632,"byte_end":32635,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"jku","qualname":"::header::Header::jku","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" JSON Key URL","sig":null,"attributes":[{"value":"/ JSON Key URL","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32458,"byte_end":32474,"line_start":28,"line_end":28,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32479,"byte_end":32482,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC7515#4.1.2](https://tools.ietf.org/html/rfc7515#section-4.1.2).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32487,"byte_end":32569,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32574,"byte_end":32623,"line_start":31,"line_end":31,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":879},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32831,"byte_end":32834,"line_start":37,"line_end":37,"column_start":9,"column_end":12},"name":"jwk","qualname":"::header::Header::jwk","value":"std::option::Option<jwk::Jwk>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" JSON Web Key","sig":null,"attributes":[{"value":"/ JSON Web Key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32657,"byte_end":32673,"line_start":33,"line_end":33,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32678,"byte_end":32681,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC7515#4.1.3](https://tools.ietf.org/html/rfc7515#section-4.1.3).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32686,"byte_end":32768,"line_start":35,"line_end":35,"column_start":5,"column_end":87}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32773,"byte_end":32822,"line_start":36,"line_end":36,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":880},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33021,"byte_end":33024,"line_start":42,"line_end":42,"column_start":9,"column_end":12},"name":"kid","qualname":"::header::Header::kid","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" Key ID","sig":null,"attributes":[{"value":"/ Key ID","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32853,"byte_end":32863,"line_start":38,"line_end":38,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32868,"byte_end":32871,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC7515#4.1.4](https://tools.ietf.org/html/rfc7515#section-4.1.4).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32876,"byte_end":32958,"line_start":40,"line_end":40,"column_start":5,"column_end":87}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":32963,"byte_end":33012,"line_start":41,"line_end":41,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":881},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33217,"byte_end":33220,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"x5u","qualname":"::header::Header::x5u","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" X.509 URL","sig":null,"attributes":[{"value":"/ X.509 URL","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33046,"byte_end":33059,"line_start":43,"line_end":43,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33064,"byte_end":33067,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC7515#4.1.5](https://tools.ietf.org/html/rfc7515#section-4.1.5).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33072,"byte_end":33154,"line_start":45,"line_end":45,"column_start":5,"column_end":87}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33159,"byte_end":33208,"line_start":46,"line_end":46,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":882},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33476,"byte_end":33479,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"name":"x5c","qualname":"::header::Header::x5c","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" X.509 certificate chain. A Vec of base64 encoded ASN.1 DER certificates.","sig":null,"attributes":[{"value":"/ X.509 certificate chain. A Vec of base64 encoded ASN.1 DER certificates.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33242,"byte_end":33318,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33323,"byte_end":33326,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC7515#4.1.6](https://tools.ietf.org/html/rfc7515#section-4.1.6).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33331,"byte_end":33413,"line_start":50,"line_end":50,"column_start":5,"column_end":87}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33418,"byte_end":33467,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":883},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33701,"byte_end":33704,"line_start":57,"line_end":57,"column_start":9,"column_end":12},"name":"x5t","qualname":"::header::Header::x5t","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" X.509 SHA1 certificate thumbprint","sig":null,"attributes":[{"value":"/ X.509 SHA1 certificate thumbprint","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33506,"byte_end":33543,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33548,"byte_end":33551,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC7515#4.1.7](https://tools.ietf.org/html/rfc7515#section-4.1.7).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33556,"byte_end":33638,"line_start":55,"line_end":55,"column_start":5,"column_end":87}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33643,"byte_end":33692,"line_start":56,"line_end":56,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":884},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":34048,"byte_end":34056,"line_start":65,"line_end":65,"column_start":9,"column_end":17},"name":"x5t_s256","qualname":"::header::Header::x5t_s256","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":798},"children":[],"decl_id":null,"docs":" X.509 SHA256 certificate thumbprint","sig":null,"attributes":[{"value":"/ X.509 SHA256 certificate thumbprint","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33726,"byte_end":33765,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33770,"byte_end":33773,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Defined in [RFC7515#4.1.8](https://tools.ietf.org/html/rfc7515#section-4.1.8).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33778,"byte_end":33860,"line_start":60,"line_end":60,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33865,"byte_end":33868,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This will be serialized/deserialized as \"x5t#S256\", as defined by the RFC.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33873,"byte_end":33951,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":33956,"byte_end":34005,"line_start":63,"line_end":63,"column_start":5,"column_end":54}},{"value":"serde(rename = \"x5t#S256\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":34010,"byte_end":34039,"line_start":64,"line_end":64,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":34156,"byte_end":34159,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<Header>::new","value":"pub fn new(Algorithm) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a JWT header with the algorithm given\n","sig":null,"attributes":[{"value":"/ Returns a JWT header with the algorithm given","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":34095,"byte_end":34144,"line_start":69,"line_end":69,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":34815,"byte_end":34822,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"x5c_der","qualname":"<Header>::x5c_der","value":"pub fn x5c_der(&Self) -> Result<Option<Vec<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the X.509 certificate chain into ASN.1 DER format.\n","sig":null,"attributes":[{"value":"/ Decodes the X.509 certificate chain into ASN.1 DER format.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":34741,"byte_end":34803,"line_start":91,"line_end":91,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":303},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jwk","qualname":"::jwk","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":885},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":907},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":959},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1047},{"krate":0,"index":1084},{"krate":0,"index":356},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1104},{"krate":0,"index":1145},{"krate":0,"index":358},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1174},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1248},{"krate":0,"index":1285},{"krate":0,"index":360},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1308},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1377},{"krate":0,"index":1414},{"krate":0,"index":362},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1438},{"krate":0,"index":1481},{"krate":0,"index":1483},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":1505},{"krate":0,"index":1542},{"krate":0,"index":364},{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1551},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1566},{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1645},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1635},{"krate":0,"index":1642},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1670},{"krate":0,"index":1676},{"krate":0,"index":1742},{"krate":0,"index":1747},{"krate":0,"index":1749},{"krate":0,"index":1751},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1757},{"krate":0,"index":1763},{"krate":0,"index":366}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":35224,"byte_end":35247,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":886},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":35900,"byte_end":35909,"line_start":15,"line_end":15,"column_start":5,"column_end":14},"name":"Signature","qualname":"::jwk::PublicKeyUse::Signature","value":"PublicKeyUse::Signature","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" Indicates a public key is meant for signature verification\n","sig":null,"attributes":[{"value":"/ Indicates a public key is meant for signature verification","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":35833,"byte_end":35895,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":888},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":35970,"byte_end":35980,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"Encryption","qualname":"::jwk::PublicKeyUse::Encryption","value":"PublicKeyUse::Encryption","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" Indicates a public key is meant for encryption\n","sig":null,"attributes":[{"value":"/ Indicates a public key is meant for encryption","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":35915,"byte_end":35965,"line_start":16,"line_end":16,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":890},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":36006,"byte_end":36011,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"Other","qualname":"::jwk::PublicKeyUse::Other","value":"PublicKeyUse::Other(String)","parent":{"krate":0,"index":885},"children":[],"decl_id":null,"docs":" Other usage\n","sig":null,"attributes":[{"value":"/ Other usage","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":35986,"byte_end":36001,"line_start":18,"line_end":18,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":885},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":35814,"byte_end":35826,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"PublicKeyUse","qualname":"::jwk::PublicKeyUse","value":"pub enum PublicKeyUse { Signature, Encryption, Other(String), }","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890}],"decl_id":null,"docs":" The intended usage of the public `KeyType`. This enum is serialized `untagged`\n","sig":null,"attributes":[{"value":"/ The intended usage of the public `KeyType`. This enum is serialized `untagged`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":35677,"byte_end":35759,"line_start":11,"line_end":11,"column_start":1,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":908},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37508,"byte_end":37512,"line_start":70,"line_end":70,"column_start":5,"column_end":9},"name":"Sign","qualname":"::jwk::KeyOperations::Sign","value":"KeyOperations::Sign","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" Computer digital signature or MAC\n","sig":null,"attributes":[{"value":"/ Computer digital signature or MAC","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37466,"byte_end":37503,"line_start":69,"line_end":69,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":910},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37558,"byte_end":37564,"line_start":72,"line_end":72,"column_start":5,"column_end":11},"name":"Verify","qualname":"::jwk::KeyOperations::Verify","value":"KeyOperations::Verify","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" Verify digital signature or MAC\n","sig":null,"attributes":[{"value":"/ Verify digital signature or MAC","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37518,"byte_end":37553,"line_start":71,"line_end":71,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":912},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37594,"byte_end":37601,"line_start":74,"line_end":74,"column_start":5,"column_end":12},"name":"Encrypt","qualname":"::jwk::KeyOperations::Encrypt","value":"KeyOperations::Encrypt","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" Encrypt content\n","sig":null,"attributes":[{"value":"/ Encrypt content","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37570,"byte_end":37589,"line_start":73,"line_end":73,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":914},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37670,"byte_end":37677,"line_start":76,"line_end":76,"column_start":5,"column_end":12},"name":"Decrypt","qualname":"::jwk::KeyOperations::Decrypt","value":"KeyOperations::Decrypt","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" Decrypt content and validate decryption, if applicable\n","sig":null,"attributes":[{"value":"/ Decrypt content and validate decryption, if applicable","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37607,"byte_end":37665,"line_start":75,"line_end":75,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":916},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37703,"byte_end":37710,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"WrapKey","qualname":"::jwk::KeyOperations::WrapKey","value":"KeyOperations::WrapKey","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" Encrypt key\n","sig":null,"attributes":[{"value":"/ Encrypt key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37683,"byte_end":37698,"line_start":77,"line_end":77,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":918},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37775,"byte_end":37784,"line_start":80,"line_end":80,"column_start":5,"column_end":14},"name":"UnwrapKey","qualname":"::jwk::KeyOperations::UnwrapKey","value":"KeyOperations::UnwrapKey","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" Decrypt key and validate decryption, if applicable\n","sig":null,"attributes":[{"value":"/ Decrypt key and validate decryption, if applicable","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37716,"byte_end":37770,"line_start":79,"line_end":79,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":920},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37809,"byte_end":37818,"line_start":82,"line_end":82,"column_start":5,"column_end":14},"name":"DeriveKey","qualname":"::jwk::KeyOperations::DeriveKey","value":"KeyOperations::DeriveKey","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" Derive key\n","sig":null,"attributes":[{"value":"/ Derive key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37790,"byte_end":37804,"line_start":81,"line_end":81,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":922},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37868,"byte_end":37878,"line_start":84,"line_end":84,"column_start":5,"column_end":15},"name":"DeriveBits","qualname":"::jwk::KeyOperations::DeriveBits","value":"KeyOperations::DeriveBits","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" Derive bits not to be used as a key\n","sig":null,"attributes":[{"value":"/ Derive bits not to be used as a key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37824,"byte_end":37863,"line_start":83,"line_end":83,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":924},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37908,"byte_end":37913,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"Other","qualname":"::jwk::KeyOperations::Other","value":"KeyOperations::Other(String)","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" Other operation\n","sig":null,"attributes":[{"value":"/ Other operation","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37884,"byte_end":37903,"line_start":85,"line_end":85,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":907},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37446,"byte_end":37459,"line_start":68,"line_end":68,"column_start":10,"column_end":23},"name":"KeyOperations","qualname":"::jwk::KeyOperations","value":"pub enum KeyOperations {\n    Sign,\n    Verify,\n    Encrypt,\n    Decrypt,\n    WrapKey,\n    UnwrapKey,\n    DeriveKey,\n    DeriveBits,\n    Other(String),\n}","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924}],"decl_id":null,"docs":" Operations that the key is intended to be used for. This enum is serialized `untagged`\n","sig":null,"attributes":[{"value":"/ Operations that the key is intended to be used for. This enum is serialized `untagged`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37301,"byte_end":37391,"line_start":66,"line_end":66,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":941},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":39984,"byte_end":40000,"line_start":147,"line_end":147,"column_start":12,"column_end":28},"name":"CommonParameters","qualname":"::jwk::CommonParameters","value":"CommonParameters { public_key_use, key_operations, algorithm, key_id, x509_url, x509_chain, x509_sha1_fingerprint, x509_sha256_fingerprint }","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026}],"decl_id":null,"docs":" Common JWK parameters\n","sig":null,"attributes":[{"value":"/ Common JWK parameters","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":39869,"byte_end":39894,"line_start":145,"line_end":145,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40265,"byte_end":40279,"line_start":151,"line_end":151,"column_start":9,"column_end":23},"name":"public_key_use","qualname":"::jwk::CommonParameters::public_key_use","value":"std::option::Option<jwk::PublicKeyUse>","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" The intended use of the public key. Should not be specified with `key_operations`.\n See sections 4.2 and 4.3 of [RFC7517](https://tools.ietf.org/html/rfc7517).\n","sig":null,"attributes":[{"value":"/ The intended use of the public key. Should not be specified with `key_operations`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40007,"byte_end":40093,"line_start":148,"line_end":148,"column_start":5,"column_end":91}},{"value":"/ See sections 4.2 and 4.3 of [RFC7517](https://tools.ietf.org/html/rfc7517).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40098,"byte_end":40177,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"serde(rename = \"use\", skip_serializing_if = \"Option::is_none\", default)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40182,"byte_end":40256,"line_start":150,"line_end":150,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40788,"byte_end":40802,"line_start":160,"line_end":160,"column_start":9,"column_end":23},"name":"key_operations","qualname":"::jwk::CommonParameters::key_operations","value":"std::option::Option<std::vec::Vec<jwk::KeyOperations>>","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" The \"key_ops\" (key operations) parameter identifies the operation(s)\n for which the key is intended to be used.  The \"key_ops\" parameter is\n intended for use cases in which public, private, or symmetric keys\n may be present.\n Should not be specified with `public_key_use`.\n See sections 4.2 and 4.3 of [RFC7517](https://tools.ietf.org/html/rfc7517).\n","sig":null,"attributes":[{"value":"/ The \"key_ops\" (key operations) parameter identifies the operation(s)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40308,"byte_end":40380,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/ for which the key is intended to be used.  The \"key_ops\" parameter is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40385,"byte_end":40458,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/ intended for use cases in which public, private, or symmetric keys","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40463,"byte_end":40533,"line_start":155,"line_end":155,"column_start":5,"column_end":75}},{"value":"/ may be present.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40538,"byte_end":40557,"line_start":156,"line_end":156,"column_start":5,"column_end":24}},{"value":"/ Should not be specified with `public_key_use`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40562,"byte_end":40612,"line_start":157,"line_end":157,"column_start":5,"column_end":55}},{"value":"/ See sections 4.2 and 4.3 of [RFC7517](https://tools.ietf.org/html/rfc7517).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40617,"byte_end":40696,"line_start":158,"line_end":158,"column_start":5,"column_end":84}},{"value":"serde(rename = \"key_ops\", skip_serializing_if = \"Option::is_none\", default)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40701,"byte_end":40779,"line_start":159,"line_end":159,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40972,"byte_end":40981,"line_start":164,"line_end":164,"column_start":9,"column_end":18},"name":"algorithm","qualname":"::jwk::CommonParameters::algorithm","value":"std::option::Option<algorithms::Algorithm>","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" The algorithm intended for use with the key\n","sig":null,"attributes":[{"value":"/ The algorithm intended for use with the key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40837,"byte_end":40884,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"serde(rename = \"alg\", skip_serializing_if = \"Option::is_none\", default)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":40889,"byte_end":40963,"line_start":163,"line_end":163,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41136,"byte_end":41142,"line_start":168,"line_end":168,"column_start":9,"column_end":15},"name":"key_id","qualname":"::jwk::CommonParameters::key_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" The case sensitive Key ID for the key\n","sig":null,"attributes":[{"value":"/ The case sensitive Key ID for the key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41007,"byte_end":41048,"line_start":166,"line_end":166,"column_start":5,"column_end":46}},{"value":"serde(rename = \"kid\", skip_serializing_if = \"Option::is_none\", default)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41053,"byte_end":41127,"line_start":167,"line_end":167,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41365,"byte_end":41373,"line_start":174,"line_end":174,"column_start":9,"column_end":17},"name":"x509_url","qualname":"::jwk::CommonParameters::x509_url","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" X.509 Public key cerfificate URL. This is currently not implemented (correctly).","sig":null,"attributes":[{"value":"/ X.509 Public key cerfificate URL. This is currently not implemented (correctly).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41165,"byte_end":41249,"line_start":170,"line_end":170,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41254,"byte_end":41257,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Serialized to `x5u`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41262,"byte_end":41286,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"serde(rename = \"x5u\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41291,"byte_end":41356,"line_start":173,"line_end":173,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41598,"byte_end":41608,"line_start":180,"line_end":180,"column_start":9,"column_end":19},"name":"x509_chain","qualname":"::jwk::CommonParameters::x509_chain","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" X.509 public key certificate chain. This is currently not implemented (correctly).","sig":null,"attributes":[{"value":"/ X.509 public key certificate chain. This is currently not implemented (correctly).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41396,"byte_end":41482,"line_start":176,"line_end":176,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41487,"byte_end":41490,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Serialized to `x5c`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41495,"byte_end":41519,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"serde(rename = \"x5c\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41524,"byte_end":41589,"line_start":179,"line_end":179,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41837,"byte_end":41858,"line_start":186,"line_end":186,"column_start":9,"column_end":30},"name":"x509_sha1_fingerprint","qualname":"::jwk::CommonParameters::x509_sha1_fingerprint","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" X.509 Certificate SHA1 thumbprint. This is currently not implemented (correctly).","sig":null,"attributes":[{"value":"/ X.509 Certificate SHA1 thumbprint. This is currently not implemented (correctly).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41636,"byte_end":41721,"line_start":182,"line_end":182,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41726,"byte_end":41729,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Serialized to `x5t`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41734,"byte_end":41758,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"serde(rename = \"x5t\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41763,"byte_end":41828,"line_start":185,"line_end":185,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42094,"byte_end":42117,"line_start":192,"line_end":192,"column_start":9,"column_end":32},"name":"x509_sha256_fingerprint","qualname":"::jwk::CommonParameters::x509_sha256_fingerprint","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" X.509 Certificate SHA256 thumbprint. This is currently not implemented (correctly).","sig":null,"attributes":[{"value":"/ X.509 Certificate SHA256 thumbprint. This is currently not implemented (correctly).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41881,"byte_end":41968,"line_start":188,"line_end":188,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41973,"byte_end":41976,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Serialized to `x5t#S256`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":41981,"byte_end":42010,"line_start":190,"line_end":190,"column_start":5,"column_end":34}},{"value":"serde(rename = \"x5t#S256\", skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42015,"byte_end":42085,"line_start":191,"line_end":191,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42434,"byte_end":42436,"line_start":200,"line_end":200,"column_start":5,"column_end":7},"name":"EC","qualname":"::jwk::EllipticCurveKeyType::EC","value":"EllipticCurveKeyType::EC","parent":{"krate":0,"index":1027},"children":[],"decl_id":null,"docs":" Key type value for an Elliptic Curve Key.\n","sig":null,"attributes":[{"value":"/ Key type value for an Elliptic Curve Key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42384,"byte_end":42429,"line_start":199,"line_end":199,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42357,"byte_end":42377,"line_start":198,"line_end":198,"column_start":10,"column_end":30},"name":"EllipticCurveKeyType","qualname":"::jwk::EllipticCurveKeyType","value":"pub enum EllipticCurveKeyType { EC, }","parent":null,"children":[{"krate":0,"index":1028}],"decl_id":null,"docs":" Key type value for an Elliptic Curve Key.\n This single value enum is a workaround for Rust not supporting associated constants.\n","sig":null,"attributes":[{"value":"/ Key type value for an Elliptic Curve Key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42138,"byte_end":42183,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ This single value enum is a workaround for Rust not supporting associated constants.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42184,"byte_end":42272,"line_start":196,"line_end":196,"column_start":1,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42834,"byte_end":42838,"line_start":215,"line_end":215,"column_start":5,"column_end":9},"name":"P256","qualname":"::jwk::EllipticCurve::P256","value":"EllipticCurve::P256","parent":{"krate":0,"index":1087},"children":[],"decl_id":null,"docs":" P-256 curve\n","sig":null,"attributes":[{"value":"/ P-256 curve","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42783,"byte_end":42798,"line_start":213,"line_end":213,"column_start":5,"column_end":20}},{"value":"serde(rename = \"P-256\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42803,"byte_end":42829,"line_start":214,"line_end":214,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42895,"byte_end":42899,"line_start":218,"line_end":218,"column_start":5,"column_end":9},"name":"P384","qualname":"::jwk::EllipticCurve::P384","value":"EllipticCurve::P384","parent":{"krate":0,"index":1087},"children":[],"decl_id":null,"docs":" P-384 curve\n","sig":null,"attributes":[{"value":"/ P-384 curve","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42844,"byte_end":42859,"line_start":216,"line_end":216,"column_start":5,"column_end":20}},{"value":"serde(rename = \"P-384\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42864,"byte_end":42890,"line_start":217,"line_end":217,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1152},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42982,"byte_end":42986,"line_start":221,"line_end":221,"column_start":5,"column_end":9},"name":"P521","qualname":"::jwk::EllipticCurve::P521","value":"EllipticCurve::P521","parent":{"krate":0,"index":1087},"children":[],"decl_id":null,"docs":" P-521 curve -- unsupported by `ring`.\n","sig":null,"attributes":[{"value":"/ P-521 curve -- unsupported by `ring`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42905,"byte_end":42946,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"serde(rename = \"P-521\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42951,"byte_end":42977,"line_start":220,"line_end":220,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42763,"byte_end":42776,"line_start":212,"line_end":212,"column_start":10,"column_end":23},"name":"EllipticCurve","qualname":"::jwk::EllipticCurve","value":"pub enum EllipticCurve { P256, P384, P521, }","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152}],"decl_id":null,"docs":" Type of cryptographic curve used by a key. This is defined in\n [RFC 7518 #7.6](https://tools.ietf.org/html/rfc7518#section-7.6)\n","sig":null,"attributes":[{"value":"/ Type of cryptographic curve used by a key. This is defined in","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42550,"byte_end":42615,"line_start":209,"line_end":209,"column_start":1,"column_end":66}},{"value":"/ [RFC 7518 #7.6](https://tools.ietf.org/html/rfc7518#section-7.6)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42616,"byte_end":42684,"line_start":210,"line_end":210,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43218,"byte_end":43244,"line_start":232,"line_end":232,"column_start":12,"column_end":38},"name":"EllipticCurveKeyParameters","qualname":"::jwk::EllipticCurveKeyParameters","value":"EllipticCurveKeyParameters { key_type, curve, x, y }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1155},{"krate":0,"index":1156}],"decl_id":null,"docs":" Parameters for an Elliptic Curve Key\n","sig":null,"attributes":[{"value":"/ Parameters for an Elliptic Curve Key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43088,"byte_end":43128,"line_start":230,"line_end":230,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1226},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43334,"byte_end":43342,"line_start":235,"line_end":235,"column_start":9,"column_end":17},"name":"key_type","qualname":"::jwk::EllipticCurveKeyParameters::key_type","value":"jwk::EllipticCurveKeyType","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":" Key type value for an Elliptic Curve Key.\n","sig":null,"attributes":[{"value":"/ Key type value for an Elliptic Curve Key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43251,"byte_end":43296,"line_start":233,"line_end":233,"column_start":5,"column_end":50}},{"value":"serde(rename = \"kty\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43301,"byte_end":43325,"line_start":234,"line_end":234,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43501,"byte_end":43506,"line_start":239,"line_end":239,"column_start":9,"column_end":14},"name":"curve","qualname":"::jwk::EllipticCurveKeyParameters::curve","value":"jwk::EllipticCurve","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":" The \"crv\" (curve) parameter identifies the cryptographic curve used\n with the key.\n","sig":null,"attributes":[{"value":"/ The \"crv\" (curve) parameter identifies the cryptographic curve used","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43370,"byte_end":43441,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/ with the key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43446,"byte_end":43463,"line_start":237,"line_end":237,"column_start":5,"column_end":22}},{"value":"serde(rename = \"crv\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43468,"byte_end":43492,"line_start":238,"line_end":238,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43636,"byte_end":43637,"line_start":242,"line_end":242,"column_start":9,"column_end":10},"name":"x","qualname":"::jwk::EllipticCurveKeyParameters::x","value":"std::string::String","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":" The \"x\" (x coordinate) parameter contains the x coordinate for the\n Elliptic Curve point.\n","sig":null,"attributes":[{"value":"/ The \"x\" (x coordinate) parameter contains the x coordinate for the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43527,"byte_end":43597,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ Elliptic Curve point.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43602,"byte_end":43627,"line_start":241,"line_end":241,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43760,"byte_end":43761,"line_start":245,"line_end":245,"column_start":9,"column_end":10},"name":"y","qualname":"::jwk::EllipticCurveKeyParameters::y","value":"std::string::String","parent":{"krate":0,"index":1154},"children":[],"decl_id":null,"docs":" The \"y\" (y coordinate) parameter contains the y coordinate for the\n Elliptic Curve point.\n","sig":null,"attributes":[{"value":"/ The \"y\" (y coordinate) parameter contains the y coordinate for the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43651,"byte_end":43721,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/ Elliptic Curve point.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43726,"byte_end":43751,"line_start":244,"line_end":244,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44038,"byte_end":44041,"line_start":253,"line_end":253,"column_start":5,"column_end":8},"name":"RSA","qualname":"::jwk::RSAKeyType::RSA","value":"RSAKeyType::RSA","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":" Key type value for an RSA Key.\n","sig":null,"attributes":[{"value":"/ Key type value for an RSA Key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43999,"byte_end":44033,"line_start":252,"line_end":252,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43982,"byte_end":43992,"line_start":251,"line_end":251,"column_start":10,"column_end":20},"name":"RSAKeyType","qualname":"::jwk::RSAKeyType","value":"pub enum RSAKeyType { RSA, }","parent":null,"children":[{"krate":0,"index":1229}],"decl_id":null,"docs":" Key type value for an RSA Key.\n This single value enum is a workaround for Rust not supporting associated constants.\n","sig":null,"attributes":[{"value":"/ Key type value for an RSA Key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43774,"byte_end":43808,"line_start":248,"line_end":248,"column_start":1,"column_end":35}},{"value":"/ This single value enum is a workaround for Rust not supporting associated constants.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43809,"byte_end":43897,"line_start":249,"line_end":249,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44254,"byte_end":44270,"line_start":264,"line_end":264,"column_start":12,"column_end":28},"name":"RSAKeyParameters","qualname":"::jwk::RSAKeyParameters","value":"RSAKeyParameters { key_type, n, e }","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1289},{"krate":0,"index":1290}],"decl_id":null,"docs":" Parameters for a RSA Key\n","sig":null,"attributes":[{"value":"/ Parameters for a RSA Key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44136,"byte_end":44164,"line_start":262,"line_end":262,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44347,"byte_end":44355,"line_start":267,"line_end":267,"column_start":9,"column_end":17},"name":"key_type","qualname":"::jwk::RSAKeyParameters::key_type","value":"jwk::RSAKeyType","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" Key type value for a RSA Key\n","sig":null,"attributes":[{"value":"/ Key type value for a RSA Key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44277,"byte_end":44309,"line_start":265,"line_end":265,"column_start":5,"column_end":37}},{"value":"serde(rename = \"kty\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44314,"byte_end":44338,"line_start":266,"line_end":266,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44473,"byte_end":44474,"line_start":271,"line_end":271,"column_start":9,"column_end":10},"name":"n","qualname":"::jwk::RSAKeyParameters::n","value":"std::string::String","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" The \"n\" (modulus) parameter contains the modulus value for the RSA\n public key.\n","sig":null,"attributes":[{"value":"/ The \"n\" (modulus) parameter contains the modulus value for the RSA","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44374,"byte_end":44444,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ public key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44449,"byte_end":44464,"line_start":270,"line_end":270,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44590,"byte_end":44591,"line_start":275,"line_end":275,"column_start":9,"column_end":10},"name":"e","qualname":"::jwk::RSAKeyParameters::e","value":"std::string::String","parent":{"krate":0,"index":1288},"children":[],"decl_id":null,"docs":" The \"e\" (exponent) parameter contains the exponent value for the RSA\n public key.\n","sig":null,"attributes":[{"value":"/ The \"e\" (exponent) parameter contains the exponent value for the RSA","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44489,"byte_end":44561,"line_start":273,"line_end":273,"column_start":5,"column_end":77}},{"value":"/ public key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44566,"byte_end":44581,"line_start":274,"line_end":274,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44923,"byte_end":44928,"line_start":284,"line_end":284,"column_start":5,"column_end":10},"name":"Octet","qualname":"::jwk::OctetKeyType::Octet","value":"OctetKeyType::Octet","parent":{"krate":0,"index":1359},"children":[],"decl_id":null,"docs":" Key type value for an Octet symmetric key.\n","sig":null,"attributes":[{"value":"/ Key type value for an Octet symmetric key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44843,"byte_end":44889,"line_start":282,"line_end":282,"column_start":5,"column_end":51}},{"value":"serde(rename = \"oct\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44894,"byte_end":44918,"line_start":283,"line_end":283,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44824,"byte_end":44836,"line_start":281,"line_end":281,"column_start":10,"column_end":22},"name":"OctetKeyType","qualname":"::jwk::OctetKeyType","value":"pub enum OctetKeyType { Octet, }","parent":null,"children":[{"krate":0,"index":1417}],"decl_id":null,"docs":" Key type value for an Octet symmetric key.\n This single value enum is a workaround for Rust not supporting associated constants.\n","sig":null,"attributes":[{"value":"/ Key type value for an Octet symmetric key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44604,"byte_end":44650,"line_start":278,"line_end":278,"column_start":1,"column_end":47}},{"value":"/ This single value enum is a workaround for Rust not supporting associated constants.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44651,"byte_end":44739,"line_start":279,"line_end":279,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45150,"byte_end":45168,"line_start":295,"line_end":295,"column_start":12,"column_end":30},"name":"OctetKeyParameters","qualname":"::jwk::OctetKeyParameters","value":"OctetKeyParameters { key_type, value }","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1420}],"decl_id":null,"docs":" Parameters for an Octet Key\n","sig":null,"attributes":[{"value":"/ Parameters for an Octet Key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45029,"byte_end":45060,"line_start":293,"line_end":293,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45248,"byte_end":45256,"line_start":298,"line_end":298,"column_start":9,"column_end":17},"name":"key_type","qualname":"::jwk::OctetKeyParameters::key_type","value":"jwk::OctetKeyType","parent":{"krate":0,"index":1419},"children":[],"decl_id":null,"docs":" Key type value for an Octet Key\n","sig":null,"attributes":[{"value":"/ Key type value for an Octet Key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45175,"byte_end":45210,"line_start":296,"line_end":296,"column_start":5,"column_end":40}},{"value":"serde(rename = \"kty\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45215,"byte_end":45239,"line_start":297,"line_end":297,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45308,"byte_end":45313,"line_start":300,"line_end":300,"column_start":9,"column_end":14},"name":"value","qualname":"::jwk::OctetKeyParameters::value","value":"std::string::String","parent":{"krate":0,"index":1419},"children":[],"decl_id":null,"docs":" The octet key value\n","sig":null,"attributes":[{"value":"/ The octet key value","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45276,"byte_end":45299,"line_start":299,"line_end":299,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45639,"byte_end":45651,"line_start":309,"line_end":309,"column_start":5,"column_end":17},"name":"OctetKeyPair","qualname":"::jwk::OctetKeyPairType::OctetKeyPair","value":"OctetKeyPairType::OctetKeyPair","parent":{"krate":0,"index":1487},"children":[],"decl_id":null,"docs":" Key type value for an Octet Key Pair.\n","sig":null,"attributes":[{"value":"/ Key type value for an Octet Key Pair.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45564,"byte_end":45605,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"serde(rename = \"OKP\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45610,"byte_end":45634,"line_start":308,"line_end":308,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45541,"byte_end":45557,"line_start":306,"line_end":306,"column_start":10,"column_end":26},"name":"OctetKeyPairType","qualname":"::jwk::OctetKeyPairType","value":"pub enum OctetKeyPairType { OctetKeyPair, }","parent":null,"children":[{"krate":0,"index":1545}],"decl_id":null,"docs":" Key type value for an Octet Key Pair.\n This single value enum is a workaround for Rust not supporting associated constants.\n","sig":null,"attributes":[{"value":"/ Key type value for an Octet Key Pair.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45326,"byte_end":45367,"line_start":303,"line_end":303,"column_start":1,"column_end":42}},{"value":"/ This single value enum is a workaround for Rust not supporting associated constants.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45368,"byte_end":45456,"line_start":304,"line_end":304,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45893,"byte_end":45915,"line_start":320,"line_end":320,"column_start":12,"column_end":34},"name":"OctetKeyPairParameters","qualname":"::jwk::OctetKeyPairParameters","value":"OctetKeyPairParameters { key_type, curve, x }","parent":null,"children":[{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1548}],"decl_id":null,"docs":" Parameters for an Octet Key Pair\n","sig":null,"attributes":[{"value":"/ Parameters for an Octet Key Pair","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45767,"byte_end":45803,"line_start":318,"line_end":318,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1616},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46000,"byte_end":46008,"line_start":323,"line_end":323,"column_start":9,"column_end":17},"name":"key_type","qualname":"::jwk::OctetKeyPairParameters::key_type","value":"jwk::OctetKeyPairType","parent":{"krate":0,"index":1547},"children":[],"decl_id":null,"docs":" Key type value for an Octet Key Pair\n","sig":null,"attributes":[{"value":"/ Key type value for an Octet Key Pair","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45922,"byte_end":45962,"line_start":321,"line_end":321,"column_start":5,"column_end":45}},{"value":"serde(rename = \"kty\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45967,"byte_end":45991,"line_start":322,"line_end":322,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46163,"byte_end":46168,"line_start":327,"line_end":327,"column_start":9,"column_end":14},"name":"curve","qualname":"::jwk::OctetKeyPairParameters::curve","value":"jwk::EllipticCurve","parent":{"krate":0,"index":1547},"children":[],"decl_id":null,"docs":" The \"crv\" (curve) parameter identifies the cryptographic curve used\n with the key.\n","sig":null,"attributes":[{"value":"/ The \"crv\" (curve) parameter identifies the cryptographic curve used","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46032,"byte_end":46103,"line_start":324,"line_end":324,"column_start":5,"column_end":76}},{"value":"/ with the key.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46108,"byte_end":46125,"line_start":325,"line_end":325,"column_start":5,"column_end":22}},{"value":"serde(rename = \"crv\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46130,"byte_end":46154,"line_start":326,"line_end":326,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46258,"byte_end":46259,"line_start":329,"line_end":329,"column_start":9,"column_end":10},"name":"x","qualname":"::jwk::OctetKeyPairParameters::x","value":"std::string::String","parent":{"krate":0,"index":1547},"children":[],"decl_id":null,"docs":" The \"x\" parameter contains the base64 encoded public key\n","sig":null,"attributes":[{"value":"/ The \"x\" parameter contains the base64 encoded public key","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46189,"byte_end":46249,"line_start":328,"line_end":328,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1646},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46429,"byte_end":46442,"line_start":336,"line_end":336,"column_start":5,"column_end":18},"name":"EllipticCurve","qualname":"::jwk::AlgorithmParameters::EllipticCurve","value":"AlgorithmParameters::EllipticCurve(EllipticCurveKeyParameters)","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1649},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46476,"byte_end":46479,"line_start":337,"line_end":337,"column_start":5,"column_end":8},"name":"RSA","qualname":"::jwk::AlgorithmParameters::RSA","value":"AlgorithmParameters::RSA(RSAKeyParameters)","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1652},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46503,"byte_end":46511,"line_start":338,"line_end":338,"column_start":5,"column_end":13},"name":"OctetKey","qualname":"::jwk::AlgorithmParameters::OctetKey","value":"AlgorithmParameters::OctetKey(OctetKeyParameters)","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1655},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46537,"byte_end":46549,"line_start":339,"line_end":339,"column_start":5,"column_end":17},"name":"OctetKeyPair","qualname":"::jwk::AlgorithmParameters::OctetKeyPair","value":"AlgorithmParameters::OctetKeyPair(OctetKeyPairParameters)","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46403,"byte_end":46422,"line_start":335,"line_end":335,"column_start":10,"column_end":29},"name":"AlgorithmParameters","qualname":"::jwk::AlgorithmParameters","value":"pub enum AlgorithmParameters {\n    EllipticCurve(EllipticCurveKeyParameters),\n    RSA(RSAKeyParameters),\n    OctetKey(OctetKeyParameters),\n    OctetKeyPair(OctetKeyPairParameters),\n}","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1652},{"krate":0,"index":1655}],"decl_id":null,"docs":" Algorithm specific parameters\n","sig":null,"attributes":[{"value":"/ Algorithm specific parameters","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46272,"byte_end":46305,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"serde(untagged)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46375,"byte_end":46393,"line_start":334,"line_end":334,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46658,"byte_end":46661,"line_start":343,"line_end":343,"column_start":12,"column_end":15},"name":"Jwk","qualname":"::jwk::Jwk","value":"Jwk { common, algorithm }","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46694,"byte_end":46700,"line_start":345,"line_end":345,"column_start":9,"column_end":15},"name":"common","qualname":"::jwk::Jwk::common","value":"jwk::CommonParameters","parent":{"krate":0,"index":1658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(flatten)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46668,"byte_end":46685,"line_start":344,"line_end":344,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46792,"byte_end":46801,"line_start":348,"line_end":348,"column_start":9,"column_end":18},"name":"algorithm","qualname":"::jwk::Jwk::algorithm","value":"jwk::AlgorithmParameters","parent":{"krate":0,"index":1658},"children":[],"decl_id":null,"docs":" Key algorithm specific parameters\n","sig":null,"attributes":[{"value":"/ Key algorithm specific parameters","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46724,"byte_end":46761,"line_start":346,"line_end":346,"column_start":5,"column_end":42}},{"value":"serde(flatten)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46766,"byte_end":46783,"line_start":347,"line_end":347,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1747},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46911,"byte_end":46917,"line_start":353,"line_end":353,"column_start":12,"column_end":18},"name":"JwkSet","qualname":"::jwk::JwkSet","value":"JwkSet { keys }","parent":null,"children":[{"krate":0,"index":1748}],"decl_id":null,"docs":" A JWK set\n","sig":null,"attributes":[{"value":"/ A JWK set","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46827,"byte_end":46840,"line_start":351,"line_end":351,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46928,"byte_end":46932,"line_start":354,"line_end":354,"column_start":9,"column_end":13},"name":"keys","qualname":"::jwk::JwkSet::keys","value":"std::vec::Vec<jwk::Jwk>","parent":{"krate":0,"index":1747},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":47043,"byte_end":47047,"line_start":359,"line_end":359,"column_start":12,"column_end":16},"name":"find","qualname":"<JwkSet>::find","value":"pub fn find(&Self, &str) -> Option<&Jwk>","parent":null,"children":[],"decl_id":null,"docs":" Find the key in the set that matches the given key id, if any.\n","sig":null,"attributes":[{"value":"/ Find the key in the set that matches the given key id, if any.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46965,"byte_end":47031,"line_start":358,"line_end":358,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1851},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58203,"byte_end":58213,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"Validation","qualname":"::validation::Validation","value":"Validation { required_spec_claims, leeway, validate_exp, validate_nbf, aud, iss, sub, algorithms }","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860}],"decl_id":null,"docs":" Contains the various validations that are applied after decoding a JWT.","sig":null,"attributes":[{"value":"/ Contains the various validations that are applied after decoding a JWT.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":57573,"byte_end":57648,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":57649,"byte_end":57652,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All time validation happen on UTC timestamps as seconds.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":57653,"byte_end":57713,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":57714,"byte_end":57717,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":57718,"byte_end":57729,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ use jsonwebtoken::{Validation, Algorithm};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":57730,"byte_end":57776,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":57777,"byte_end":57780,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let mut validation = Validation::new(Algorithm::HS256);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":57781,"byte_end":57840,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"/ validation.leeway = 5;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":57841,"byte_end":57867,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/ // Setting audience","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":57868,"byte_end":57891,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/ validation.set_audience(&[\"Me\"]); // a single string","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":57892,"byte_end":57948,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/ validation.set_audience(&[\"Me\", \"You\"]); // array of strings","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":57949,"byte_end":58013,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/ // or issuer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58014,"byte_end":58030,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/ validation.set_issuer(&[\"Me\"]); // a single string","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58031,"byte_end":58085,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ validation.set_issuer(&[\"Me\", \"You\"]); // array of strings","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58086,"byte_end":58148,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58149,"byte_end":58156,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58608,"byte_end":58628,"line_start":37,"line_end":37,"column_start":9,"column_end":29},"name":"required_spec_claims","qualname":"::validation::Validation::required_spec_claims","value":"std::collections::HashSet<std::string::String>","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Which claims are required to be present before starting the validation.\n This does not interact with the various `validate_*`. If you remove `exp` from that list, you still need\n to set `validate_exp` to `false`.\n The only value that will be used are \"exp\", \"nbf\", \"aud\", \"iss\", \"sub\". Anything else will be ignored.","sig":null,"attributes":[{"value":"/ Which claims are required to be present before starting the validation.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58220,"byte_end":58295,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ This does not interact with the various `validate_*`. If you remove `exp` from that list, you still need","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58300,"byte_end":58408,"line_start":32,"line_end":32,"column_start":5,"column_end":113}},{"value":"/ to set `validate_exp` to `false`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58413,"byte_end":58450,"line_start":33,"line_end":33,"column_start":5,"column_end":42}},{"value":"/ The only value that will be used are \"exp\", \"nbf\", \"aud\", \"iss\", \"sub\". Anything else will be ignored.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58455,"byte_end":58561,"line_start":34,"line_end":34,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58566,"byte_end":58569,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Defaults to `{\"exp\"}`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58574,"byte_end":58599,"line_start":36,"line_end":36,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1853},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58795,"byte_end":58801,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"name":"leeway","qualname":"::validation::Validation::leeway","value":"u64","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Add some leeway (in seconds) to the `exp` and `nbf` validation to\n account for clock skew.","sig":null,"attributes":[{"value":"/ Add some leeway (in seconds) to the `exp` and `nbf` validation to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58651,"byte_end":58720,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ account for clock skew.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58725,"byte_end":58752,"line_start":39,"line_end":39,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58757,"byte_end":58760,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Defaults to `60`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58765,"byte_end":58786,"line_start":41,"line_end":41,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58977,"byte_end":58989,"line_start":48,"line_end":48,"column_start":9,"column_end":21},"name":"validate_exp","qualname":"::validation::Validation::validate_exp","value":"bool","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Whether to validate the `exp` field.","sig":null,"attributes":[{"value":"/ Whether to validate the `exp` field.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58812,"byte_end":58852,"line_start":43,"line_end":43,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58857,"byte_end":58860,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ It will return an error if the time in the `exp` field is past.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58865,"byte_end":58932,"line_start":45,"line_end":45,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58937,"byte_end":58940,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":58945,"byte_end":58968,"line_start":47,"line_end":47,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59191,"byte_end":59203,"line_start":54,"line_end":54,"column_start":9,"column_end":21},"name":"validate_nbf","qualname":"::validation::Validation::validate_nbf","value":"bool","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" Whether to validate the `nbf` field.","sig":null,"attributes":[{"value":"/ Whether to validate the `nbf` field.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59001,"byte_end":59041,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59046,"byte_end":59049,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ It will return an error if the current timestamp is before the time in the `nbf` field.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59054,"byte_end":59145,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59150,"byte_end":59153,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59158,"byte_end":59182,"line_start":53,"line_end":53,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59442,"byte_end":59445,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"name":"aud","qualname":"::validation::Validation::aud","value":"std::option::Option<std::collections::HashSet<std::string::String>>","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" If it contains a value, the validation will check that the `aud` field is a member of the\n audience provided and will error otherwise.\n Use `set_audience` to set it","sig":null,"attributes":[{"value":"/ If it contains a value, the validation will check that the `aud` field is a member of the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59215,"byte_end":59308,"line_start":55,"line_end":55,"column_start":5,"column_end":98}},{"value":"/ audience provided and will error otherwise.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59313,"byte_end":59360,"line_start":56,"line_end":56,"column_start":5,"column_end":52}},{"value":"/ Use `set_audience` to set it","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59365,"byte_end":59397,"line_start":57,"line_end":57,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59402,"byte_end":59405,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Defaults to `None`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59410,"byte_end":59433,"line_start":59,"line_end":59,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59696,"byte_end":59699,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"name":"iss","qualname":"::validation::Validation::iss","value":"std::option::Option<std::collections::HashSet<std::string::String>>","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" If it contains a value, the validation will check that the `iss` field is a member of the\n iss provided and will error otherwise.\n Use `set_issuer` to set it","sig":null,"attributes":[{"value":"/ If it contains a value, the validation will check that the `iss` field is a member of the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59476,"byte_end":59569,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ iss provided and will error otherwise.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59574,"byte_end":59616,"line_start":62,"line_end":62,"column_start":5,"column_end":47}},{"value":"/ Use `set_issuer` to set it","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59621,"byte_end":59651,"line_start":63,"line_end":63,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59656,"byte_end":59659,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Defaults to `None`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59664,"byte_end":59687,"line_start":65,"line_end":65,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1858},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59915,"byte_end":59918,"line_start":71,"line_end":71,"column_start":9,"column_end":12},"name":"sub","qualname":"::validation::Validation::sub","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" If it contains a value, the validation will check that the `sub` field is the same as the\n one provided and will error otherwise.","sig":null,"attributes":[{"value":"/ If it contains a value, the validation will check that the `sub` field is the same as the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59730,"byte_end":59823,"line_start":67,"line_end":67,"column_start":5,"column_end":98}},{"value":"/ one provided and will error otherwise.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59828,"byte_end":59870,"line_start":68,"line_end":68,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59875,"byte_end":59878,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Defaults to `None`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59883,"byte_end":59906,"line_start":70,"line_end":70,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1859},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":60156,"byte_end":60166,"line_start":76,"line_end":76,"column_start":9,"column_end":19},"name":"algorithms","qualname":"::validation::Validation::algorithms","value":"std::vec::Vec<algorithms::Algorithm>","parent":{"krate":0,"index":1851},"children":[],"decl_id":null,"docs":" The validation will check that the `alg` of the header is contained\n in the ones provided and will error otherwise. Will error if it is empty.","sig":null,"attributes":[{"value":"/ The validation will check that the `alg` of the header is contained","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":59940,"byte_end":60011,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ in the ones provided and will error otherwise. Will error if it is empty.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":60016,"byte_end":60093,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":60098,"byte_end":60101,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Defaults to `vec![Algorithm::HS256]`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":60106,"byte_end":60147,"line_start":75,"line_end":75,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":60401,"byte_end":60404,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Validation>::new","value":"pub fn new(Algorithm) -> Validation","parent":null,"children":[],"decl_id":null,"docs":" Create a default validation setup allowing the given alg\n","sig":null,"attributes":[{"value":"/ Create a default validation setup allowing the given alg","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":60329,"byte_end":60389,"line_start":83,"line_end":83,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":61019,"byte_end":61031,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"name":"set_audience","qualname":"<Validation>::set_audience","value":"pub fn set_audience<T: ToString>(&mut Self, &[T])","parent":null,"children":[],"decl_id":null,"docs":" `aud` is a collection of one or more acceptable audience members\n The simple usage is `set_audience(&[\"some aud name\"])`\n","sig":null,"attributes":[{"value":"/ `aud` is a collection of one or more acceptable audience members","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":60876,"byte_end":60944,"line_start":104,"line_end":104,"column_start":5,"column_end":73}},{"value":"/ The simple usage is `set_audience(&[\"some aud name\"])`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":60949,"byte_end":61007,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":61293,"byte_end":61303,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"set_issuer","qualname":"<Validation>::set_issuer","value":"pub fn set_issuer<T: ToString>(&mut Self, &[T])","parent":null,"children":[],"decl_id":null,"docs":" `iss` is a collection of one or more acceptable issuers members\n The simple usage is `set_issuer(&[\"some iss name\"])`\n","sig":null,"attributes":[{"value":"/ `iss` is a collection of one or more acceptable issuers members","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":61153,"byte_end":61220,"line_start":110,"line_end":110,"column_start":5,"column_end":72}},{"value":"/ The simple usage is `set_issuer(&[\"some iss name\"])`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":61225,"byte_end":61281,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":61801,"byte_end":61825,"line_start":121,"line_end":121,"column_start":12,"column_end":36},"name":"set_required_spec_claims","qualname":"<Validation>::set_required_spec_claims","value":"pub fn set_required_spec_claims<T: ToString>(&mut Self, &[T])","parent":null,"children":[],"decl_id":null,"docs":" Which claims are required to be present for this JWT to be considered valid.\n The only values that will be considered are \"exp\", \"nbf\", \"aud\", \"iss\", \"sub\".\n The simple usage is `set_required_spec_claims(&[\"exp\", \"nbf\"])`.\n If you want to have an empty set, do not use this function - set an empty set on the struct\n param directly.\n","sig":null,"attributes":[{"value":"/ Which claims are required to be present for this JWT to be considered valid.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":61425,"byte_end":61505,"line_start":116,"line_end":116,"column_start":5,"column_end":85}},{"value":"/ The only values that will be considered are \"exp\", \"nbf\", \"aud\", \"iss\", \"sub\".","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":61510,"byte_end":61592,"line_start":117,"line_end":117,"column_start":5,"column_end":87}},{"value":"/ The simple usage is `set_required_spec_claims(&[\"exp\", \"nbf\"])`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":61597,"byte_end":61665,"line_start":118,"line_end":118,"column_start":5,"column_end":73}},{"value":"/ If you want to have an empty set, do not use this function - set an empty set on the struct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":61670,"byte_end":61765,"line_start":119,"line_end":119,"column_start":5,"column_end":100}},{"value":"/ param directly.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":61770,"byte_end":61789,"line_start":120,"line_end":120,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":62197,"byte_end":62234,"line_start":128,"line_end":128,"column_start":12,"column_end":49},"name":"insecure_disable_signature_validation","qualname":"<Validation>::insecure_disable_signature_validation","value":"pub fn insecure_disable_signature_validation(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Whether to validate the JWT cryptographic signature\n Very insecure to turn that off, only do it if you know what you're doing.\n With this flag turned off, you should not trust any of the values of the claims.\n","sig":null,"attributes":[{"value":"/ Whether to validate the JWT cryptographic signature","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":61959,"byte_end":62014,"line_start":125,"line_end":125,"column_start":5,"column_end":60}},{"value":"/ Very insecure to turn that off, only do it if you know what you're doing.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":62019,"byte_end":62096,"line_start":126,"line_end":126,"column_start":5,"column_end":82}},{"value":"/ With this flag turned off, you should not trust any of the values of the claims.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":62101,"byte_end":62185,"line_start":127,"line_end":127,"column_start":5,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":474},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":62463,"byte_end":62484,"line_start":140,"line_end":140,"column_start":8,"column_end":29},"name":"get_current_timestamp","qualname":"::validation::get_current_timestamp","value":"pub fn get_current_timestamp() -> u64","parent":null,"children":[],"decl_id":null,"docs":" Gets the current timestamp in the format JWT expect\n","sig":null,"attributes":[{"value":"/ Gets the current timestamp in the format JWT expect","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":62400,"byte_end":62455,"line_start":139,"line_end":139,"column_start":1,"column_end":56}}]}],"impls":[{"id":4,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1679,"byte_end":1688,"line_start":47,"line_end":47,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1769,"byte_end":1778,"line_start":53,"line_end":53,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":2490,"byte_end":2499,"line_start":74,"line_end":74,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":13704,"byte_end":13715,"line_start":47,"line_end":47,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":20821,"byte_end":20832,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25507,"byte_end":25512,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27886,"byte_end":27891,"line_start":83,"line_end":83,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":28959,"byte_end":28964,"line_start":109,"line_end":109,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":30147,"byte_end":30156,"line_start":135,"line_end":135,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":30373,"byte_end":30382,"line_start":142,"line_end":142,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":30422,"byte_end":30427,"line_start":144,"line_end":144,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":30563,"byte_end":30568,"line_start":150,"line_end":150,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":30721,"byte_end":30726,"line_start":156,"line_end":156,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":30878,"byte_end":30883,"line_start":162,"line_end":162,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":31035,"byte_end":31040,"line_start":168,"line_end":168,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":31180,"byte_end":31185,"line_start":174,"line_end":174,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":34082,"byte_end":34088,"line_start":68,"line_end":68,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":35073,"byte_end":35079,"line_start":101,"line_end":101,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":36043,"byte_end":36055,"line_start":22,"line_end":22,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":36440,"byte_end":36452,"line_start":37,"line_end":37,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":36641,"byte_end":36660,"line_start":43,"line_end":43,"column_start":40,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37945,"byte_end":37958,"line_start":89,"line_end":89,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":38649,"byte_end":38662,"line_start":110,"line_end":110,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":38852,"byte_end":38872,"line_start":116,"line_end":116,"column_start":40,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42458,"byte_end":42478,"line_start":203,"line_end":203,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43008,"byte_end":43021,"line_start":224,"line_end":224,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44063,"byte_end":44073,"line_start":256,"line_end":256,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44950,"byte_end":44962,"line_start":287,"line_end":287,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45673,"byte_end":45689,"line_start":312,"line_end":312,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46952,"byte_end":46958,"line_start":357,"line_end":357,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","byte_start":48570,"byte_end":48583,"line_start":51,"line_end":51,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/serialization.rs","byte_start":56945,"byte_end":56965,"line_start":26,"line_end":26,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":60312,"byte_end":60322,"line_start":82,"line_end":82,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":62315,"byte_end":62325,"line_start":133,"line_end":133,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":63142,"byte_end":63150,"line_start":164,"line_end":164,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":63523,"byte_end":63531,"line_start":175,"line_end":175,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":64307,"byte_end":64328,"line_start":200,"line_end":200,"column_start":35,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":67242,"byte_end":67253,"line_start":286,"line_end":286,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":227,"byte_end":233,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":31}},{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":343,"byte_end":349,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":234}},{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/lib.rs","byte_start":371,"byte_end":374,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":303}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1679,"byte_end":1688,"line_start":47,"line_end":47,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":1769,"byte_end":1778,"line_start":53,"line_end":53,"column_start":18,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":11937}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/algorithms.rs","byte_start":2490,"byte_end":2499,"line_start":74,"line_end":74,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/decoding.rs","byte_start":13704,"byte_end":13715,"line_start":47,"line_end":47,"column_start":6,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/encoding.rs","byte_start":20821,"byte_end":20832,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":25507,"byte_end":25512,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":27886,"byte_end":27891,"line_start":83,"line_end":83,"column_start":19,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":735},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":28959,"byte_end":28964,"line_start":109,"line_end":109,"column_start":23,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":30147,"byte_end":30156,"line_start":135,"line_end":135,"column_start":20,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":749},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":30373,"byte_end":30382,"line_start":142,"line_end":142,"column_start":13,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":749},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":30422,"byte_end":30427,"line_start":144,"line_end":144,"column_start":36,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":30563,"byte_end":30568,"line_start":150,"line_end":150,"column_start":34,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":30721,"byte_end":30726,"line_start":156,"line_end":156,"column_start":45,"column_end":50},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":30878,"byte_end":30883,"line_start":162,"line_end":162,"column_start":43,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":31035,"byte_end":31040,"line_start":168,"line_end":168,"column_start":43,"column_end":48},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/errors.rs","byte_start":31180,"byte_end":31185,"line_start":174,"line_end":174,"column_start":26,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":735},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":34082,"byte_end":34088,"line_start":68,"line_end":68,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/header.rs","byte_start":35073,"byte_end":35079,"line_start":101,"line_end":101,"column_start":18,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":798},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":36043,"byte_end":36055,"line_start":22,"line_end":22,"column_start":20,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":885},"to":{"krate":18,"index":2100}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":36440,"byte_end":36452,"line_start":37,"line_end":37,"column_start":32,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":885},"to":{"krate":18,"index":1559}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":36641,"byte_end":36660,"line_start":43,"line_end":43,"column_start":40,"column_end":59},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":333},"to":{"krate":18,"index":1645}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":37945,"byte_end":37958,"line_start":89,"line_end":89,"column_start":20,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":907},"to":{"krate":18,"index":2100}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":38649,"byte_end":38662,"line_start":110,"line_end":110,"column_start":32,"column_end":45},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":907},"to":{"krate":18,"index":1559}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":38852,"byte_end":38872,"line_start":116,"line_end":116,"column_start":40,"column_end":60},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":348},"to":{"krate":18,"index":1645}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":42458,"byte_end":42478,"line_start":203,"line_end":203,"column_start":18,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1027},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":43008,"byte_end":43021,"line_start":224,"line_end":224,"column_start":18,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44063,"byte_end":44073,"line_start":256,"line_end":256,"column_start":18,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":44950,"byte_end":44962,"line_start":287,"line_end":287,"column_start":18,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":45673,"byte_end":45689,"line_start":312,"line_end":312,"column_start":18,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1487},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/jwk.rs","byte_start":46952,"byte_end":46958,"line_start":357,"line_end":357,"column_start":6,"column_end":12},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/pem/decoder.rs","byte_start":48570,"byte_end":48583,"line_start":51,"line_end":51,"column_start":6,"column_end":19},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/serialization.rs","byte_start":56945,"byte_end":56965,"line_start":26,"line_end":26,"column_start":6,"column_end":26},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":60312,"byte_end":60322,"line_start":82,"line_end":82,"column_start":6,"column_end":16},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":62315,"byte_end":62325,"line_start":133,"line_end":133,"column_start":18,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1851},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":63142,"byte_end":63150,"line_start":164,"line_end":164,"column_start":53,"column_end":61},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1974},"to":{"krate":18,"index":1559}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":63523,"byte_end":63531,"line_start":175,"line_end":175,"column_start":21,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":64307,"byte_end":64328,"line_start":200,"line_end":200,"column_start":35,"column_end":56},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2018},"to":{"krate":2,"index":2615}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/jsonwebtoken-8.1.0/src/validation.rs","byte_start":67242,"byte_end":67253,"line_start":286,"line_end":286,"column_start":32,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":492},"to":{"krate":18,"index":1645}}]}