{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12","program":"/Users/yinheng/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tower","--edition=2018","/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"__common\"","--cfg","feature=\"buffer\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-util\"","--cfg","feature=\"log\"","--cfg","feature=\"make\"","--cfg","feature=\"pin-project\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"tokio\"","--cfg","feature=\"tokio-util\"","--cfg","feature=\"tracing\"","--cfg","feature=\"util\"","-C","metadata=4137223d678ba498","-C","extra-filename=-4137223d678ba498","--out-dir","/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps","-L","dependency=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps","--extern","futures_core=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libfutures_core-106e15baab8a2ca1.rmeta","--extern","futures_util=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libfutures_util-5235c91d772f7114.rmeta","--extern","pin_project=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libpin_project-e266d9dcb86bb48f.rmeta","--extern","pin_project_lite=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libpin_project_lite-7d54496226481840.rmeta","--extern","tokio=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libtokio-57e91d3f0454f7f0.rmeta","--extern","tokio_util=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libtokio_util-fa72a198f90a3afc.rmeta","--extern","tower_layer=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libtower_layer-751cfab64deb13ee.rmeta","--extern","tower_service=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libtower_service-4d891f67893f1b4c.rmeta","--extern","tracing=/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libtracing-7c91966d52bd3b7b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/yinheng/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/yinheng/Desktop/code/node/rs/axum_live/target/rls/debug/deps/libtower-4137223d678ba498.rmeta"},"prelude":{"crate_id":{"name":"tower","disambiguator":[1851985459275821038,0]},"crate_root":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src","external_crates":[{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/future.rs","num":18,"id":{"name":"futures_core","disambiguator":[11412068890079604383,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/future.rs","num":19,"id":{"name":"pin_project_lite","disambiguator":[5807963244218678231,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","num":20,"id":{"name":"tower_layer","disambiguator":[4625700010173909392,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","num":21,"id":{"name":"tower_service","disambiguator":[2437430539056043344,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":22,"id":{"name":"tokio","disambiguator":[18278344348290840659,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":23,"id":{"name":"parking_lot","disambiguator":[10864652255581104535,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":24,"id":{"name":"lock_api","disambiguator":[15389964729237893029,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":25,"id":{"name":"scopeguard","disambiguator":[1332155161354514573,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":26,"id":{"name":"parking_lot_core","disambiguator":[8691540976837107899,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":27,"id":{"name":"smallvec","disambiguator":[1871165282145789956,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":28,"id":{"name":"cfg_if","disambiguator":[10518978035588998298,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":29,"id":{"name":"libc","disambiguator":[17030695270727625336,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":30,"id":{"name":"mio","disambiguator":[16130360911497090505,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":31,"id":{"name":"log","disambiguator":[10572815355081624902,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":32,"id":{"name":"bytes","disambiguator":[5538362839127110271,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":33,"id":{"name":"once_cell","disambiguator":[14287461864632295793,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":34,"id":{"name":"tokio_macros","disambiguator":[15921793921485745312,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":35,"id":{"name":"memchr","disambiguator":[5469395175890932129,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":36,"id":{"name":"socket2","disambiguator":[14012214929124174190,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":37,"id":{"name":"num_cpus","disambiguator":[3721463582774300622,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/message.rs","num":38,"id":{"name":"signal_hook_registry","disambiguator":[1660904548198753070,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","num":39,"id":{"name":"tokio_util","disambiguator":[11788697907787223005,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","num":40,"id":{"name":"futures_sink","disambiguator":[5117058820761181526,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","num":41,"id":{"name":"futures_util","disambiguator":[15109391805013078574,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","num":42,"id":{"name":"pin_utils","disambiguator":[7227890016324364756,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","num":43,"id":{"name":"futures_task","disambiguator":[3728434401353584928,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","num":44,"id":{"name":"pin_project","disambiguator":[2279937820946714534,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","num":45,"id":{"name":"pin_project_internal","disambiguator":[5211553352299108366,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","num":46,"id":{"name":"tracing","disambiguator":[14894745910839266632,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","num":47,"id":{"name":"tracing_core","disambiguator":[8915548139837143101,0]}},{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","num":48,"id":{"name":"lazy_static","disambiguator":[9562277284821252080,0]}}],"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":0,"byte_end":9561,"line_start":1,"line_end":242,"column_start":1,"column_end":62}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":88},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12389,"byte_end":12400,"line_start":46,"line_end":46,"column_start":22,"column_end":33},"alias_span":null,"name":"BufferLayer","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":1955},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12425,"byte_end":12431,"line_start":47,"line_end":47,"column_start":24,"column_end":30},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":290},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/mod.rs","byte_start":35146,"byte_end":35160,"line_start":6,"line_end":6,"column_start":32,"column_end":46},"alias_span":null,"name":"MakeConnection","value":"","parent":{"krate":0,"index":265}},{"kind":"Use","ref_id":{"krate":0,"index":2531},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/mod.rs","byte_start":35198,"byte_end":35204,"line_start":7,"line_end":7,"column_start":37,"column_end":43},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":265}},{"kind":"Use","ref_id":{"krate":0,"index":408},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/mod.rs","byte_start":35235,"byte_end":35244,"line_start":8,"line_end":8,"column_start":30,"column_end":39},"alias_span":null,"name":"AsService","value":"","parent":{"krate":0,"index":265}},{"kind":"Use","ref_id":{"krate":0,"index":385},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/mod.rs","byte_start":35246,"byte_end":35257,"line_start":8,"line_end":8,"column_start":41,"column_end":52},"alias_span":null,"name":"IntoService","value":"","parent":{"krate":0,"index":265}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/mod.rs","byte_start":35259,"byte_end":35270,"line_start":8,"line_end":8,"column_start":54,"column_end":65},"alias_span":null,"name":"MakeService","value":"","parent":{"krate":0,"index":265}},{"kind":"Use","ref_id":{"krate":0,"index":2552},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/mod.rs","byte_start":35354,"byte_end":35366,"line_start":13,"line_end":13,"column_start":42,"column_end":54},"alias_span":null,"name":"SharedFuture","value":"","parent":{"krate":0,"index":444}},{"kind":"Use","ref_id":{"krate":0,"index":2585},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48218,"byte_end":48225,"line_start":24,"line_end":24,"column_start":16,"column_end":23},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":2643},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48227,"byte_end":48239,"line_start":24,"line_end":24,"column_start":25,"column_end":37},"alias_span":null,"name":"AndThenLayer","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48254,"byte_end":48262,"line_start":25,"line_end":25,"column_start":13,"column_end":21},"alias_span":null,"name":"BoxLayer","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":611},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48264,"byte_end":48274,"line_start":25,"line_end":25,"column_start":23,"column_end":33},"alias_span":null,"name":"BoxService","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48276,"byte_end":48292,"line_start":25,"line_end":25,"column_start":35,"column_end":51},"alias_span":null,"name":"UnsyncBoxService","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":746},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48312,"byte_end":48327,"line_start":26,"line_end":26,"column_start":18,"column_end":33},"alias_span":null,"name":"BoxCloneService","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":2864},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48341,"byte_end":48347,"line_start":27,"line_end":27,"column_start":13,"column_end":19},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":1008},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48370,"byte_end":48384,"line_start":28,"line_end":28,"column_start":22,"column_end":36},"alias_span":null,"name":"future_service","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":2873},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48386,"byte_end":48399,"line_start":28,"line_end":28,"column_start":38,"column_end":51},"alias_span":null,"name":"FutureService","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":2894},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48416,"byte_end":48422,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":2903},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48424,"byte_end":48435,"line_start":29,"line_end":29,"column_start":23,"column_end":34},"alias_span":null,"name":"MapErrLayer","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":3128},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48455,"byte_end":48464,"line_start":30,"line_end":30,"column_start":18,"column_end":27},"alias_span":null,"name":"MapFuture","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":3137},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48466,"byte_end":48480,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"alias_span":null,"name":"MapFutureLayer","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":2966},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48501,"byte_end":48511,"line_start":31,"line_end":31,"column_start":19,"column_end":29},"alias_span":null,"name":"MapRequest","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":2975},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48513,"byte_end":48528,"line_start":31,"line_end":31,"column_start":31,"column_end":46},"alias_span":null,"name":"MapRequestLayer","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":2984},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48550,"byte_end":48561,"line_start":32,"line_end":32,"column_start":20,"column_end":31},"alias_span":null,"name":"MapResponse","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":2993},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48563,"byte_end":48579,"line_start":32,"line_end":32,"column_start":33,"column_end":49},"alias_span":null,"name":"MapResponseLayer","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":3056},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48599,"byte_end":48608,"line_start":33,"line_end":33,"column_start":18,"column_end":27},"alias_span":null,"name":"MapResult","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":3065},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48610,"byte_end":48624,"line_start":33,"line_end":33,"column_start":29,"column_end":43},"alias_span":null,"name":"MapResultLayer","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":3143},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48640,"byte_end":48647,"line_start":34,"line_end":34,"column_start":14,"column_end":21},"alias_span":null,"name":"Oneshot","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":3274},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48663,"byte_end":48671,"line_start":35,"line_end":35,"column_start":15,"column_end":23},"alias_span":null,"name":"Optional","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":1456},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48685,"byte_end":48690,"line_start":36,"line_end":36,"column_start":13,"column_end":18},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":1462},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48692,"byte_end":48700,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"alias_span":null,"name":"ReadyAnd","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":1435},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48702,"byte_end":48714,"line_start":36,"line_end":36,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadyOneshot","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":1503},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48734,"byte_end":48744,"line_start":37,"line_end":37,"column_start":18,"column_end":28},"alias_span":null,"name":"service_fn","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":3280},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48746,"byte_end":48755,"line_start":37,"line_end":37,"column_start":30,"column_end":39},"alias_span":null,"name":"ServiceFn","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":3288},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48769,"byte_end":48773,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":3297},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48775,"byte_end":48784,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"alias_span":null,"name":"ThenLayer","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":2724},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48816,"byte_end":48823,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"alias_span":null,"name":"CallAll","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":2769},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48825,"byte_end":48841,"line_start":41,"line_end":41,"column_start":35,"column_end":51},"alias_span":null,"name":"CallAllUnordered","value":"","parent":{"krate":0,"index":448}},{"kind":"Use","ref_id":{"krate":0,"index":1335},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48971,"byte_end":48976,"line_start":49,"line_end":49,"column_start":30,"column_end":35},"alias_span":null,"name":"optional","value":"","parent":{"krate":0,"index":1685}},{"kind":"Use","ref_id":{"krate":0,"index":2594},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49061,"byte_end":49074,"line_start":55,"line_end":55,"column_start":30,"column_end":43},"alias_span":null,"name":"AndThenFuture","value":"","parent":{"krate":0,"index":1689}},{"kind":"Use","ref_id":{"krate":0,"index":2925},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49104,"byte_end":49116,"line_start":56,"line_end":56,"column_start":29,"column_end":41},"alias_span":null,"name":"MapErrFuture","value":"","parent":{"krate":0,"index":1689}},{"kind":"Use","ref_id":{"krate":0,"index":3015},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49151,"byte_end":49168,"line_start":57,"line_end":57,"column_start":34,"column_end":51},"alias_span":null,"name":"MapResponseFuture","value":"","parent":{"krate":0,"index":1689}},{"kind":"Use","ref_id":{"krate":0,"index":3087},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49201,"byte_end":49216,"line_start":58,"line_end":58,"column_start":32,"column_end":47},"alias_span":null,"name":"MapResultFuture","value":"","parent":{"krate":0,"index":1689}},{"kind":"Use","ref_id":{"krate":0,"index":1348},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49247,"byte_end":49253,"line_start":59,"line_end":59,"column_start":30,"column_end":36},"alias_span":null,"name":"optional","value":"","parent":{"krate":0,"index":1689}},{"kind":"Use","ref_id":{"krate":0,"index":3322},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49292,"byte_end":49302,"line_start":60,"line_end":60,"column_start":26,"column_end":36},"alias_span":null,"name":"ThenFuture","value":"","parent":{"krate":0,"index":1689}},{"kind":"Use","ref_id":{"krate":20,"index":25},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174315,"byte_end":174323,"line_start":5,"line_end":5,"column_start":23,"column_end":31},"alias_span":null,"name":"layer_fn","value":"","parent":{"krate":0,"index":1822}},{"kind":"Use","ref_id":{"krate":20,"index":71},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174325,"byte_end":174330,"line_start":5,"line_end":5,"column_start":33,"column_end":38},"alias_span":null,"name":"Layer","value":"","parent":{"krate":0,"index":1822}},{"kind":"Use","ref_id":{"krate":20,"index":87},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174332,"byte_end":174339,"line_start":5,"line_end":5,"column_start":40,"column_end":47},"alias_span":null,"name":"LayerFn","value":"","parent":{"krate":0,"index":1822}},{"kind":"Use","ref_id":{"krate":20,"index":81},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174539,"byte_end":174547,"line_start":13,"line_end":13,"column_start":27,"column_end":35},"alias_span":null,"name":"Identity","value":"","parent":{"krate":0,"index":1833}},{"kind":"Use","ref_id":{"krate":20,"index":95},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174549,"byte_end":174554,"line_start":13,"line_end":13,"column_start":37,"column_end":42},"alias_span":null,"name":"Stack","value":"","parent":{"krate":0,"index":1833}},{"kind":"Use","ref_id":{"krate":0,"index":1503},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":9097,"byte_end":9107,"line_start":223,"line_end":223,"column_start":22,"column_end":32},"alias_span":null,"name":"service_fn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1708},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":9109,"byte_end":9119,"line_start":223,"line_end":223,"column_start":34,"column_end":44},"alias_span":null,"name":"ServiceExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3371},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":9162,"byte_end":9176,"line_start":226,"line_end":226,"column_start":25,"column_end":39},"alias_span":null,"name":"ServiceBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":9287,"byte_end":9298,"line_start":230,"line_end":230,"column_start":22,"column_end":33},"alias_span":null,"name":"MakeService","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":71},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":9336,"byte_end":9341,"line_start":232,"line_end":232,"column_start":22,"column_end":27},"alias_span":null,"name":"Layer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":13},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":9381,"byte_end":9388,"line_start":234,"line_end":234,"column_start":24,"column_end":31},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":0,"byte_end":9561,"line_start":1,"line_end":242,"column_start":1,"column_end":62},"name":"","qualname":"::","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":5},{"krate":0,"index":265},{"krate":0,"index":448},{"krate":0,"index":1748},{"krate":0,"index":1822},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1863}],"decl_id":null,"docs":" `async fn(Request) -> Result<Response, Error>`","sig":null,"attributes":[{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":0,"byte_end":106,"line_start":1,"line_end":6,"column_start":1,"column_end":3}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":107,"byte_end":130,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"allow(elided_lifetimes_in_paths, clippy :: type_complexity)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":131,"byte_end":192,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ `async fn(Request) -> Result<Response, Error>`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":332,"byte_end":382,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":383,"byte_end":386,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":387,"byte_end":401,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":402,"byte_end":405,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tower is a library of modular and reusable components for building","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":406,"byte_end":476,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ robust networking clients and servers.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":477,"byte_end":519,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":520,"byte_end":523,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tower provides a simple core abstraction, the [`Service`] trait, which","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":524,"byte_end":598,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ represents an asynchronous function taking a request and returning either a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":599,"byte_end":678,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ response or an error. This abstraction can be used to model both clients and","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":679,"byte_end":759,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ servers.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":760,"byte_end":772,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":773,"byte_end":776,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Generic components, like [timeouts], [rate limiting], and [load balancing],","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":777,"byte_end":856,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ can be modeled as [`Service`]s that wrap some inner service and apply","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":857,"byte_end":930,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ additional behavior before or after the inner service is called. This allows","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":931,"byte_end":1011,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ implementing these components in a protocol-agnostic, composable way. Typically,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1012,"byte_end":1096,"line_start":28,"line_end":28,"column_start":1,"column_end":85}},{"value":"/ such services are referred to as _middleware_.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1097,"byte_end":1147,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1148,"byte_end":1151,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ An additional abstraction, the [`Layer`] trait, is used to compose","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1152,"byte_end":1222,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ middleware with [`Service`]s. If a [`Service`] can be thought of as an","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1223,"byte_end":1297,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ asynchronous function from a request type to a response type, a [`Layer`] is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1298,"byte_end":1378,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ a function taking a [`Service`] of one type and returning a [`Service`] of a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1379,"byte_end":1459,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ different type. The [`ServiceBuilder`] type is used to add middleware to a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1460,"byte_end":1538,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ service by composing it with multiple [`Layer`]s.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1539,"byte_end":1592,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1593,"byte_end":1596,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## The Tower Ecosystem","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1597,"byte_end":1623,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1624,"byte_end":1627,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Tower is made up of the following crates:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1628,"byte_end":1673,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1674,"byte_end":1677,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ * [`tower`] (this crate)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1678,"byte_end":1706,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ * [`tower-service`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1707,"byte_end":1730,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ * [`tower-layer`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1731,"byte_end":1752,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ * [`tower-test`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1753,"byte_end":1773,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1774,"byte_end":1777,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Since the [`Service`] and [`Layer`] traits are important integration points","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1778,"byte_end":1857,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ for all libraries using Tower, they are kept as stable as possible, and","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1858,"byte_end":1933,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/ breaking changes are made rarely. Therefore, they are defined in separate","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":1934,"byte_end":2011,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ crates, [`tower-service`] and [`tower-layer`]. This crate contains","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2012,"byte_end":2082,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ re-exports of those core traits, implementations of commonly-used","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2083,"byte_end":2152,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ middleware, and [utilities] for working with [`Service`]s and [`Layer`]s.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2153,"byte_end":2230,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ Finally, the [`tower-test`] crate provides tools for testing programs using","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2231,"byte_end":2310,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ Tower.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2311,"byte_end":2321,"line_start":54,"line_end":54,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2322,"byte_end":2325,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2326,"byte_end":2337,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2338,"byte_end":2341,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Tower provides an abstraction layer, and generic implementations of various","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2342,"byte_end":2421,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ middleware. This means that the `tower` crate on its own does *not* provide","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2422,"byte_end":2501,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ a working implementation of a network client or server. Instead, Tower's","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2502,"byte_end":2578,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"/ [`Service` trait][`Service`] provides an integration point between","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2579,"byte_end":2649,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ application code, libraries providing middleware implementations, and","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2650,"byte_end":2723,"line_start":62,"line_end":62,"column_start":1,"column_end":74}},{"value":"/ libraries that implement servers and/or clients for various network","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2724,"byte_end":2795,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/ protocols.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2796,"byte_end":2810,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2811,"byte_end":2814,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Depending on your particular use case, you might use Tower in several ways:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2815,"byte_end":2894,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2895,"byte_end":2898,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ * **Implementing application logic** for a networked program. You might","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2899,"byte_end":2974,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/   use the [`Service`] trait to model your application's behavior, and use","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":2975,"byte_end":3052,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/   the middleware [provided by this crate](#modules) and by other libraries","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3053,"byte_end":3131,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/   to add functionality to clients and servers provided by one or more","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3132,"byte_end":3205,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/   protocol implementations.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3206,"byte_end":3237,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/ * **Implementing middleware** to add custom behavior to network clients and","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3238,"byte_end":3317,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/   servers in a reusable manner. This might be general-purpose middleware","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3318,"byte_end":3394,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/   (and if it is, please consider releasing your middleware as a library for","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3395,"byte_end":3474,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/   other Tower users!) or application-specific behavior that needs to be","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3475,"byte_end":3550,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/   shared between multiple clients or servers.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3551,"byte_end":3600,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ * **Implementing a network protocol**. Libraries that implement network","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3601,"byte_end":3676,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/   protocols (such as HTTP) can depend on `tower-service` to use the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3677,"byte_end":3748,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/   [`Service`] trait as an integration point between the protocol and user","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3749,"byte_end":3826,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/   code. For example, a client for some protocol might implement [`Service`],","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3827,"byte_end":3907,"line_start":81,"line_end":81,"column_start":1,"column_end":81}},{"value":"/   allowing users to add arbitrary Tower middleware to those clients.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3908,"byte_end":3980,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/   Similarly, a server might be created from a user-provided [`Service`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":3981,"byte_end":4057,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4058,"byte_end":4061,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/   Additionally, when a network protocol requires functionality already","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4062,"byte_end":4136,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/   provided by existing Tower middleware, a protocol implementation might use","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4137,"byte_end":4217,"line_start":86,"line_end":86,"column_start":1,"column_end":81}},{"value":"/   Tower middleware internally, as well as as an integration point.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4218,"byte_end":4288,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4289,"byte_end":4292,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ## Library Support","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4293,"byte_end":4315,"line_start":89,"line_end":89,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4316,"byte_end":4319,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ A number of third-party libraries support Tower and the [`Service`] trait.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4320,"byte_end":4398,"line_start":91,"line_end":91,"column_start":1,"column_end":79}},{"value":"/ The following is an incomplete list of such libraries:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4399,"byte_end":4457,"line_start":92,"line_end":92,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4458,"byte_end":4461,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ * [`hyper`]: A fast and correct low-level HTTP implementation.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4462,"byte_end":4528,"line_start":94,"line_end":94,"column_start":1,"column_end":67}},{"value":"/ * [`tonic`]: A [gRPC-over-HTTP/2][grpc] implementation built on top of","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4529,"byte_end":4603,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/   [`hyper`]. See [here][tonic-examples] for examples of using [`tonic`] with","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4604,"byte_end":4684,"line_start":96,"line_end":96,"column_start":1,"column_end":81}},{"value":"/   Tower.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4685,"byte_end":4697,"line_start":97,"line_end":97,"column_start":1,"column_end":13}},{"value":"/ * [`warp`]: A lightweight, composable web framework. See","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4698,"byte_end":4758,"line_start":98,"line_end":98,"column_start":1,"column_end":61}},{"value":"/   [here][warp-service] for details on using [`warp`] with Tower.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4759,"byte_end":4827,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ * [`tower-lsp`] and its fork, [`lspower`]: implementations of the [Language","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4828,"byte_end":4907,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   Server Protocol][lsp] based on Tower.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4908,"byte_end":4951,"line_start":101,"line_end":101,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4952,"byte_end":4955,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`hyper`]: https://crates.io/crates/hyper","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":4956,"byte_end":5001,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/ [`tonic`]: https://crates.io/crates/tonic","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5002,"byte_end":5047,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/ [tonic-examples]: https://github.com/hyperium/tonic/tree/master/examples/src/tower","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5048,"byte_end":5134,"line_start":105,"line_end":105,"column_start":1,"column_end":87}},{"value":"/ [grpc]: https://grpc.io","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5135,"byte_end":5162,"line_start":106,"line_end":106,"column_start":1,"column_end":28}},{"value":"/ [`warp`]: https://crates.io/crates/warp","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5163,"byte_end":5206,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/ [warp-service]: https://docs.rs/warp/0.2.5/warp/fn.service.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5207,"byte_end":5274,"line_start":108,"line_end":108,"column_start":1,"column_end":68}},{"value":"/ [`tower-lsp`]: https://crates.io/crates/tower-lsp","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5275,"byte_end":5328,"line_start":109,"line_end":109,"column_start":1,"column_end":54}},{"value":"/ [`lspower`]: https://crates.io/crates/lspower","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5329,"byte_end":5378,"line_start":110,"line_end":110,"column_start":1,"column_end":50}},{"value":"/ [lsp]: https://microsoft.github.io/language-server-protocol/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5379,"byte_end":5443,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5444,"byte_end":5447,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ If you're the maintainer of a crate that supports Tower, we'd love to add","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5448,"byte_end":5525,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ your crate to this list! Please [open a PR] adding a brief description of","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5526,"byte_end":5603,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ your library!","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5604,"byte_end":5621,"line_start":115,"line_end":115,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5622,"byte_end":5625,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ## Getting Started","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5626,"byte_end":5648,"line_start":117,"line_end":117,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5649,"byte_end":5652,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ If you're brand new to Tower and want to start with the basics, we recommend you","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5653,"byte_end":5737,"line_start":119,"line_end":119,"column_start":1,"column_end":85}},{"value":"/ check out some of our [guides].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5738,"byte_end":5773,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5774,"byte_end":5777,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ The various middleware implementations provided by this crate are feature","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5778,"byte_end":5855,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ flagged, so that users can only compile the parts of Tower they need. By","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5856,"byte_end":5932,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ default, all the optional middleware are disabled.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5933,"byte_end":5987,"line_start":124,"line_end":124,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5988,"byte_end":5991,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ To get started using all of Tower's optional middleware, add this to your","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":5992,"byte_end":6069,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ `Cargo.toml`:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6070,"byte_end":6087,"line_start":127,"line_end":127,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6088,"byte_end":6091,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6092,"byte_end":6103,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"/ tower = { version = \"0.4\", features = [\"full\"] }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6104,"byte_end":6156,"line_start":130,"line_end":130,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6157,"byte_end":6164,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6165,"byte_end":6168,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can only enable some features. For example, to enable","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6169,"byte_end":6245,"line_start":133,"line_end":133,"column_start":1,"column_end":77}},{"value":"/ only the [`retry`] and [`timeout`][timeouts] middleware, write:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6246,"byte_end":6313,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6314,"byte_end":6317,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6318,"byte_end":6329,"line_start":136,"line_end":136,"column_start":1,"column_end":12}},{"value":"/ tower = { version = \"0.4\", features = [\"retry\", \"timeout\"] }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6330,"byte_end":6394,"line_start":137,"line_end":137,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6395,"byte_end":6402,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6403,"byte_end":6406,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ See [here](#modules) for a complete list of all middleware provided by","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6407,"byte_end":6481,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"/ Tower.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6482,"byte_end":6492,"line_start":141,"line_end":141,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6493,"byte_end":6496,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6497,"byte_end":6500,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ #! Supported Rust Versions","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6501,"byte_end":6531,"line_start":144,"line_end":144,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6532,"byte_end":6535,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Tower will keep a rolling MSRV (minimum supported Rust version) policy of **at","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6536,"byte_end":6618,"line_start":146,"line_end":146,"column_start":1,"column_end":83}},{"value":"/ least** 6 months. When increasing the MSRV, the new Rust version must have been","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6619,"byte_end":6702,"line_start":147,"line_end":147,"column_start":1,"column_end":84}},{"value":"/ released at least six months ago. The current MSRV is 1.49.0.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6703,"byte_end":6768,"line_start":148,"line_end":148,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6769,"byte_end":6772,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6773,"byte_end":6804,"line_start":150,"line_end":150,"column_start":1,"column_end":32}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6805,"byte_end":6832,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/ [timeouts]: crate::timeout","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6833,"byte_end":6863,"line_start":152,"line_end":152,"column_start":1,"column_end":31}},{"value":"/ [rate limiting]: crate::limit::rate","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6864,"byte_end":6903,"line_start":153,"line_end":153,"column_start":1,"column_end":40}},{"value":"/ [load balancing]: crate::balance","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6904,"byte_end":6940,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/ [`ServiceBuilder`]: crate::ServiceBuilder","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6941,"byte_end":6986,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ [utilities]: crate::ServiceExt","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":6987,"byte_end":7021,"line_start":156,"line_end":156,"column_start":1,"column_end":35}},{"value":"/ [`tower`]: https://crates.io/crates/tower","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":7022,"byte_end":7067,"line_start":157,"line_end":157,"column_start":1,"column_end":46}},{"value":"/ [`tower-service`]: https://crates.io/crates/tower-service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":7068,"byte_end":7129,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ [`tower-layer`]: https://crates.io/crates/tower-layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":7130,"byte_end":7187,"line_start":159,"line_end":159,"column_start":1,"column_end":58}},{"value":"/ [`tower-test`]: https://crates.io/crates/tower-test","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":7188,"byte_end":7243,"line_start":160,"line_end":160,"column_start":1,"column_end":56}},{"value":"/ [`retry`]: crate::retry","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":7244,"byte_end":7271,"line_start":161,"line_end":161,"column_start":1,"column_end":28}},{"value":"/ [open a PR]: https://github.com/tower-rs/tower/compare","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":7272,"byte_end":7330,"line_start":162,"line_end":162,"column_start":1,"column_end":59}},{"value":"/ [guides]: https://github.com/tower-rs/tower/tree/master/guides","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":7331,"byte_end":7397,"line_start":163,"line_end":163,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":33},{"krate":0,"index":71},{"krate":0,"index":108},{"krate":0,"index":123},{"krate":0,"index":189},{"krate":0,"index":259},{"krate":0,"index":262}],"decl_id":null,"docs":" Middleware that provides a buffered mpsc channel to a service.","sig":null,"attributes":[{"value":"cfg(feature = \"buffer\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":7531,"byte_end":7557,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"/ Middleware that provides a buffered mpsc channel to a service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":10847,"byte_end":10913,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":10914,"byte_end":10917,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Sometimes you want to give out multiple handles to a single service, and allow each handle to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":10918,"byte_end":11015,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ enqueue requests. That is, you want a [`Service`] to be [`Clone`]. This module allows you to do","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11016,"byte_end":11115,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ that by placing the service behind a multi-producer, single-consumer buffering channel. Clients","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11116,"byte_end":11215,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ enqueue requests by sending on the channel from any of the handles ([`Buffer`]), and the single","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11216,"byte_end":11315,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ service running elsewhere (usually spawned) receives and services the requests one by one. Each","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11316,"byte_end":11415,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ request is enqueued alongside a response channel that allows the service to report the result","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11416,"byte_end":11513,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ of the request back to the caller.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11514,"byte_end":11552,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11553,"byte_end":11556,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11557,"byte_end":11571,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11572,"byte_end":11575,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11576,"byte_end":11587,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"util\")]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11588,"byte_end":11618,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/ use tower::buffer::Buffer;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11619,"byte_end":11649,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(feature = \"util\")]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11650,"byte_end":11680,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ use tower::{Service, ServiceExt};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11681,"byte_end":11718,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/ # #[cfg(feature = \"util\")]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11719,"byte_end":11749,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ async fn mass_produce<S: Service<usize>>(svc: S)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11750,"byte_end":11802,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/ where","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11803,"byte_end":11812,"line_start":20,"line_end":20,"column_start":1,"column_end":10}},{"value":"/   S: 'static + Send,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11813,"byte_end":11837,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/   S::Error: Send + Sync + std::error::Error,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11838,"byte_end":11886,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/   S::Future: Send","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11887,"byte_end":11908,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11909,"byte_end":11914,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/     let svc = Buffer::new(svc, 10 /* buffer length */);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11915,"byte_end":11974,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":11975,"byte_end":11999,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/         let mut svc = svc.clone();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12000,"byte_end":12038,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12039,"byte_end":12076,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/             for i in 0usize.. {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12077,"byte_end":12112,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/                 svc.ready().await.expect(\"service crashed\").call(i).await;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12113,"byte_end":12191,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/             }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12192,"byte_end":12209,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12210,"byte_end":12225,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12226,"byte_end":12235,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12236,"byte_end":12241,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12242,"byte_end":12249,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12250,"byte_end":12253,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12254,"byte_end":12285,"line_start":37,"line_end":37,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::buffer::error","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32}],"decl_id":null,"docs":" Error types for the `Buffer` middleware.\n","sig":null,"attributes":[{"value":"/ Error types for the `Buffer` middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":12434,"byte_end":12478,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":12694,"byte_end":12706,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"ServiceError","qualname":"::buffer::error::ServiceError","value":"ServiceError {  }","parent":null,"children":[{"krate":0,"index":1865}],"decl_id":null,"docs":" An error produced by a [`Service`] wrapped by a [`Buffer`]","sig":null,"attributes":[{"value":"/ An error produced by a [`Service`] wrapped by a [`Buffer`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":12529,"byte_end":12591,"line_start":6,"line_end":6,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":12592,"byte_end":12595,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":12596,"byte_end":12627,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/ [`Buffer`]: crate::buffer::Buffer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":12628,"byte_end":12665,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":17},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":12819,"byte_end":12825,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Closed","qualname":"::buffer::error::Closed","value":"Closed {  }","parent":null,"children":[{"krate":0,"index":18}],"decl_id":null,"docs":" An error produced when the a buffer's worker closes unexpectedly.\n","sig":null,"attributes":[{"value":"/ An error produced when the a buffer's worker closes unexpectedly.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":12738,"byte_end":12807,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":33},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::buffer::future","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/future.rs","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1874},{"krate":0,"index":1904},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1924},{"krate":0,"index":61},{"krate":0,"index":65}],"decl_id":null,"docs":" Future types for the [`Buffer`] middleware.","sig":null,"attributes":[{"value":"/ Future types for the [`Buffer`] middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/future.rs","byte_start":14003,"byte_end":14050,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/future.rs","byte_start":14051,"byte_end":14054,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`Buffer`]: crate::buffer::Buffer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/future.rs","byte_start":14055,"byte_end":14092,"line_start":3,"line_end":3,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/future.rs","byte_start":14417,"byte_end":14431,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"name":"ResponseFuture","qualname":"::buffer::future::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":1870}],"decl_id":null,"docs":" Future that completes when the buffered service eventually services the submitted request.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":88},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16483,"byte_end":16494,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"BufferLayer","qualname":"::buffer::layer::BufferLayer","value":"BufferLayer {  }","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"decl_id":null,"docs":" Adds an mpsc buffer in front of an inner service.","sig":null,"attributes":[{"value":"/ Adds an mpsc buffer in front of an inner service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16223,"byte_end":16276,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16277,"byte_end":16280,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The default Tokio executor is used to run the given service,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16281,"byte_end":16345,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/ which means that this layer can only be used on the Tokio runtime.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16346,"byte_end":16416,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16417,"byte_end":16420,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See the module documentation for more details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16421,"byte_end":16471,"line_start":11,"line_end":11,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":17625,"byte_end":17628,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<BufferLayer<Request>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`BufferLayer`] with the provided `bound`.","sig":null,"attributes":[{"value":"/ Creates a new [`BufferLayer`] with the provided `bound`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16602,"byte_end":16662,"line_start":18,"line_end":18,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16667,"byte_end":16670,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ `bound` gives the maximal number of requests that can be queued for the service before","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16675,"byte_end":16765,"line_start":20,"line_end":20,"column_start":5,"column_end":95}},{"value":"/ backpressure is applied to callers.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16770,"byte_end":16809,"line_start":21,"line_end":21,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16814,"byte_end":16817,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # A note on choosing a `bound`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16822,"byte_end":16856,"line_start":23,"line_end":23,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16861,"byte_end":16864,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ When [`Buffer`]'s implementation of [`poll_ready`] returns [`Poll::Ready`], it reserves a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16869,"byte_end":16962,"line_start":25,"line_end":25,"column_start":5,"column_end":98}},{"value":"/ slot in the channel for the forthcoming [`call`]. However, if this call doesn't arrive,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16967,"byte_end":17058,"line_start":26,"line_end":26,"column_start":5,"column_end":96}},{"value":"/ this reserved slot may be held up for a long time. As a result, it's advisable to set","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":17063,"byte_end":17152,"line_start":27,"line_end":27,"column_start":5,"column_end":94}},{"value":"/ `bound` to be at least the maximum number of concurrent requests the [`Buffer`] will see.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":17157,"byte_end":17250,"line_start":28,"line_end":28,"column_start":5,"column_end":98}},{"value":"/ If you do not, all the slots in the buffer may be held up by futures that have just called","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":17255,"byte_end":17349,"line_start":29,"line_end":29,"column_start":5,"column_end":99}},{"value":"/ [`poll_ready`] but will not issue a [`call`], which prevents other senders from issuing new","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":17354,"byte_end":17449,"line_start":30,"line_end":30,"column_start":5,"column_end":100}},{"value":"/ requests.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":17454,"byte_end":17467,"line_start":31,"line_end":31,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":17472,"byte_end":17475,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Poll::Ready`]: std::task::Poll::Ready","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":17480,"byte_end":17523,"line_start":33,"line_end":33,"column_start":5,"column_end":48}},{"value":"/ [`call`]: crate::Service::call","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":17528,"byte_end":17562,"line_start":34,"line_end":34,"column_start":5,"column_end":39}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":17567,"byte_end":17613,"line_start":35,"line_end":35,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":19472,"byte_end":19478,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::buffer::service::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961}],"decl_id":null,"docs":" Adds an mpsc buffer in front of an inner service.","sig":null,"attributes":[{"value":"/ Adds an mpsc buffer in front of an inner service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":19335,"byte_end":19388,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":19389,"byte_end":19392,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See the module documentation for more details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":19393,"byte_end":19443,"line_start":16,"line_end":16,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21827,"byte_end":21830,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer<T, Request>>::new","value":"pub fn new(T, usize) -> Self where T: Send + 'static, T::Future: Send,\nT::Error: Send + Sync, Request: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Buffer`] wrapping `service`.","sig":null,"attributes":[{"value":"/ Creates a new [`Buffer`] wrapping `service`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":20659,"byte_end":20707,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":20712,"byte_end":20715,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ `bound` gives the maximal number of requests that can be queued for the service before","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":20720,"byte_end":20810,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ backpressure is applied to callers.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":20815,"byte_end":20854,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":20859,"byte_end":20862,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The default Tokio executor is used to run the given service, which means that this method","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":20867,"byte_end":20960,"line_start":52,"line_end":52,"column_start":5,"column_end":98}},{"value":"/ must be called while on the Tokio runtime.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":20965,"byte_end":21011,"line_start":53,"line_end":53,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21016,"byte_end":21019,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # A note on choosing a `bound`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21024,"byte_end":21058,"line_start":55,"line_end":55,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21063,"byte_end":21066,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ When [`Buffer`]'s implementation of [`poll_ready`] returns [`Poll::Ready`], it reserves a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21071,"byte_end":21164,"line_start":57,"line_end":57,"column_start":5,"column_end":98}},{"value":"/ slot in the channel for the forthcoming [`call`]. However, if this call doesn't arrive,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21169,"byte_end":21260,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ this reserved slot may be held up for a long time. As a result, it's advisable to set","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21265,"byte_end":21354,"line_start":59,"line_end":59,"column_start":5,"column_end":94}},{"value":"/ `bound` to be at least the maximum number of concurrent requests the [`Buffer`] will see.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21359,"byte_end":21452,"line_start":60,"line_end":60,"column_start":5,"column_end":98}},{"value":"/ If you do not, all the slots in the buffer may be held up by futures that have just called","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21457,"byte_end":21551,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ [`poll_ready`] but will not issue a [`call`], which prevents other senders from issuing new","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21556,"byte_end":21651,"line_start":62,"line_end":62,"column_start":5,"column_end":100}},{"value":"/ requests.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21656,"byte_end":21669,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21674,"byte_end":21677,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`Poll::Ready`]: std::task::Poll::Ready","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21682,"byte_end":21725,"line_start":65,"line_end":65,"column_start":5,"column_end":48}},{"value":"/ [`call`]: crate::Service::call","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21730,"byte_end":21764,"line_start":66,"line_end":66,"column_start":5,"column_end":39}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":21769,"byte_end":21815,"line_start":67,"line_end":67,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":22444,"byte_end":22448,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"pair","qualname":"<Buffer<T, Request>>::pair","value":"pub fn pair(T, usize) -> (Buffer<T, Request>, Worker<T, Request>) where\nT: Send + 'static, T::Error: Send + Sync, Request: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Buffer`] wrapping `service`, but returns the background worker.","sig":null,"attributes":[{"value":"/ Creates a new [`Buffer`] wrapping `service`, but returns the background worker.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":22114,"byte_end":22197,"line_start":80,"line_end":80,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":22202,"byte_end":22205,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This is useful if you do not want to spawn directly onto the tokio runtime","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":22210,"byte_end":22288,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ but instead want to use your own executor. This will return the [`Buffer`] and","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":22293,"byte_end":22375,"line_start":83,"line_end":83,"column_start":5,"column_end":87}},{"value":"/ the background `Worker` that you can then spawn.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":22380,"byte_end":22432,"line_start":84,"line_end":84,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/worker.rs","byte_start":26510,"byte_end":26516,"line_start":24,"line_end":24,"column_start":16,"column_end":22},"name":"Worker","qualname":"::buffer::worker::Worker","value":"Worker {  }","parent":null,"children":[{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010}],"decl_id":null,"docs":" Task that handles processing the buffer. This type should not be used\n directly, instead `Buffer` requires an `Executor` that can accept this task.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":265},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"make","qualname":"::make","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/mod.rs","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":308},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444}],"decl_id":null,"docs":" Trait aliases for Services that produce specific types of Responses.\n","sig":null,"attributes":[{"value":"cfg(feature = \"make\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":8186,"byte_end":8210,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ Trait aliases for Services that produce specific types of Responses.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/mod.rs","byte_start":35001,"byte_end":35073,"line_start":1,"line_end":1,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":290},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":35826,"byte_end":35840,"line_start":12,"line_end":12,"column_start":11,"column_end":25},"name":"MakeConnection","qualname":"::make::make_connection::MakeConnection","value":"MakeConnection<Target>: Sealed<(Target,)>","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"decl_id":null,"docs":" The [`MakeConnection`] trait is used to create transports.","sig":null,"attributes":[{"value":"/ The [`MakeConnection`] trait is used to create transports.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":35524,"byte_end":35586,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":35587,"byte_end":35590,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The goal of this service is to allow composable methods for creating","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":35591,"byte_end":35663,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ `AsyncRead + AsyncWrite` transports. This could mean creating a TLS","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":35664,"byte_end":35735,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/ based connection or using some other method to authenticate the connection.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":35736,"byte_end":35815,"line_start":11,"line_end":11,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":292},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":35926,"byte_end":35936,"line_start":14,"line_end":14,"column_start":10,"column_end":20},"name":"Connection","qualname":"::make::make_connection::MakeConnection::Connection","value":"type Connection: AsyncRead + AsyncWrite;","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" The transport provided by this service\n","sig":null,"attributes":[{"value":"/ The transport provided by this service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":35874,"byte_end":35916,"line_start":13,"line_end":13,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":293},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":36022,"byte_end":36027,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::make::make_connection::MakeConnection::Error","value":"type Error;","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Errors produced by the connecting service\n","sig":null,"attributes":[{"value":"/ Errors produced by the connecting service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":35967,"byte_end":36012,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":294},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":36097,"byte_end":36103,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Future","qualname":"::make::make_connection::MakeConnection::Future","value":"type Future: Future<Output = Result<Self::Connection, Self::Error>>;","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" The future that eventually produces the transport\n","sig":null,"attributes":[{"value":"/ The future that eventually produces the transport","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":36034,"byte_end":36087,"line_start":19,"line_end":19,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":36249,"byte_end":36259,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::make::make_connection::MakeConnection::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when it is able to make more connections.\n","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when it is able to make more connections.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":36166,"byte_end":36241,"line_start":22,"line_end":22,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":36389,"byte_end":36404,"line_start":26,"line_end":26,"column_start":8,"column_end":23},"name":"make_connection","qualname":"::make::make_connection::MakeConnection::make_connection","value":"pub fn make_connection(&mut Self, Target) -> Self::Future","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Connect and return a transport asynchronously\n","sig":null,"attributes":[{"value":"/ Connect and return a transport asynchronously","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":36332,"byte_end":36381,"line_start":25,"line_end":25,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2531},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45939,"byte_end":45945,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Shared","qualname":"::make::make_service::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":2533}],"decl_id":null,"docs":" A [`MakeService`] that produces services by cloning an inner service.","sig":null,"attributes":[{"value":"/ A [`MakeService`] that produces services by cloning an inner service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44082,"byte_end":44155,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44156,"byte_end":44159,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`MakeService`]: super::MakeService","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44160,"byte_end":44199,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44200,"byte_end":44203,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44204,"byte_end":44217,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44218,"byte_end":44221,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44222,"byte_end":44229,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # use std::task::{Context, Poll};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44230,"byte_end":44267,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44268,"byte_end":44292,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/ # use std::convert::Infallible;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44293,"byte_end":44328,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/ use tower::make::{MakeService, Shared};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44329,"byte_end":44372,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/ use tower::buffer::Buffer;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44373,"byte_end":44403,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ use tower::Service;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44404,"byte_end":44427,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/ use futures::future::{Ready, ready};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44428,"byte_end":44468,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44469,"byte_end":44472,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // An example connection type","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44473,"byte_end":44506,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/ struct Connection {}","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44507,"byte_end":44531,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44532,"byte_end":44535,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // An example request type","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44536,"byte_end":44566,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/ struct Request {}","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44567,"byte_end":44588,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44589,"byte_end":44592,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // An example response type","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44593,"byte_end":44624,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ struct Response {}","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44625,"byte_end":44647,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44648,"byte_end":44651,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Some service that doesn't implement `Clone`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44652,"byte_end":44702,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ struct MyService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44703,"byte_end":44724,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44725,"byte_end":44728,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ impl Service<Request> for MyService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44729,"byte_end":44770,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/     type Response = Response;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44771,"byte_end":44804,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/     type Error = Infallible;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44805,"byte_end":44837,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/     type Future = Ready<Result<Response, Infallible>>;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44838,"byte_end":44896,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44897,"byte_end":44900,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44901,"byte_end":44991,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":44992,"byte_end":45023,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45024,"byte_end":45033,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45034,"byte_end":45037,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, req: Request) -> Self::Future {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45038,"byte_end":45096,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/         ready(Ok(Response {}))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45097,"byte_end":45131,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45132,"byte_end":45141,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45142,"byte_end":45147,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45148,"byte_end":45151,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Example function that runs a service by accepting new connections and using","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45152,"byte_end":45234,"line_start":46,"line_end":46,"column_start":1,"column_end":83}},{"value":"/ // `Make` to create new services that might be bound to the connection.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45235,"byte_end":45310,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ //","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45311,"byte_end":45317,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/ // This is similar to what you might find in hyper.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45318,"byte_end":45373,"line_start":49,"line_end":49,"column_start":1,"column_end":56}},{"value":"/ async fn serve_make_service<Make>(make: Make)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45374,"byte_end":45423,"line_start":50,"line_end":50,"column_start":1,"column_end":50}},{"value":"/ where","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45424,"byte_end":45433,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/     Make: MakeService<Connection, Request>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45434,"byte_end":45480,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/ {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45481,"byte_end":45486,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/     // ...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45487,"byte_end":45501,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45502,"byte_end":45507,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45508,"byte_end":45511,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45512,"byte_end":45525,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/ // Our service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45526,"byte_end":45544,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ let svc = MyService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45545,"byte_end":45569,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45570,"byte_end":45573,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Make it `Clone` by putting a channel in front","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45574,"byte_end":45626,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"/ let buffered = Buffer::new(svc, 1024);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45627,"byte_end":45669,"line_start":62,"line_end":62,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45670,"byte_end":45673,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // Convert it into a `MakeService`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45674,"byte_end":45712,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/ let make = Shared::new(buffered);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45713,"byte_end":45750,"line_start":65,"line_end":65,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45751,"byte_end":45754,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // Run the service and just ignore the `Connection`s as `MyService` doesn't need them","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45755,"byte_end":45844,"line_start":67,"line_end":67,"column_start":1,"column_end":90}},{"value":"/ serve_make_service(make).await;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45845,"byte_end":45880,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/ # };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45881,"byte_end":45889,"line_start":69,"line_end":69,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45890,"byte_end":45897,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":46049,"byte_end":46052,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Shared<S>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Shared`] from a service.\n","sig":null,"attributes":[{"value":"/ Create a new [`Shared`] from a service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45994,"byte_end":46037,"line_start":77,"line_end":77,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2552},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":46600,"byte_end":46612,"line_start":102,"line_end":102,"column_start":14,"column_end":26},"name":"SharedFuture","qualname":"::make::make_service::shared::SharedFuture","value":"SharedFuture {  }","parent":null,"children":[{"krate":0,"index":2554}],"decl_id":null,"docs":" Response future from [`Shared`] services.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":356},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37716,"byte_end":37727,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"MakeService","qualname":"::make::make_service::MakeService","value":"MakeService<Target, Request>: Sealed<(Target, Request)>","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"decl_id":null,"docs":" Creates new [`Service`] values.","sig":null,"attributes":[{"value":"/ Creates new [`Service`] values.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37244,"byte_end":37279,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37280,"byte_end":37283,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Acts as a service factory. This is useful for cases where new [`Service`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37284,"byte_end":37361,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ values must be produced. One case is a TCP server listener. The listener","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37362,"byte_end":37438,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ accepts new TCP streams, obtains a new [`Service`] value using the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37439,"byte_end":37509,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ [`MakeService`] trait, and uses that new [`Service`] value to process inbound","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37510,"byte_end":37591,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ requests on that new TCP stream.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37592,"byte_end":37628,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37629,"byte_end":37632,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is essentially a trait alias for a [`Service`] of [`Service`]s.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37633,"byte_end":37705,"line_start":20,"line_end":20,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":359},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37822,"byte_end":37830,"line_start":23,"line_end":23,"column_start":10,"column_end":18},"name":"Response","qualname":"::make::make_service::MakeService::Response","value":"type Response;","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Responses given by the service\n","sig":null,"attributes":[{"value":"/ Responses given by the service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37778,"byte_end":37812,"line_start":22,"line_end":22,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":360},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37881,"byte_end":37886,"line_start":26,"line_end":26,"column_start":10,"column_end":15},"name":"Error","qualname":"::make::make_service::MakeService::Error","value":"type Error;","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Errors produced by the service\n","sig":null,"attributes":[{"value":"/ Errors produced by the service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37837,"byte_end":37871,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":361},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37952,"byte_end":37959,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"name":"Service","qualname":"::make::make_service::MakeService::Service","value":"type Service: Service<Request, Response = Self::Response, Error = Self::Error>;","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" The [`Service`] value created by this factory\n","sig":null,"attributes":[{"value":"/ The [`Service`] value created by this factory","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37893,"byte_end":37942,"line_start":28,"line_end":28,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":362},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38087,"byte_end":38096,"line_start":32,"line_end":32,"column_start":10,"column_end":19},"name":"MakeError","qualname":"::make::make_service::MakeService::MakeError","value":"type MakeError;","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Errors produced while building a service.\n","sig":null,"attributes":[{"value":"/ Errors produced while building a service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38032,"byte_end":38077,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":363},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38156,"byte_end":38162,"line_start":35,"line_end":35,"column_start":10,"column_end":16},"name":"Future","qualname":"::make::make_service::MakeService::Future","value":"type Future: Future<Output = Result<Self::Service, Self::MakeError>>;","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" The future of the [`Service`] instance.\n","sig":null,"attributes":[{"value":"/ The future of the [`Service`] instance.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38103,"byte_end":38146,"line_start":34,"line_end":34,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38636,"byte_end":38646,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::make::make_service::MakeService::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context)\n-> Poll<Result<(), Self::MakeError>>","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Returns [`Poll::Ready`] when the factory is able to create more services.","sig":null,"attributes":[{"value":"/ Returns [`Poll::Ready`] when the factory is able to create more services.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38226,"byte_end":38303,"line_start":37,"line_end":37,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38308,"byte_end":38311,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ If the service is at capacity, then [`Poll::Pending`] is returned and the task","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38316,"byte_end":38398,"line_start":39,"line_end":39,"column_start":5,"column_end":87}},{"value":"/ is notified when the service becomes ready again. This function is","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38403,"byte_end":38473,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ expected to be called while on a task.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38478,"byte_end":38520,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38525,"byte_end":38528,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`Poll::Ready`]: std::task::Poll::Ready","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38533,"byte_end":38576,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/ [`Poll::Pending`]: std::task::Poll::Pending","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38581,"byte_end":38628,"line_start":44,"line_end":44,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38788,"byte_end":38800,"line_start":48,"line_end":48,"column_start":8,"column_end":20},"name":"make_service","qualname":"::make::make_service::MakeService::make_service","value":"pub fn make_service(&mut Self, Target) -> Self::Future","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Create and return a new service value asynchronously.\n","sig":null,"attributes":[{"value":"/ Create and return a new service value asynchronously.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38723,"byte_end":38780,"line_start":47,"line_end":47,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39713,"byte_end":39725,"line_start":79,"line_end":79,"column_start":8,"column_end":20},"name":"into_service","qualname":"::make::make_service::MakeService::into_service","value":"pub fn into_service(Self) -> IntoService<Self, Request> where Self: Sized","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Consume this [`MakeService`] and convert it into a [`Service`].","sig":null,"attributes":[{"value":"/ Consume this [`MakeService`] and convert it into a [`Service`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38850,"byte_end":38917,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38922,"byte_end":38925,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38930,"byte_end":38943,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38948,"byte_end":38955,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38960,"byte_end":38993,"line_start":54,"line_end":54,"column_start":5,"column_end":38}},{"value":"/ use tower::Service;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":38998,"byte_end":39021,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/ use tower::make::MakeService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39026,"byte_end":39059,"line_start":56,"line_end":56,"column_start":5,"column_end":38}},{"value":"/ use tower::service_fn;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39064,"byte_end":39090,"line_start":57,"line_end":57,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39095,"byte_end":39098,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39103,"byte_end":39120,"line_start":59,"line_end":59,"column_start":5,"column_end":22}},{"value":"/ # async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39125,"byte_end":39138,"line_start":60,"line_end":60,"column_start":5,"column_end":18}},{"value":"/ // A `MakeService`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39143,"byte_end":39165,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/ let make_service = service_fn(|make_req: ()| async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39170,"byte_end":39226,"line_start":62,"line_end":62,"column_start":5,"column_end":61}},{"value":"/     Ok::<_, Infallible>(service_fn(|req: String| async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39231,"byte_end":39291,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/         Ok::<_, Infallible>(req)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39296,"byte_end":39332,"line_start":64,"line_end":64,"column_start":5,"column_end":41}},{"value":"/     }))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39337,"byte_end":39348,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39353,"byte_end":39360,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39365,"byte_end":39368,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ // Convert the `MakeService` into a `Service`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39373,"byte_end":39422,"line_start":68,"line_end":68,"column_start":5,"column_end":54}},{"value":"/ let mut svc = make_service.into_service();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39427,"byte_end":39473,"line_start":69,"line_end":69,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39478,"byte_end":39481,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // Make a new service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39486,"byte_end":39511,"line_start":71,"line_end":71,"column_start":5,"column_end":30}},{"value":"/ let mut new_svc = svc.call(()).await.unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39516,"byte_end":39566,"line_start":72,"line_end":72,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39571,"byte_end":39574,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ // Call the service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39579,"byte_end":39602,"line_start":74,"line_end":74,"column_start":5,"column_end":28}},{"value":"/ let res = new_svc.call(\"foo\".to_string()).await.unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39607,"byte_end":39668,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/ # };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39673,"byte_end":39681,"line_start":76,"line_end":76,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39686,"byte_end":39693,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39698,"byte_end":39705,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40931,"byte_end":40941,"line_start":121,"line_end":121,"column_start":8,"column_end":18},"name":"as_service","qualname":"::make::make_service::MakeService::as_service","value":"pub fn as_service(&mut Self) -> AsService<, Self, Request> where Self: Sized","parent":{"krate":0,"index":356},"children":[],"decl_id":null,"docs":" Convert this [`MakeService`] into a [`Service`] without consuming the original [`MakeService`].","sig":null,"attributes":[{"value":"/ Convert this [`MakeService`] into a [`Service`] without consuming the original [`MakeService`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":39900,"byte_end":39999,"line_start":89,"line_end":89,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40004,"byte_end":40007,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40012,"byte_end":40025,"line_start":91,"line_end":91,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40030,"byte_end":40037,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40042,"byte_end":40075,"line_start":93,"line_end":93,"column_start":5,"column_end":38}},{"value":"/ use tower::Service;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40080,"byte_end":40103,"line_start":94,"line_end":94,"column_start":5,"column_end":28}},{"value":"/ use tower::make::MakeService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40108,"byte_end":40141,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/ use tower::service_fn;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40146,"byte_end":40172,"line_start":96,"line_end":96,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40177,"byte_end":40180,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40185,"byte_end":40202,"line_start":98,"line_end":98,"column_start":5,"column_end":22}},{"value":"/ # async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40207,"byte_end":40220,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ // A `MakeService`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40225,"byte_end":40247,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/ let mut make_service = service_fn(|make_req: ()| async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40252,"byte_end":40312,"line_start":101,"line_end":101,"column_start":5,"column_end":65}},{"value":"/     Ok::<_, Infallible>(service_fn(|req: String| async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40317,"byte_end":40377,"line_start":102,"line_end":102,"column_start":5,"column_end":65}},{"value":"/         Ok::<_, Infallible>(req)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40382,"byte_end":40418,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/     }))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40423,"byte_end":40434,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40439,"byte_end":40446,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40451,"byte_end":40454,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // Convert the `MakeService` into a `Service`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40459,"byte_end":40508,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ let mut svc = make_service.as_service();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40513,"byte_end":40557,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40562,"byte_end":40565,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ // Make a new service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40570,"byte_end":40595,"line_start":110,"line_end":110,"column_start":5,"column_end":30}},{"value":"/ let mut new_svc = svc.call(()).await.unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40600,"byte_end":40650,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40655,"byte_end":40658,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ // Call the service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40663,"byte_end":40686,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/ let res = new_svc.call(\"foo\".to_string()).await.unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40691,"byte_end":40752,"line_start":114,"line_end":114,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40757,"byte_end":40760,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // The original `MakeService` is still accessible","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40765,"byte_end":40818,"line_start":116,"line_end":116,"column_start":5,"column_end":58}},{"value":"/ let new_svc = make_service.make_service(()).await.unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40823,"byte_end":40886,"line_start":117,"line_end":117,"column_start":5,"column_end":68}},{"value":"/ # };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40891,"byte_end":40899,"line_start":118,"line_end":118,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40904,"byte_end":40911,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":40916,"byte_end":40923,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":41954,"byte_end":41965,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"IntoService","qualname":"::make::make_service::IntoService","value":"IntoService {  }","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"decl_id":null,"docs":" Service returned by [`MakeService::into_service`][into].","sig":null,"attributes":[{"value":"/ Service returned by [`MakeService::into_service`][into].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":41771,"byte_end":41831,"line_start":159,"line_end":159,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":41832,"byte_end":41835,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ See the documentation on [`into_service`][into] for details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":41836,"byte_end":41900,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":41901,"byte_end":41904,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [into]: MakeService::into_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":41905,"byte_end":41942,"line_start":163,"line_end":163,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":408},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":43156,"byte_end":43165,"line_start":217,"line_end":217,"column_start":12,"column_end":21},"name":"AsService","qualname":"::make::make_service::AsService","value":"AsService {  }","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"decl_id":null,"docs":" Service returned by [`MakeService::as_service`][as].","sig":null,"attributes":[{"value":"/ Service returned by [`MakeService::as_service`][as].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":42985,"byte_end":43041,"line_start":212,"line_end":212,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":43042,"byte_end":43045,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ See the documentation on [`as_service`][as] for details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":43046,"byte_end":43106,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":43107,"byte_end":43110,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ [as]: MakeService::as_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":43111,"byte_end":43144,"line_start":216,"line_end":216,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":444},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/mod.rs","byte_start":35282,"byte_end":35288,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"future","qualname":"::make::future","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/mod.rs","parent":null,"children":[{"krate":0,"index":445}],"decl_id":null,"docs":" Future types\n","sig":null,"attributes":[{"value":"/ Future types","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/mod.rs","byte_start":35295,"byte_end":35311,"line_start":11,"line_end":11,"column_start":5,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":448},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":525},{"krate":0,"index":718},{"krate":0,"index":787},{"krate":0,"index":935},{"krate":0,"index":987},{"krate":0,"index":1035},{"krate":0,"index":1086},{"krate":0,"index":1130},{"krate":0,"index":1181},{"krate":0,"index":1233},{"krate":0,"index":1289},{"krate":0,"index":1334},{"krate":0,"index":1407},{"krate":0,"index":1486},{"krate":0,"index":1519},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1581},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1594},{"krate":0,"index":1597},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1625},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1645},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1662},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1676},{"krate":0,"index":1679},{"krate":0,"index":1682},{"krate":0,"index":1685},{"krate":0,"index":1689},{"krate":0,"index":1708},{"krate":0,"index":1743},{"krate":0,"index":1746}],"decl_id":null,"docs":" Various utility types and functions that are generally used with Tower.\n","sig":null,"attributes":[{"value":"cfg(feature = \"util\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":8867,"byte_end":8891,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/ Various utility types and functions that are generally used with Tower.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":47854,"byte_end":47929,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2585},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":83942,"byte_end":83949,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::util::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":2588},{"krate":0,"index":2589}],"decl_id":null,"docs":" Service returned by the [`and_then`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`and_then`] combinator.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":83805,"byte_end":83857,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":83858,"byte_end":83861,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`and_then`]: crate::util::ServiceExt::and_then","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":83862,"byte_end":83913,"line_start":12,"line_end":12,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":84443,"byte_end":84456,"line_start":35,"line_end":35,"column_start":16,"column_end":29},"name":"AndThenFuture","qualname":"::util::and_then::AndThenFuture","value":"AndThenFuture {  }","parent":null,"children":[{"krate":0,"index":2598}],"decl_id":null,"docs":" Response future from [`AndThen`] services.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2643},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85516,"byte_end":85528,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"AndThenLayer","qualname":"::util::and_then::AndThenLayer","value":"AndThenLayer {  }","parent":null,"children":[{"krate":0,"index":2645}],"decl_id":null,"docs":" A [`Layer`] that produces a [`AndThen`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`AndThen`] service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85390,"byte_end":85442,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85443,"byte_end":85446,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85447,"byte_end":85480,"line_start":69,"line_end":69,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85626,"byte_end":85629,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<AndThen<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AndThen` service.\n","sig":null,"attributes":[{"value":"/ Creates a new `AndThen` service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85578,"byte_end":85614,"line_start":76,"line_end":76,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85905,"byte_end":85910,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"layer","qualname":"<AndThen<S, F>>::layer","value":"pub fn layer(F) -> AndThenLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`AndThen`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`AndThen`] services.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85696,"byte_end":85759,"line_start":81,"line_end":81,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85764,"byte_end":85767,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`AndThenLayer::new`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85772,"byte_end":85847,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85852,"byte_end":85855,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85860,"byte_end":85893,"line_start":85,"line_end":85,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":86660,"byte_end":86663,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<AndThenLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`AndThenLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`AndThenLayer`] layer.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":86607,"byte_end":86648,"line_start":112,"line_end":112,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":90094,"byte_end":90102,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"BoxLayer","qualname":"::util::boxed::layer::BoxLayer","value":"BoxLayer {  }","parent":null,"children":[{"krate":0,"index":552}],"decl_id":null,"docs":" A boxed [`Layer`] trait object.","sig":null,"attributes":[{"value":"/ A boxed [`Layer`] trait object.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":88493,"byte_end":88528,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":88529,"byte_end":88532,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`BoxLayer`] turns a layer into a trait object, allowing both the [`Layer`] itself","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":88533,"byte_end":88619,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/ and the output [`Service`] to be dynamic, while having consistent types.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":88620,"byte_end":88696,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":88697,"byte_end":88700,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This [`Layer`] produces [`BoxService`] instances erasing the type of the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":88701,"byte_end":88777,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ [`Service`] produced by the wrapped [`Layer`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":88778,"byte_end":88828,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":88829,"byte_end":88832,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":88833,"byte_end":88846,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":88847,"byte_end":88850,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `BoxLayer` can, for example, be useful to create layers dynamically that otherwise wouldn't have","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":88851,"byte_end":88951,"line_start":16,"line_end":16,"column_start":1,"column_end":101}},{"value":"/ the same types. In this example, we include a [`Timeout`] layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":88952,"byte_end":89019,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ only if an environment variable is set. We can use `BoxLayer`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89020,"byte_end":89085,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ to return a consistent type regardless of runtime configuration:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89086,"byte_end":89154,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89155,"byte_end":89158,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89159,"byte_end":89166,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89167,"byte_end":89195,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use tower::{Service, ServiceBuilder, BoxError, util::BoxLayer};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89196,"byte_end":89263,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89264,"byte_end":89267,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ fn common_layer<S, T>() -> BoxLayer<S, T, S::Response, BoxError>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89268,"byte_end":89336,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"/ where","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89337,"byte_end":89346,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/     S: Service<T> + Send + 'static,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89347,"byte_end":89386,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/     S::Future: Send + 'static,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89387,"byte_end":89421,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/     S::Error: Into<BoxError> + 'static,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89422,"byte_end":89465,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89466,"byte_end":89471,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/     let builder = ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89472,"byte_end":89515,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/         .concurrency_limit(100);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89516,"byte_end":89552,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89553,"byte_end":89556,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     if std::env::var(\"SET_TIMEOUT\").is_ok() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89557,"byte_end":89606,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/         let layer = builder","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89607,"byte_end":89638,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/             .timeout(Duration::from_secs(30))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89639,"byte_end":89688,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/             .into_inner();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89689,"byte_end":89719,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89720,"byte_end":89723,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/         BoxLayer::new(layer)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89724,"byte_end":89756,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/     } else {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89757,"byte_end":89773,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/         let layer = builder","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89774,"byte_end":89805,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/             .map_err(Into::into)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89806,"byte_end":89842,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/             .into_inner();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89843,"byte_end":89873,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89874,"byte_end":89877,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/         BoxLayer::new(layer)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89878,"byte_end":89910,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89911,"byte_end":89920,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89921,"byte_end":89926,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89927,"byte_end":89934,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89935,"byte_end":89938,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89939,"byte_end":89972,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ [`Service`]: tower_service::Service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":89973,"byte_end":90012,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/ [`BoxService`]: super::BoxService","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":90013,"byte_end":90050,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/ [`Timeout`]: crate::timeout","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":90051,"byte_end":90082,"line_start":53,"line_end":53,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":90295,"byte_end":90298,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxLayer<In, T, U, E>>::new","value":"pub fn new<L>(L) -> Self where L: Layer<In> + Send + Sync + 'static,\nL::Service: Service<T, Response = U, Error = U> + Send + 'static,\n<L::Service as Service<T>>::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`BoxLayer`].\n","sig":null,"attributes":[{"value":"/ Create a new [`BoxLayer`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":90253,"byte_end":90283,"line_start":59,"line_end":59,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":91875,"byte_end":91885,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"BoxService","qualname":"::util::boxed::sync::BoxService","value":"BoxService {  }","parent":null,"children":[{"krate":0,"index":615}],"decl_id":null,"docs":" A boxed `Service + Send` trait object.","sig":null,"attributes":[{"value":"/ A boxed `Service + Send` trait object.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":91435,"byte_end":91477,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":91478,"byte_end":91481,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`BoxService`] turns a service into a trait object, allowing the response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":91482,"byte_end":91559,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ future type to be dynamic. This type requires both the service and the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":91560,"byte_end":91634,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ response future to be [`Send`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":91635,"byte_end":91670,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":91671,"byte_end":91674,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If you need a boxed [`Service`] that implements [`Clone`] consider using","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":91675,"byte_end":91751,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ [`BoxCloneService`](crate::util::BoxCloneService).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":91752,"byte_end":91806,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":91807,"byte_end":91810,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See module level documentation for more details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":91811,"byte_end":91863,"line_start":21,"line_end":21,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":92286,"byte_end":92289,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxService<T, U, E>>::new","value":"pub fn new<S>(S) -> Self where S: Service<T, Response = U, Error = U> + Send +\n'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":92252,"byte_end":92274,"line_start":33,"line_end":33,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":92690,"byte_end":92695,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"layer","qualname":"<BoxService<T, U, E>>::layer","value":"pub fn layer<S>() -> LayerFn<fn(: S) -> Self> where S: Service<T, Response =\nU, Error = U> + Send + 'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Layer`] for wrapping a [`Service`] in a [`BoxService`]\n middleware.","sig":null,"attributes":[{"value":"/ Returns a [`Layer`] for wrapping a [`Service`] in a [`BoxService`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":92548,"byte_end":92618,"line_start":43,"line_end":43,"column_start":5,"column_end":75}},{"value":"/ middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":92623,"byte_end":92638,"line_start":44,"line_end":44,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":92643,"byte_end":92646,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":92651,"byte_end":92678,"line_start":46,"line_end":46,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":93600,"byte_end":93616,"line_start":12,"line_end":12,"column_start":12,"column_end":28},"name":"UnsyncBoxService","qualname":"::util::boxed::unsync::UnsyncBoxService","value":"UnsyncBoxService {  }","parent":null,"children":[{"krate":0,"index":674}],"decl_id":null,"docs":" A boxed [`Service`] trait object.\n","sig":null,"attributes":[{"value":"/ A boxed [`Service`] trait object.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":93551,"byte_end":93588,"line_start":11,"line_end":11,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":94086,"byte_end":94089,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<UnsyncBoxService<T, U, E>>::new","value":"pub fn new<S>(S) -> Self where S: Service<T, Response = U, Error = U> +\n'static, S::Future: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":94052,"byte_end":94074,"line_start":28,"line_end":28,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":94453,"byte_end":94458,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"layer","qualname":"<UnsyncBoxService<T, U, E>>::layer","value":"pub fn layer<S>() -> LayerFn<fn(: S) -> Self> where S: Service<T, Response =\nU, Error = U> + 'static, S::Future: 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Layer`] for wrapping a [`Service`] in an [`UnsyncBoxService`] middleware.","sig":null,"attributes":[{"value":"/ Returns a [`Layer`] for wrapping a [`Service`] in an [`UnsyncBoxService`] middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":94312,"byte_end":94401,"line_start":38,"line_end":38,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":94406,"byte_end":94409,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":94414,"byte_end":94441,"line_start":40,"line_end":40,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":746},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97358,"byte_end":97373,"line_start":58,"line_end":58,"column_start":12,"column_end":27},"name":"BoxCloneService","qualname":"::util::boxed_clone::BoxCloneService","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Clone`] + [`Send`] boxed [`Service`].","sig":null,"attributes":[{"value":"/ A [`Clone`] + [`Send`] boxed [`Service`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":95849,"byte_end":95894,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":95895,"byte_end":95898,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`BoxCloneService`] turns a service into a trait object, allowing the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":95899,"byte_end":95972,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ response future type to be dynamic, and allowing the service to be cloned.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":95973,"byte_end":96051,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96052,"byte_end":96055,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`BoxService`](super::BoxService) except the resulting","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96056,"byte_end":96133,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ service implements [`Clone`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96134,"byte_end":96167,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96168,"byte_end":96171,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96172,"byte_end":96185,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96186,"byte_end":96189,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96190,"byte_end":96197,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tower::{Service, ServiceBuilder, BoxError, util::BoxCloneService};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96198,"byte_end":96272,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96273,"byte_end":96301,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96302,"byte_end":96307,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # struct Request;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96308,"byte_end":96329,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/ # struct Response;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96330,"byte_end":96352,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ # impl Response {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96353,"byte_end":96374,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96375,"byte_end":96410,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96411,"byte_end":96418,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96419,"byte_end":96422,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // This service has a complex type that is hard to name","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96423,"byte_end":96482,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/ let service = ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96483,"byte_end":96522,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/     .map_request(|req| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96523,"byte_end":96551,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/         println!(\"received request\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96552,"byte_end":96593,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/         req","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96594,"byte_end":96609,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/     })","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96610,"byte_end":96620,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"/     .map_response(|res| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96621,"byte_end":96650,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/         println!(\"response produced\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96651,"byte_end":96693,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/         res","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96694,"byte_end":96709,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/     })","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96710,"byte_end":96720,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     .load_shed()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96721,"byte_end":96741,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/     .concurrency_limit(64)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96742,"byte_end":96772,"line_start":41,"line_end":41,"column_start":1,"column_end":31}},{"value":"/     .timeout(Duration::from_secs(10))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96773,"byte_end":96814,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/     .service_fn(|req: Request| async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96815,"byte_end":96857,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/         Ok::<_, BoxError>(Response::new())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96858,"byte_end":96904,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96905,"byte_end":96916,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/ # let service = assert_service(service);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96917,"byte_end":96961,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96962,"byte_end":96965,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ // `BoxCloneService` will erase the type so it's nameable","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":96966,"byte_end":97027,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/ let service: BoxCloneService<Request, Response, BoxError> = BoxCloneService::new(service);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97028,"byte_end":97122,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"/ # let service = assert_service(service);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97123,"byte_end":97167,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97168,"byte_end":97171,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // And we can still clone the service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97172,"byte_end":97213,"line_start":52,"line_end":52,"column_start":1,"column_end":42}},{"value":"/ let cloned_service = service.clone();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97214,"byte_end":97255,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97256,"byte_end":97261,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ # fn assert_service<S, R>(svc: S) -> S","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97262,"byte_end":97304,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ # where S: Service<R> { svc }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97305,"byte_end":97338,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97339,"byte_end":97346,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97612,"byte_end":97615,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxCloneService<T, U, E>>::new","value":"pub fn new<S>(S) -> Self where S: Service<T, Response = U, Error = U> +\nClone + Send + 'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BoxCloneService`.\n","sig":null,"attributes":[{"value":"/ Create a new `BoxCloneService`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97565,"byte_end":97600,"line_start":66,"line_end":66,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":98020,"byte_end":98025,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"layer","qualname":"<BoxCloneService<T, U, E>>::layer","value":"pub fn layer<S>() -> LayerFn<fn(: S) -> Self> where S: Service<T, Response =\nU, Error = U> + Clone + Send + 'static, S::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Layer`] for wrapping a [`Service`] in a [`BoxCloneService`]\n middleware.","sig":null,"attributes":[{"value":"/ Returns a [`Layer`] for wrapping a [`Service`] in a [`BoxCloneService`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97873,"byte_end":97948,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97953,"byte_end":97968,"line_start":77,"line_end":77,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97973,"byte_end":97976,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97981,"byte_end":98008,"line_start":79,"line_end":79,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2724},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":106657,"byte_end":106664,"line_start":88,"line_end":88,"column_start":16,"column_end":23},"name":"CallAll","qualname":"::util::call_all::ordered::CallAll","value":"CallAll {  }","parent":null,"children":[{"krate":0,"index":2727}],"decl_id":null,"docs":" This is a [`Stream`] of responses resulting from calling the wrapped [`Service`] for each\n request received on the wrapped [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107284,"byte_end":107287,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<CallAll<Svc, S>>::new","value":"pub fn new(Svc, S) -> CallAll<Svc, S>","parent":null,"children":[],"decl_id":null,"docs":" Create new [`CallAll`] combinator.","sig":null,"attributes":[{"value":"/ Create new [`CallAll`] combinator.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":106954,"byte_end":106992,"line_start":104,"line_end":104,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":106997,"byte_end":107000,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Each request yielded by `stream` is passed to `svc`, and the resulting responses are","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107005,"byte_end":107093,"line_start":106,"line_end":106,"column_start":5,"column_end":93}},{"value":"/ yielded in the same order by the implementation of [`Stream`] for [`CallAll`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107098,"byte_end":107180,"line_start":107,"line_end":107,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107185,"byte_end":107188,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107193,"byte_end":107272,"line_start":109,"line_end":109,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107659,"byte_end":107669,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CallAll<Svc, S>>::into_inner","value":"pub fn into_inner(Self) -> Svc","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped [`Service`].","sig":null,"attributes":[{"value":"/ Extract the wrapped [`Service`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107454,"byte_end":107490,"line_start":116,"line_end":116,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107495,"byte_end":107498,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107503,"byte_end":107515,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107520,"byte_end":107523,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Panics if [`take_service`] was already called.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107528,"byte_end":107578,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107583,"byte_end":107586,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`take_service`]: crate::util::CallAll::take_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107591,"byte_end":107647,"line_start":122,"line_end":122,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108025,"byte_end":108037,"line_start":136,"line_end":136,"column_start":12,"column_end":24},"name":"take_service","qualname":"<CallAll<Svc, S>>::take_service","value":"pub fn take_service(Pin<&mut Self>) -> Svc","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped [`Service`].","sig":null,"attributes":[{"value":"/ Extract the wrapped [`Service`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107728,"byte_end":107764,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107769,"byte_end":107772,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This [`CallAll`] can no longer be used after this function has been called.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107777,"byte_end":107856,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107861,"byte_end":107864,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107869,"byte_end":107881,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107886,"byte_end":107889,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Panics if [`take_service`] was already called.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107894,"byte_end":107944,"line_start":133,"line_end":133,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107949,"byte_end":107952,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`take_service`]: crate::util::CallAll::take_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":107957,"byte_end":108013,"line_start":135,"line_end":135,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108406,"byte_end":108415,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"unordered","qualname":"<CallAll<Svc, S>>::unordered","value":"pub fn unordered(Self) -> super::CallAllUnordered<Svc, S>","parent":null,"children":[],"decl_id":null,"docs":" Return responses as they are ready, regardless of the initial order.","sig":null,"attributes":[{"value":"/ Return responses as they are ready, regardless of the initial order.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108124,"byte_end":108196,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108201,"byte_end":108204,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the stream is polled.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108209,"byte_end":108270,"line_start":142,"line_end":142,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108275,"byte_end":108278,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108283,"byte_end":108295,"line_start":144,"line_end":144,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108300,"byte_end":108303,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Panics if [`poll`] was called.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108308,"byte_end":108342,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108347,"byte_end":108350,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: std::future::Future::poll","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108355,"byte_end":108394,"line_start":148,"line_end":148,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2769},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":109964,"byte_end":109980,"line_start":25,"line_end":25,"column_start":16,"column_end":32},"name":"CallAllUnordered","qualname":"::util::call_all::unordered::CallAllUnordered","value":"CallAllUnordered {  }","parent":null,"children":[{"krate":0,"index":2772}],"decl_id":null,"docs":" A stream of responses received from the inner service in received order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110432,"byte_end":110435,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<CallAllUnordered<Svc, S>>::new","value":"pub fn new(Svc, S) -> CallAllUnordered<Svc, S>","parent":null,"children":[],"decl_id":null,"docs":" Create new [`CallAllUnordered`] combinator.","sig":null,"attributes":[{"value":"/ Create new [`CallAllUnordered`] combinator.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110281,"byte_end":110328,"line_start":41,"line_end":41,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110333,"byte_end":110336,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110341,"byte_end":110420,"line_start":43,"line_end":43,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110836,"byte_end":110846,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CallAllUnordered<Svc, S>>::into_inner","value":"pub fn into_inner(Self) -> Svc","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped [`Service`].","sig":null,"attributes":[{"value":"/ Extract the wrapped [`Service`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110622,"byte_end":110658,"line_start":50,"line_end":50,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110663,"byte_end":110666,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110671,"byte_end":110683,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110688,"byte_end":110691,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Panics if [`take_service`] was already called.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110696,"byte_end":110746,"line_start":54,"line_end":54,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110751,"byte_end":110754,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`take_service`]: crate::util::CallAllUnordered::take_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110759,"byte_end":110824,"line_start":56,"line_end":56,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":111218,"byte_end":111230,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"take_service","qualname":"<CallAllUnordered<Svc, S>>::take_service","value":"pub fn take_service(Pin<&mut Self>) -> Svc","parent":null,"children":[],"decl_id":null,"docs":" Extract the wrapped `Service`.","sig":null,"attributes":[{"value":"/ Extract the wrapped `Service`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110905,"byte_end":110939,"line_start":61,"line_end":61,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110944,"byte_end":110947,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This [`CallAllUnordered`] can no longer be used after this function has been called.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110952,"byte_end":111040,"line_start":63,"line_end":63,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":111045,"byte_end":111048,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":111053,"byte_end":111065,"line_start":65,"line_end":65,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":111070,"byte_end":111073,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Panics if [`take_service`] was already called.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":111078,"byte_end":111128,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":111133,"byte_end":111136,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [`take_service`]: crate::util::CallAllUnordered::take_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":111141,"byte_end":111206,"line_start":69,"line_end":69,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2867},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":112694,"byte_end":112695,"line_start":24,"line_end":24,"column_start":5,"column_end":6},"name":"A","qualname":"::util::either::Either::A","value":"Either::A(A)","parent":{"krate":0,"index":2864},"children":[],"decl_id":null,"docs":" One type of backing [`Service`].\n","sig":null,"attributes":[{"value":"/ One type of backing [`Service`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":112653,"byte_end":112689,"line_start":23,"line_end":23,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2869},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":112758,"byte_end":112759,"line_start":26,"line_end":26,"column_start":5,"column_end":6},"name":"B","qualname":"::util::either::Either::B","value":"Either::B(B)","parent":{"krate":0,"index":2864},"children":[],"decl_id":null,"docs":" The other type of backing [`Service`].\n","sig":null,"attributes":[{"value":"/ The other type of backing [`Service`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":112711,"byte_end":112753,"line_start":25,"line_end":25,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":2864},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":112634,"byte_end":112640,"line_start":22,"line_end":22,"column_start":10,"column_end":16},"name":"Either","qualname":"::util::either::Either","value":"pub enum Either<A, B> { A(A), B(B), }","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":2869}],"decl_id":null,"docs":" Combine two different service types into a single type.","sig":null,"attributes":[{"value":"pin(__private(project = EitherProj))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":112564,"byte_end":112600,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2839},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":112634,"byte_end":112640,"line_start":22,"line_end":22,"column_start":10,"column_end":16},"name":"__Either","qualname":"::util::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":112564,"byte_end":112600,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116259,"byte_end":116273,"line_start":48,"line_end":48,"column_start":8,"column_end":22},"name":"future_service","qualname":"::util::future_service::future_service","value":"pub fn future_service<F, S, R, E>(F) -> FutureService<F, S> where\nF: Future<Output = Result<S, E>> + Unpin, S: Service<R, Error = E>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`FutureService`] for the given future.","sig":null,"attributes":[{"value":"/ Returns a new [`FutureService`] for the given future.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":114705,"byte_end":114762,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":114763,"byte_end":114766,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A [`FutureService`] allows you to treat a future that resolves to a service as a service. This","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":114767,"byte_end":114865,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ can be useful for services that are created asynchronously.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":114866,"byte_end":114929,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":114930,"byte_end":114933,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":114934,"byte_end":114947,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":114948,"byte_end":114955,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use tower::{service_fn, Service, ServiceExt};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":114956,"byte_end":115005,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ use tower::util::future_service;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115006,"byte_end":115042,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115043,"byte_end":115076,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115077,"byte_end":115080,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115081,"byte_end":115098,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ # async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115099,"byte_end":115112,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ // A future which outputs a type implementing `Service`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115113,"byte_end":115173,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/ let future_of_a_service = async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115174,"byte_end":115211,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/     let svc = service_fn(|_req: ()| async { Ok::<_, Infallible>(\"ok\") });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115212,"byte_end":115289,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/     Ok::<_, Infallible>(svc)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115290,"byte_end":115322,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115323,"byte_end":115329,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115330,"byte_end":115333,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `FutureService`, allowing it to be used","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115334,"byte_end":115403,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ // as a service without awaiting the future's completion:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115404,"byte_end":115465,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/ let mut svc = future_service(Box::pin(future_of_a_service));","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115466,"byte_end":115530,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115531,"byte_end":115534,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Now, when we wait for the service to become ready, it will","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115535,"byte_end":115600,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/ // drive the future to completion internally.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115601,"byte_end":115650,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ let svc = svc.ready().await.unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115651,"byte_end":115692,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ let res = svc.call(()).await.unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115693,"byte_end":115735,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ # };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115736,"byte_end":115744,"line_start":36,"line_end":36,"column_start":1,"column_end":9}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115745,"byte_end":115752,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115753,"byte_end":115760,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115761,"byte_end":115764,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Regarding the [`Unpin`] bound","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115765,"byte_end":115800,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115801,"byte_end":115804,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The [`Unpin`] bound on `F` is necessary because the future will be polled in","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115805,"byte_end":115885,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ [`Service::poll_ready`] which doesn't have a pinned receiver (it takes `&mut self` and not `self:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115886,"byte_end":115987,"line_start":43,"line_end":43,"column_start":1,"column_end":102}},{"value":"/ Pin<&mut Self>`). So we cannot put the future into a `Pin` without requiring `Unpin`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":115988,"byte_end":116077,"line_start":44,"line_end":44,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116078,"byte_end":116081,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This will most likely come up if you're calling `future_service` with an async block. In that","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116082,"byte_end":116179,"line_start":46,"line_end":46,"column_start":1,"column_end":98}},{"value":"/ case you can use `Box::pin(async { ... })` as shown in the example.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116180,"byte_end":116251,"line_start":47,"line_end":47,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2873},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116600,"byte_end":116613,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"FutureService","qualname":"::util::future_service::FutureService","value":"FutureService {  }","parent":null,"children":[{"krate":0,"index":2876}],"decl_id":null,"docs":" A type that implements [`Service`] for a [`Future`] that produces a [`Service`].","sig":null,"attributes":[{"value":"/ A type that implements [`Service`] for a [`Future`] that produces a [`Service`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116438,"byte_end":116522,"line_start":56,"line_end":56,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116523,"byte_end":116526,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ See [`future_service`] for more details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116527,"byte_end":116571,"line_start":58,"line_end":58,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":118399,"byte_end":118402,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<FutureService<F, S>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`FutureService`] for the given future.","sig":null,"attributes":[{"value":"/ Returns a new [`FutureService`] for the given future.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116686,"byte_end":116743,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116748,"byte_end":116751,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ A [`FutureService`] allows you to treat a future that resolves to a service as a service. This","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116756,"byte_end":116854,"line_start":67,"line_end":67,"column_start":5,"column_end":103}},{"value":"/ can be useful for services that are created asynchronously.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116859,"byte_end":116922,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116927,"byte_end":116930,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116935,"byte_end":116948,"line_start":70,"line_end":70,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116953,"byte_end":116960,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ use tower::{service_fn, Service, ServiceExt};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116965,"byte_end":117014,"line_start":72,"line_end":72,"column_start":5,"column_end":54}},{"value":"/ use tower::util::FutureService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117019,"byte_end":117054,"line_start":73,"line_end":73,"column_start":5,"column_end":40}},{"value":"/ use std::convert::Infallible;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117059,"byte_end":117092,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117097,"byte_end":117100,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117105,"byte_end":117122,"line_start":76,"line_end":76,"column_start":5,"column_end":22}},{"value":"/ # async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117127,"byte_end":117140,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"/ // A future which outputs a type implementing `Service`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117145,"byte_end":117205,"line_start":78,"line_end":78,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_service = async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117210,"byte_end":117247,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/     let svc = service_fn(|_req: ()| async { Ok::<_, Infallible>(\"ok\") });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117252,"byte_end":117329,"line_start":80,"line_end":80,"column_start":5,"column_end":82}},{"value":"/     Ok::<_, Infallible>(svc)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117334,"byte_end":117366,"line_start":81,"line_end":81,"column_start":5,"column_end":37}},{"value":"/ };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117371,"byte_end":117377,"line_start":82,"line_end":82,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117382,"byte_end":117385,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Wrap the future with a `FutureService`, allowing it to be used","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117390,"byte_end":117459,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ // as a service without awaiting the future's completion:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117464,"byte_end":117525,"line_start":85,"line_end":85,"column_start":5,"column_end":66}},{"value":"/ let mut svc = FutureService::new(Box::pin(future_of_a_service));","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117530,"byte_end":117598,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117603,"byte_end":117606,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ // Now, when we wait for the service to become ready, it will","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117611,"byte_end":117676,"line_start":88,"line_end":88,"column_start":5,"column_end":70}},{"value":"/ // drive the future to completion internally.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117681,"byte_end":117730,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/ let svc = svc.ready().await.unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117735,"byte_end":117776,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/ let res = svc.call(()).await.unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117781,"byte_end":117823,"line_start":91,"line_end":91,"column_start":5,"column_end":47}},{"value":"/ # };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117828,"byte_end":117836,"line_start":92,"line_end":92,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117841,"byte_end":117848,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117853,"byte_end":117860,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117865,"byte_end":117868,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Regarding the [`Unpin`] bound","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117873,"byte_end":117908,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117913,"byte_end":117916,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The [`Unpin`] bound on `F` is necessary because the future will be polled in","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":117921,"byte_end":118001,"line_start":98,"line_end":98,"column_start":5,"column_end":85}},{"value":"/ [`Service::poll_ready`] which doesn't have a pinned receiver (it takes `&mut self` and not `self:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":118006,"byte_end":118107,"line_start":99,"line_end":99,"column_start":5,"column_end":106}},{"value":"/ Pin<&mut Self>`). So we cannot put the future into a `Pin` without requiring `Unpin`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":118112,"byte_end":118201,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":118206,"byte_end":118209,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This will most likely come up if you're calling `future_service` with an async block. In that","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":118214,"byte_end":118311,"line_start":102,"line_end":102,"column_start":5,"column_end":102}},{"value":"/ case you can use `Box::pin(async { ... })` as shown in the example.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":118316,"byte_end":118387,"line_start":103,"line_end":103,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2894},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":121710,"byte_end":121716,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::util::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":2897},{"krate":0,"index":2898}],"decl_id":null,"docs":" Service returned by the [`map_err`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`map_err`] combinator.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":121576,"byte_end":121627,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":121628,"byte_end":121631,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`map_err`]: crate::util::ServiceExt::map_err","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":121632,"byte_end":121681,"line_start":9,"line_end":9,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2903},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122183,"byte_end":122194,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"MapErrLayer","qualname":"::util::map_err::MapErrLayer","value":"MapErrLayer {  }","parent":null,"children":[{"krate":0,"index":2905}],"decl_id":null,"docs":" A [`Layer`] that produces [`MapErr`] services.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces [`MapErr`] services.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122059,"byte_end":122109,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122110,"byte_end":122113,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122114,"byte_end":122147,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2925},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122341,"byte_end":122353,"line_start":40,"line_end":40,"column_start":14,"column_end":26},"name":"MapErrFuture","qualname":"::util::map_err::MapErrFuture","value":"MapErrFuture {  }","parent":null,"children":[{"krate":0,"index":2928}],"decl_id":null,"docs":" Response future from [`MapErr`] services.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122466,"byte_end":122469,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<MapErr<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapErr`] service.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapErr`] service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122417,"byte_end":122454,"line_start":44,"line_end":44,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122742,"byte_end":122747,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapErr<S, F>>::layer","value":"pub fn layer(F) -> MapErrLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapErr`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapErr`] services.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122535,"byte_end":122597,"line_start":49,"line_end":49,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122602,"byte_end":122605,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapErrLayer::new`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122610,"byte_end":122684,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122689,"byte_end":122692,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122697,"byte_end":122730,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":123447,"byte_end":123450,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<MapErrLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapErrLayer`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapErrLayer`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":123401,"byte_end":123435,"line_start":80,"line_end":80,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2966},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":123975,"byte_end":123985,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"MapRequest","qualname":"::util::map_request::MapRequest","value":"MapRequest {  }","parent":null,"children":[{"krate":0,"index":2969},{"krate":0,"index":2970}],"decl_id":null,"docs":" Service returned by the [`MapRequest`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`MapRequest`] combinator.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":123831,"byte_end":123885,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":123886,"byte_end":123889,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`MapRequest`]: crate::util::ServiceExt::map_request","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":123890,"byte_end":123946,"line_start":8,"line_end":8,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124423,"byte_end":124426,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<MapRequest<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapRequest`] service.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapRequest`] service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124370,"byte_end":124411,"line_start":28,"line_end":28,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124711,"byte_end":124716,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapRequest<S, F>>::layer","value":"pub fn layer(F) -> MapRequestLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapRequest`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapRequest`] services.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124496,"byte_end":124562,"line_start":33,"line_end":33,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124567,"byte_end":124570,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapRequestLayer::new`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124575,"byte_end":124653,"line_start":35,"line_end":35,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124658,"byte_end":124661,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124666,"byte_end":124699,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2975},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":125363,"byte_end":125378,"line_start":67,"line_end":67,"column_start":12,"column_end":27},"name":"MapRequestLayer","qualname":"::util::map_request::MapRequestLayer","value":"MapRequestLayer {  }","parent":null,"children":[{"krate":0,"index":2977}],"decl_id":null,"docs":" A [`Layer`] that produces [`MapRequest`] services.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces [`MapRequest`] services.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":125235,"byte_end":125289,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":125290,"byte_end":125293,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":125294,"byte_end":125327,"line_start":65,"line_end":65,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":125480,"byte_end":125483,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<MapRequestLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapRequestLayer`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapRequestLayer`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":125430,"byte_end":125468,"line_start":72,"line_end":72,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126078,"byte_end":126089,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"MapResponse","qualname":"::util::map_response::MapResponse","value":"MapResponse {  }","parent":null,"children":[{"krate":0,"index":2987},{"krate":0,"index":2988}],"decl_id":null,"docs":" Service returned by the [`map_response`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`map_response`] combinator.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":125929,"byte_end":125985,"line_start":7,"line_end":7,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":125986,"byte_end":125989,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`map_response`]: crate::util::ServiceExt::map_response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":125990,"byte_end":126049,"line_start":9,"line_end":9,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2993},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126572,"byte_end":126588,"line_start":32,"line_end":32,"column_start":12,"column_end":28},"name":"MapResponseLayer","qualname":"::util::map_response::MapResponseLayer","value":"MapResponseLayer {  }","parent":null,"children":[{"krate":0,"index":2995}],"decl_id":null,"docs":" A [`Layer`] that produces a [`MapResponse`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`MapResponse`] service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126442,"byte_end":126498,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126499,"byte_end":126502,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126503,"byte_end":126536,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3015},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126750,"byte_end":126767,"line_start":40,"line_end":40,"column_start":14,"column_end":31},"name":"MapResponseFuture","qualname":"::util::map_response::MapResponseFuture","value":"MapResponseFuture {  }","parent":null,"children":[{"krate":0,"index":3018}],"decl_id":null,"docs":" Response future from [`MapResponse`] services.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126879,"byte_end":126882,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<MapResponse<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MapResponse` service.\n","sig":null,"attributes":[{"value":"/ Creates a new `MapResponse` service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126827,"byte_end":126867,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127170,"byte_end":127175,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapResponse<S, F>>::layer","value":"pub fn layer(F) -> MapResponseLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapResponse`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapResponse`] services.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126953,"byte_end":127020,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127025,"byte_end":127028,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapResponseLayer::new`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127033,"byte_end":127112,"line_start":51,"line_end":51,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127117,"byte_end":127120,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127125,"byte_end":127158,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127900,"byte_end":127903,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<MapResponseLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapResponseLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapResponseLayer`] layer.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127843,"byte_end":127888,"line_start":80,"line_end":80,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3056},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":128491,"byte_end":128500,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"MapResult","qualname":"::util::map_result::MapResult","value":"MapResult {  }","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060}],"decl_id":null,"docs":" Service returned by the [`map_result`] combinator.","sig":null,"attributes":[{"value":"/ Service returned by the [`map_result`] combinator.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":128348,"byte_end":128402,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":128403,"byte_end":128406,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`map_result`]: crate::util::ServiceExt::map_result","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":128407,"byte_end":128462,"line_start":9,"line_end":9,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3065},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":128977,"byte_end":128991,"line_start":32,"line_end":32,"column_start":12,"column_end":26},"name":"MapResultLayer","qualname":"::util::map_result::MapResultLayer","value":"MapResultLayer {  }","parent":null,"children":[{"krate":0,"index":3067}],"decl_id":null,"docs":" A [`Layer`] that produces a [`MapResult`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`MapResult`] service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":128849,"byte_end":128903,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":128904,"byte_end":128907,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":128908,"byte_end":128941,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3087},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129147,"byte_end":129162,"line_start":40,"line_end":40,"column_start":14,"column_end":29},"name":"MapResultFuture","qualname":"::util::map_result::MapResultFuture","value":"MapResultFuture {  }","parent":null,"children":[{"krate":0,"index":3090}],"decl_id":null,"docs":" Response future from [`MapResult`] services.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129270,"byte_end":129273,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<MapResult<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapResult`] service.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapResult`] service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129218,"byte_end":129258,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129555,"byte_end":129560,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapResult<S, F>>::layer","value":"pub fn layer(F) -> MapResultLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapResult`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapResult`] services.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129342,"byte_end":129407,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129412,"byte_end":129415,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapResultLayer::new`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129420,"byte_end":129497,"line_start":51,"line_end":51,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129502,"byte_end":129505,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129510,"byte_end":129543,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":130352,"byte_end":130355,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<MapResultLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapResultLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapResultLayer`] layer.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":130297,"byte_end":130340,"line_start":81,"line_end":81,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":130919,"byte_end":130928,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"MapFuture","qualname":"::util::map_future::MapFuture","value":"MapFuture {  }","parent":null,"children":[{"krate":0,"index":3131},{"krate":0,"index":3132}],"decl_id":null,"docs":" [`Service`] returned by the [`map_future`] combinator.","sig":null,"attributes":[{"value":"/ [`Service`] returned by the [`map_future`] combinator.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":130772,"byte_end":130830,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":130831,"byte_end":130834,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`map_future`]: crate::util::ServiceExt::map_future","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":130835,"byte_end":130890,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131049,"byte_end":131052,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<MapFuture<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapFuture`] service.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapFuture`] service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":130997,"byte_end":131037,"line_start":19,"line_end":19,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131329,"byte_end":131334,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"layer","qualname":"<MapFuture<S, F>>::layer","value":"pub fn layer(F) -> MapFutureLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`MapFuture`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`MapFuture`] services.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131116,"byte_end":131181,"line_start":24,"line_end":24,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131186,"byte_end":131189,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`MapFutureLayer::new`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131194,"byte_end":131271,"line_start":26,"line_end":26,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131276,"byte_end":131279,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131284,"byte_end":131317,"line_start":28,"line_end":28,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131458,"byte_end":131465,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapFuture<S, F>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner service\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131406,"byte_end":131446,"line_start":33,"line_end":33,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131572,"byte_end":131579,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapFuture<S, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner service\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131512,"byte_end":131560,"line_start":38,"line_end":38,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131697,"byte_end":131707,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapFuture<S, F>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consume `self`, returning the inner service\n","sig":null,"attributes":[{"value":"/ Consume `self`, returning the inner service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131638,"byte_end":131685,"line_start":43,"line_end":43,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3137},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":132672,"byte_end":132686,"line_start":85,"line_end":85,"column_start":12,"column_end":26},"name":"MapFutureLayer","qualname":"::util::map_future::MapFutureLayer","value":"MapFutureLayer {  }","parent":null,"children":[{"krate":0,"index":3139}],"decl_id":null,"docs":" A [`Layer`] that produces a [`MapFuture`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`MapFuture`] service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":132551,"byte_end":132605,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":132606,"byte_end":132609,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":132610,"byte_end":132643,"line_start":83,"line_end":83,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":132792,"byte_end":132795,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<MapFutureLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`MapFutureLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`MapFutureLayer`] layer.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":132737,"byte_end":132780,"line_start":90,"line_end":90,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3143},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/oneshot.rs","byte_start":133720,"byte_end":133727,"line_start":16,"line_end":16,"column_start":16,"column_end":23},"name":"Oneshot","qualname":"::util::oneshot::Oneshot","value":"Oneshot {  }","parent":null,"children":[{"krate":0,"index":3146}],"decl_id":null,"docs":" A [`Future`] consuming a [`Service`] and request, waiting until the [`Service`]\n is ready, and then calling [`Service::call`] with the request, and\n waiting for that [`Future`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/oneshot.rs","byte_start":135047,"byte_end":135050,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Oneshot<S, Req>>::new","value":"pub fn new(S, Req) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/oneshot.rs","byte_start":135013,"byte_end":135035,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::util::optional::error","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/error.rs","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":3233},{"krate":0,"index":3236},{"krate":0,"index":1343},{"krate":0,"index":1345},{"krate":0,"index":1347}],"decl_id":null,"docs":" Error types for [`Optional`].\n","sig":null,"attributes":[{"value":"/ Error types for [`Optional`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136164,"byte_end":136197,"line_start":5,"line_end":5,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3233},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/error.rs","byte_start":137836,"byte_end":137840,"line_start":7,"line_end":7,"column_start":12,"column_end":16},"name":"None","qualname":"::util::optional::error::None","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned if the inner [`Service`] has not been set.","sig":null,"attributes":[{"value":"/ Error returned if the inner [`Service`] has not been set.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/error.rs","byte_start":137710,"byte_end":137771,"line_start":3,"line_end":3,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/error.rs","byte_start":137772,"byte_end":137775,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/error.rs","byte_start":137776,"byte_end":137807,"line_start":5,"line_end":5,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::util::optional::future","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/future.rs","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1362},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":3238},{"krate":0,"index":3241},{"krate":0,"index":3244},{"krate":0,"index":1372},{"krate":0,"index":1375}],"decl_id":null,"docs":" Future types for [`Optional`].\n","sig":null,"attributes":[{"value":"/ Future types for [`Optional`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136213,"byte_end":136247,"line_start":7,"line_end":7,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3238},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/future.rs","byte_start":138384,"byte_end":138398,"line_start":15,"line_end":15,"column_start":16,"column_end":30},"name":"ResponseFuture","qualname":"::util::optional::future::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":3240}],"decl_id":null,"docs":" Response future returned by [`Optional`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3274},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136595,"byte_end":136603,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Optional","qualname":"::util::optional::Optional","value":"Optional {  }","parent":null,"children":[{"krate":0,"index":3276}],"decl_id":null,"docs":" Optionally forwards requests to an inner service.","sig":null,"attributes":[{"value":"/ Optionally forwards requests to an inner service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136360,"byte_end":136413,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136414,"byte_end":136417,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the inner service is [`None`], [`optional::None`] is returned as the response.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136418,"byte_end":136503,"line_start":16,"line_end":16,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136504,"byte_end":136507,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`optional::None`]: crate::util::error::optional::None","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136508,"byte_end":136566,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136702,"byte_end":136705,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Optional<T>>::new","value":"pub fn new<Request>(Option<T>) -> Optional<T> where T: Service<Request>,\nT::Error: Into<crate::BoxError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Optional`].\n","sig":null,"attributes":[{"value":"/ Create a new [`Optional`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136660,"byte_end":136690,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139470,"byte_end":139482,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"name":"ReadyOneshot","qualname":"::util::ready::ReadyOneshot","value":"ReadyOneshot {  }","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1439}],"decl_id":null,"docs":" A [`Future`] that yields the service when it is ready to accept a request.","sig":null,"attributes":[{"value":"/ A [`Future`] that yields the service when it is ready to accept a request.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139223,"byte_end":139301,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139302,"byte_end":139305,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`ReadyOneshot`] values are produced by [`ServiceExt::ready_oneshot`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139306,"byte_end":139380,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139381,"byte_end":139384,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`ServiceExt::ready_oneshot`]: crate::util::ServiceExt::ready_oneshot","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139385,"byte_end":139458,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139794,"byte_end":139797,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadyOneshot<T, Request>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139760,"byte_end":139782,"line_start":28,"line_end":28,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":140840,"byte_end":140845,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Ready","qualname":"::util::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future that yields a mutable reference to the service when it is ready to accept a request.","sig":null,"attributes":[{"value":"/ A future that yields a mutable reference to the service when it is ready to accept a request.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":140605,"byte_end":140702,"line_start":65,"line_end":65,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":140703,"byte_end":140706,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`Ready`] values are produced by [`ServiceExt::ready`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":140707,"byte_end":140766,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":140767,"byte_end":140770,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`ServiceExt::ready`]: crate::util::ServiceExt::ready","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":140771,"byte_end":140828,"line_start":69,"line_end":69,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141223,"byte_end":141231,"line_start":78,"line_end":78,"column_start":10,"column_end":18},"name":"ReadyAnd","qualname":"::util::ready::ReadyAnd","value":"Ready","parent":null,"children":[],"decl_id":null,"docs":" A future that yields a mutable reference to the service when it is ready to accept a request.","sig":null,"attributes":[{"value":"/ A future that yields a mutable reference to the service when it is ready to accept a request.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":140898,"byte_end":140995,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":140996,"byte_end":140999,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`ReadyAnd`] values are produced by [`ServiceExt::ready_and`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141000,"byte_end":141066,"line_start":74,"line_end":74,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141067,"byte_end":141070,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`ServiceExt::ready_and`]: crate::util::ServiceExt::ready_and","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141071,"byte_end":141136,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"deprecated(since = \"0.4.6\", note = \"Please use the Ready future instead\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141137,"byte_end":141213,"line_start":77,"line_end":77,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141529,"byte_end":141532,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Ready>::new","value":"pub fn new(&'a mut T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141495,"byte_end":141517,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143203,"byte_end":143213,"line_start":46,"line_end":46,"column_start":8,"column_end":18},"name":"service_fn","qualname":"::util::service_fn::service_fn","value":"pub fn service_fn<T>(T) -> ServiceFn<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`ServiceFn`] with the given closure.","sig":null,"attributes":[{"value":"/ Returns a new [`ServiceFn`] with the given closure.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142188,"byte_end":142243,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142244,"byte_end":142247,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This lets you build a [`Service`] from an async function that returns a [`Result`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142248,"byte_end":142335,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142336,"byte_end":142339,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142340,"byte_end":142353,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142354,"byte_end":142357,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142358,"byte_end":142365,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use tower::{service_fn, Service, ServiceExt, BoxError};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142366,"byte_end":142425,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ # struct Request;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142426,"byte_end":142447,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/ # impl Request {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142448,"byte_end":142468,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142469,"byte_end":142504,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142505,"byte_end":142512,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # struct Response(&'static str);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142513,"byte_end":142549,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ # impl Response {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142550,"byte_end":142571,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"/ #     fn new(body: &'static str) -> Self {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142572,"byte_end":142618,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/ #         Self(body)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142619,"byte_end":142643,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/ #     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142644,"byte_end":142655,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ #     fn into_body(self) -> &'static str { self.0 }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142656,"byte_end":142711,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142712,"byte_end":142719,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142720,"byte_end":142723,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142724,"byte_end":142744,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> Result<(), BoxError> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142745,"byte_end":142792,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ async fn handle(request: Request) -> Result<Response, BoxError> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142793,"byte_end":142862,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/     let response = Response::new(\"Hello, World!\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142863,"byte_end":142917,"line_start":29,"line_end":29,"column_start":1,"column_end":55}},{"value":"/     Ok(response)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142918,"byte_end":142938,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142939,"byte_end":142944,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142945,"byte_end":142948,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut service = service_fn(handle);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142949,"byte_end":142990,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142991,"byte_end":142994,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let response = service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":142995,"byte_end":143021,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/     .ready()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143022,"byte_end":143038,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     .await?","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143039,"byte_end":143054,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/     .call(Request::new())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143055,"byte_end":143084,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/     .await?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143085,"byte_end":143101,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143102,"byte_end":143105,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"Hello, World!\", response.into_body());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143106,"byte_end":143160,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143161,"byte_end":143166,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143167,"byte_end":143179,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143180,"byte_end":143187,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143188,"byte_end":143195,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3280},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143387,"byte_end":143396,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"ServiceFn","qualname":"::util::service_fn::ServiceFn","value":"ServiceFn {  }","parent":null,"children":[{"krate":0,"index":3282}],"decl_id":null,"docs":" A [`Service`] implemented by a closure.","sig":null,"attributes":[{"value":"/ A [`Service`] implemented by a closure.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143264,"byte_end":143307,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143308,"byte_end":143311,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ See [`service_fn`] for more details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143312,"byte_end":143352,"line_start":52,"line_end":52,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3288},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144336,"byte_end":144340,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Then","qualname":"::util::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":3291},{"krate":0,"index":3292}],"decl_id":null,"docs":" [`Service`] returned by the [`then`] combinator.","sig":null,"attributes":[{"value":"/ [`Service`] returned by the [`then`] combinator.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144207,"byte_end":144259,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144260,"byte_end":144263,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`then`]: crate::util::ServiceExt::then","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144264,"byte_end":144307,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144802,"byte_end":144811,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"ThenLayer","qualname":"::util::then::ThenLayer","value":"ThenLayer {  }","parent":null,"children":[{"krate":0,"index":3299}],"decl_id":null,"docs":" A [`Layer`] that produces a [`Then`] service.","sig":null,"attributes":[{"value":"/ A [`Layer`] that produces a [`Then`] service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144679,"byte_end":144728,"line_start":31,"line_end":31,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144729,"byte_end":144732,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144733,"byte_end":144766,"line_start":33,"line_end":33,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144903,"byte_end":144906,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Then<S, F>>::new","value":"pub fn new(S, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Then` service.\n","sig":null,"attributes":[{"value":"/ Creates a new `Then` service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144858,"byte_end":144891,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":145173,"byte_end":145178,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"layer","qualname":"<Then<S, F>>::layer","value":"pub fn layer(F) -> ThenLayer<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`Layer`] that produces [`Then`] services.","sig":null,"attributes":[{"value":"/ Returns a new [`Layer`] that produces [`Then`] services.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144970,"byte_end":145030,"line_start":45,"line_end":45,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":145035,"byte_end":145038,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that simply calls [`ThenLayer::new`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":145043,"byte_end":145115,"line_start":47,"line_end":47,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":145120,"byte_end":145123,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: tower_layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":145128,"byte_end":145161,"line_start":49,"line_end":49,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3322},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":145358,"byte_end":145368,"line_start":59,"line_end":59,"column_start":14,"column_end":24},"name":"ThenFuture","qualname":"::util::then::ThenFuture","value":"ThenFuture {  }","parent":null,"children":[{"krate":0,"index":3326}],"decl_id":null,"docs":" Response future from [`Then`] services.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":146151,"byte_end":146154,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<ThenLayer<F>>::new","value":"pub fn new(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`ThenLayer`] layer.\n","sig":null,"attributes":[{"value":"/ Creates a new [`ThenLayer`] layer.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":146101,"byte_end":146139,"line_start":85,"line_end":85,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":1685},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48913,"byte_end":48918,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"error","qualname":"::util::error","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","parent":null,"children":[{"krate":0,"index":1686}],"decl_id":null,"docs":" Error types\n","sig":null,"attributes":[{"value":"/ Error types","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":48925,"byte_end":48940,"line_start":47,"line_end":47,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49001,"byte_end":49007,"line_start":52,"line_end":52,"column_start":9,"column_end":15},"name":"future","qualname":"::util::future","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":1705}],"decl_id":null,"docs":" Future types\n","sig":null,"attributes":[{"value":"/ Future types","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49014,"byte_end":49030,"line_start":53,"line_end":53,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49406,"byte_end":49416,"line_start":65,"line_end":65,"column_start":11,"column_end":21},"name":"ServiceExt","qualname":"::util::ServiceExt","value":"ServiceExt<Request>: tower_service::Service<Request>","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1718},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":1736},{"krate":0,"index":1741},{"krate":0,"index":1742}],"decl_id":null,"docs":" An extension trait for `Service`s that provides a variety of convenient\n adapters\n","sig":null,"attributes":[{"value":"/ An extension trait for `Service`s that provides a variety of convenient","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49307,"byte_end":49382,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ adapters","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49383,"byte_end":49395,"line_start":64,"line_end":64,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49556,"byte_end":49561,"line_start":67,"line_end":67,"column_start":8,"column_end":13},"name":"ready","qualname":"::util::ServiceExt::ready","value":"pub fn ready(&mut Self) -> Ready<, Self, Request> where Self: Sized","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Yields a mutable reference to the service when it is ready to accept a request.\n","sig":null,"attributes":[{"value":"/ Yields a mutable reference to the service when it is ready to accept a request.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49465,"byte_end":49548,"line_start":66,"line_end":66,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49907,"byte_end":49916,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"ready_and","qualname":"::util::ServiceExt::ready_and","value":"pub fn ready_and(&mut Self) -> ReadyAnd<, Self, Request> where Self: Sized","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Yields a mutable reference to the service when it is ready to accept a request.\n","sig":null,"attributes":[{"value":"/ Yields a mutable reference to the service when it is ready to accept a request.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49674,"byte_end":49757,"line_start":74,"line_end":74,"column_start":5,"column_end":88}},{"value":"deprecated(since = \"0.4.6\", note =\n             \"please use the `ServiceExt::ready` method instead\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49762,"byte_end":49874,"line_start":75,"line_end":78,"column_start":5,"column_end":7}},{"value":"allow(deprecated)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49879,"byte_end":49899,"line_start":79,"line_end":79,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50103,"byte_end":50116,"line_start":88,"line_end":88,"column_start":8,"column_end":21},"name":"ready_oneshot","qualname":"::util::ServiceExt::ready_oneshot","value":"pub fn ready_oneshot(Self) -> ReadyOneshot<Self, Request> where Self: Sized","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Yields the service when it is ready to accept a request.\n","sig":null,"attributes":[{"value":"/ Yields the service when it is ready to accept a request.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50035,"byte_end":50095,"line_start":87,"line_end":87,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50322,"byte_end":50329,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"oneshot","qualname":"::util::ServiceExt::oneshot","value":"pub fn oneshot(Self, Request) -> Oneshot<Self, Request> where Self: Sized","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Consume this `Service`, calling with the providing request once it is ready.\n","sig":null,"attributes":[{"value":"/ Consume this `Service`, calling with the providing request once it is ready.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50234,"byte_end":50314,"line_start":95,"line_end":95,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50921,"byte_end":50929,"line_start":111,"line_end":111,"column_start":8,"column_end":16},"name":"call_all","qualname":"::util::ServiceExt::call_all","value":"pub fn call_all<S>(Self, S) -> CallAll<Self, S> where Self: Sized,\nSelf::Error: Into<crate::BoxError>, S: futures_core::Stream<Item = Request>","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Process all requests from the given [`Stream`], and produce a [`Stream`] of their responses.","sig":null,"attributes":[{"value":"/ Process all requests from the given [`Stream`], and produce a [`Stream`] of their responses.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50456,"byte_end":50552,"line_start":103,"line_end":103,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50557,"byte_end":50560,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This is essentially [`Stream<Item = Request>`][stream] + `Self` => [`Stream<Item =","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50565,"byte_end":50651,"line_start":105,"line_end":105,"column_start":5,"column_end":91}},{"value":"/ Response>`][stream]. See the documentation for [`CallAll`] for","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50656,"byte_end":50722,"line_start":106,"line_end":106,"column_start":5,"column_end":71}},{"value":"/ details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50727,"byte_end":50739,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50744,"byte_end":50747,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50752,"byte_end":50831,"line_start":109,"line_end":109,"column_start":5,"column_end":84}},{"value":"/ [stream]: https://docs.rs/futures/latest/futures/stream/trait.Stream.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":50836,"byte_end":50913,"line_start":110,"line_end":110,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53202,"byte_end":53210,"line_start":180,"line_end":180,"column_start":8,"column_end":16},"name":"and_then","qualname":"::util::ServiceExt::and_then","value":"pub fn and_then<F>(Self, F) -> AndThen<Self, F> where Self: Sized, F: Clone","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Executes a new future after this service's future resolves. This does\n not alter the behaviour of the [`poll_ready`] method.","sig":null,"attributes":[{"value":"/ Executes a new future after this service's future resolves. This does","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51142,"byte_end":51215,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/ not alter the behaviour of the [`poll_ready`] method.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51220,"byte_end":51277,"line_start":121,"line_end":121,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51282,"byte_end":51285,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51290,"byte_end":51364,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ into a different type. You can use this method to chain along a computation once the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51369,"byte_end":51457,"line_start":124,"line_end":124,"column_start":5,"column_end":93}},{"value":"/ service's response has been resolved.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51462,"byte_end":51503,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51508,"byte_end":51511,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51516,"byte_end":51558,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51563,"byte_end":51609,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51614,"byte_end":51617,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51622,"byte_end":51635,"line_start":130,"line_end":130,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51640,"byte_end":51647,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51652,"byte_end":51689,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51694,"byte_end":51733,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51738,"byte_end":51743,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51748,"byte_end":51777,"line_start":135,"line_end":135,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51782,"byte_end":51810,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51815,"byte_end":51854,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51859,"byte_end":51886,"line_start":138,"line_end":138,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51891,"byte_end":51900,"line_start":139,"line_end":139,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51905,"byte_end":51912,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51917,"byte_end":51922,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ # struct Record {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51927,"byte_end":51948,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ #   pub name: String,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51953,"byte_end":51978,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ #   pub age: u16","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":51983,"byte_end":52003,"line_start":144,"line_end":144,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52008,"byte_end":52015,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52020,"byte_end":52025,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52030,"byte_end":52075,"line_start":147,"line_end":147,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52080,"byte_end":52111,"line_start":148,"line_end":148,"column_start":5,"column_end":36}},{"value":"/ #   type Error = u8;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52116,"byte_end":52140,"line_start":149,"line_end":149,"column_start":5,"column_end":29}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, u8>>;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52145,"byte_end":52215,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52220,"byte_end":52225,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52230,"byte_end":52319,"line_start":152,"line_end":152,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52324,"byte_end":52355,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52360,"byte_end":52369,"line_start":154,"line_end":154,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52374,"byte_end":52379,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52384,"byte_end":52442,"line_start":156,"line_end":156,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(Record { name: \"Jack\".into(), age: 32 }))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52447,"byte_end":52531,"line_start":157,"line_end":157,"column_start":5,"column_end":89}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52536,"byte_end":52545,"line_start":158,"line_end":158,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52550,"byte_end":52557,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52562,"byte_end":52567,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ # async fn avatar_lookup(name: String) -> Result<Vec<u8>, u8> { Ok(vec![]) }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52572,"byte_end":52652,"line_start":161,"line_end":161,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52657,"byte_end":52662,"line_start":162,"line_end":162,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52667,"byte_end":52684,"line_start":163,"line_end":163,"column_start":5,"column_end":22}},{"value":"/ #    async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52689,"byte_end":52705,"line_start":164,"line_end":164,"column_start":5,"column_end":21}},{"value":"/ // A service returning Result<Record, _>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52710,"byte_end":52754,"line_start":165,"line_end":165,"column_start":5,"column_end":49}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52759,"byte_end":52816,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52821,"byte_end":52824,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Map the response into a new response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52829,"byte_end":52872,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/ let mut new_service = service.and_then(|record: Record| async move {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52877,"byte_end":52949,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/     let name = record.name;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52954,"byte_end":52985,"line_start":170,"line_end":170,"column_start":5,"column_end":36}},{"value":"/     avatar_lookup(name).await","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":52990,"byte_end":53023,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53028,"byte_end":53035,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53040,"byte_end":53043,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53048,"byte_end":53075,"line_start":174,"line_end":174,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53080,"byte_end":53096,"line_start":175,"line_end":175,"column_start":5,"column_end":21}},{"value":"/ let avatar = new_service.call(id).await.unwrap();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53101,"byte_end":53154,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ #    };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53159,"byte_end":53170,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53175,"byte_end":53182,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53187,"byte_end":53194,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55352,"byte_end":55364,"line_start":249,"line_end":249,"column_start":8,"column_end":20},"name":"map_response","qualname":"::util::ServiceExt::map_response","value":"pub fn map_response<F, Response>(Self, F) -> MapResponse<Self, F> where\nSelf: Sized, F: FnOnce(Self::Response) -> Response + Clone","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Maps this service's response value to a different value. This does not\n alter the behaviour of the [`poll_ready`] method.","sig":null,"attributes":[{"value":"/ Maps this service's response value to a different value. This does not","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53342,"byte_end":53416,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ alter the behaviour of the [`poll_ready`] method.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53421,"byte_end":53474,"line_start":189,"line_end":189,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53479,"byte_end":53482,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53487,"byte_end":53561,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53566,"byte_end":53629,"line_start":192,"line_end":192,"column_start":5,"column_end":68}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53634,"byte_end":53707,"line_start":193,"line_end":193,"column_start":5,"column_end":78}},{"value":"/ service's response has been resolved.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53712,"byte_end":53753,"line_start":194,"line_end":194,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53758,"byte_end":53761,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53766,"byte_end":53808,"line_start":196,"line_end":196,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53813,"byte_end":53859,"line_start":197,"line_end":197,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53864,"byte_end":53867,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53872,"byte_end":53885,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53890,"byte_end":53897,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53902,"byte_end":53939,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53944,"byte_end":53983,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53988,"byte_end":53993,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":53998,"byte_end":54027,"line_start":204,"line_end":204,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54032,"byte_end":54060,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54065,"byte_end":54104,"line_start":206,"line_end":206,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54109,"byte_end":54136,"line_start":207,"line_end":207,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54141,"byte_end":54150,"line_start":208,"line_end":208,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54155,"byte_end":54162,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54167,"byte_end":54172,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # struct Record {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54177,"byte_end":54198,"line_start":211,"line_end":211,"column_start":5,"column_end":26}},{"value":"/ #   pub name: String,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54203,"byte_end":54228,"line_start":212,"line_end":212,"column_start":5,"column_end":30}},{"value":"/ #   pub age: u16","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54233,"byte_end":54253,"line_start":213,"line_end":213,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54258,"byte_end":54265,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54270,"byte_end":54275,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54280,"byte_end":54325,"line_start":216,"line_end":216,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54330,"byte_end":54361,"line_start":217,"line_end":217,"column_start":5,"column_end":36}},{"value":"/ #   type Error = u8;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54366,"byte_end":54390,"line_start":218,"line_end":218,"column_start":5,"column_end":29}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, u8>>;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54395,"byte_end":54465,"line_start":219,"line_end":219,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54470,"byte_end":54475,"line_start":220,"line_end":220,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54480,"byte_end":54569,"line_start":221,"line_end":221,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54574,"byte_end":54605,"line_start":222,"line_end":222,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54610,"byte_end":54619,"line_start":223,"line_end":223,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54624,"byte_end":54629,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54634,"byte_end":54692,"line_start":225,"line_end":225,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(Record { name: \"Jack\".into(), age: 32 }))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54697,"byte_end":54781,"line_start":226,"line_end":226,"column_start":5,"column_end":89}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54786,"byte_end":54795,"line_start":227,"line_end":227,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54800,"byte_end":54807,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54812,"byte_end":54817,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54822,"byte_end":54839,"line_start":230,"line_end":230,"column_start":5,"column_end":22}},{"value":"/ #    async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54844,"byte_end":54860,"line_start":231,"line_end":231,"column_start":5,"column_end":21}},{"value":"/ // A service returning Result<Record, _>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54865,"byte_end":54909,"line_start":232,"line_end":232,"column_start":5,"column_end":49}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54914,"byte_end":54971,"line_start":233,"line_end":233,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54976,"byte_end":54979,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ // Map the response into a new response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":54984,"byte_end":55027,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/ let mut new_service = service.map_response(|record| record.name);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55032,"byte_end":55101,"line_start":236,"line_end":236,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55106,"byte_end":55109,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55114,"byte_end":55141,"line_start":238,"line_end":238,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55146,"byte_end":55162,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ let name = new_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55167,"byte_end":55193,"line_start":240,"line_end":240,"column_start":5,"column_end":31}},{"value":"/     .ready()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55198,"byte_end":55214,"line_start":241,"line_end":241,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55219,"byte_end":55234,"line_start":242,"line_end":242,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55239,"byte_end":55256,"line_start":243,"line_end":243,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55261,"byte_end":55277,"line_start":244,"line_end":244,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), u8>(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55282,"byte_end":55304,"line_start":245,"line_end":245,"column_start":5,"column_end":27}},{"value":"/ #    };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55309,"byte_end":55320,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55325,"byte_end":55332,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55337,"byte_end":55344,"line_start":248,"line_end":248,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57424,"byte_end":57431,"line_start":317,"line_end":317,"column_start":8,"column_end":15},"name":"map_err","qualname":"::util::ServiceExt::map_err","value":"pub fn map_err<F, Error>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Error + Clone","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Maps this service's error value to a different value. This does not\n alter the behaviour of the [`poll_ready`] method.","sig":null,"attributes":[{"value":"/ Maps this service's error value to a different value. This does not","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55551,"byte_end":55622,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/ alter the behaviour of the [`poll_ready`] method.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55627,"byte_end":55680,"line_start":258,"line_end":258,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55685,"byte_end":55688,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`] type of the service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55693,"byte_end":55764,"line_start":260,"line_end":260,"column_start":5,"column_end":76}},{"value":"/ into a different type. It is similar to the [`Result::map_err`] method.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55769,"byte_end":55844,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55849,"byte_end":55852,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`Error`]: crate::Service::Error","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55857,"byte_end":55893,"line_start":263,"line_end":263,"column_start":5,"column_end":41}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55898,"byte_end":55944,"line_start":264,"line_end":264,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55949,"byte_end":55952,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55957,"byte_end":55970,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55975,"byte_end":55982,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":55987,"byte_end":56024,"line_start":268,"line_end":268,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56029,"byte_end":56068,"line_start":269,"line_end":269,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56073,"byte_end":56078,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56083,"byte_end":56112,"line_start":271,"line_end":271,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56117,"byte_end":56145,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56150,"byte_end":56189,"line_start":273,"line_end":273,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56194,"byte_end":56221,"line_start":274,"line_end":274,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56226,"byte_end":56235,"line_start":275,"line_end":275,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56240,"byte_end":56247,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56252,"byte_end":56257,"line_start":277,"line_end":277,"column_start":5,"column_end":10}},{"value":"/ # struct Error {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56262,"byte_end":56282,"line_start":278,"line_end":278,"column_start":5,"column_end":25}},{"value":"/ #   pub code: u32,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56287,"byte_end":56309,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/ #   pub message: String","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56314,"byte_end":56341,"line_start":280,"line_end":280,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56346,"byte_end":56353,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56358,"byte_end":56363,"line_start":282,"line_end":282,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56368,"byte_end":56413,"line_start":283,"line_end":283,"column_start":5,"column_end":50}},{"value":"/ #   type Response = String;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56418,"byte_end":56449,"line_start":284,"line_end":284,"column_start":5,"column_end":36}},{"value":"/ #   type Error = Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56454,"byte_end":56481,"line_start":285,"line_end":285,"column_start":5,"column_end":32}},{"value":"/ #   type Future = futures_util::future::Ready<Result<String, Error>>;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56486,"byte_end":56559,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56564,"byte_end":56569,"line_start":287,"line_end":287,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56574,"byte_end":56663,"line_start":288,"line_end":288,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56668,"byte_end":56699,"line_start":289,"line_end":289,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56704,"byte_end":56713,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56718,"byte_end":56723,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56728,"byte_end":56786,"line_start":292,"line_end":292,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(String::new()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56791,"byte_end":56849,"line_start":293,"line_end":293,"column_start":5,"column_end":63}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56854,"byte_end":56863,"line_start":294,"line_end":294,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56868,"byte_end":56875,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56880,"byte_end":56885,"line_start":296,"line_end":296,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56890,"byte_end":56907,"line_start":297,"line_end":297,"column_start":5,"column_end":22}},{"value":"/ #   async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56912,"byte_end":56927,"line_start":298,"line_end":298,"column_start":5,"column_end":20}},{"value":"/ // A service returning Result<_, Error>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56932,"byte_end":56975,"line_start":299,"line_end":299,"column_start":5,"column_end":48}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":56980,"byte_end":57037,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57042,"byte_end":57045,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ // Map the error to a new error","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57050,"byte_end":57085,"line_start":302,"line_end":302,"column_start":5,"column_end":40}},{"value":"/ let mut new_service = service.map_err(|err| err.code);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57090,"byte_end":57148,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57153,"byte_end":57156,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57161,"byte_end":57188,"line_start":305,"line_end":305,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57193,"byte_end":57209,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/ let code = new_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57214,"byte_end":57240,"line_start":307,"line_end":307,"column_start":5,"column_end":31}},{"value":"/     .ready()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57245,"byte_end":57261,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57266,"byte_end":57281,"line_start":309,"line_end":309,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57286,"byte_end":57303,"line_start":310,"line_end":310,"column_start":5,"column_end":22}},{"value":"/     .await","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57308,"byte_end":57322,"line_start":311,"line_end":311,"column_start":5,"column_end":19}},{"value":"/     .unwrap_err();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57327,"byte_end":57349,"line_start":312,"line_end":312,"column_start":5,"column_end":27}},{"value":"/ # Ok::<(), u32>(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57354,"byte_end":57377,"line_start":313,"line_end":313,"column_start":5,"column_end":28}},{"value":"/ #   };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57382,"byte_end":57392,"line_start":314,"line_end":314,"column_start":5,"column_end":15}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57397,"byte_end":57404,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57409,"byte_end":57416,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65465,"byte_end":65475,"line_start":546,"line_end":546,"column_start":8,"column_end":18},"name":"map_result","qualname":"::util::ServiceExt::map_result","value":"pub fn map_result<F, Response, Error>(Self, F) -> MapResult<Self, F> where\nSelf: Sized, Error: From<Self::Error>,\nF: FnOnce(Result<Self::Response, Self::Error>) -> Result<Response, Error> +\nClone","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Maps this service's result type (`Result<Self::Response, Self::Error>`)\n to a different value, regardless of whether the future succeeds or\n fails.","sig":null,"attributes":[{"value":"/ Maps this service's result type (`Result<Self::Response, Self::Error>`)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57599,"byte_end":57674,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ to a different value, regardless of whether the future succeeds or","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57679,"byte_end":57749,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ fails.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57754,"byte_end":57764,"line_start":327,"line_end":327,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57769,"byte_end":57772,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`map_response`] and [`map_err`] combinators,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57777,"byte_end":57849,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ except that the *same* function is invoked when the service's future","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57854,"byte_end":57926,"line_start":330,"line_end":330,"column_start":5,"column_end":77}},{"value":"/ completes, whether it completes successfully or fails. This function","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":57931,"byte_end":58003,"line_start":331,"line_end":331,"column_start":5,"column_end":77}},{"value":"/ takes the [`Result`] returned by the service's future, and returns a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58008,"byte_end":58080,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/ [`Result`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58085,"byte_end":58100,"line_start":333,"line_end":333,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58105,"byte_end":58108,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Like the standard library's [`Result::and_then`], this method can be","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58113,"byte_end":58185,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ used to implement control flow based on `Result` values. For example, it","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58190,"byte_end":58266,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/ may be used to implement error recovery, by turning some [`Err`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58271,"byte_end":58339,"line_start":337,"line_end":337,"column_start":5,"column_end":73}},{"value":"/ responses from the service into [`Ok`] responses. Similarly, some","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58344,"byte_end":58413,"line_start":338,"line_end":338,"column_start":5,"column_end":74}},{"value":"/ successful responses from the service could be rejected, by returning an","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58418,"byte_end":58494,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/ [`Err`] conditionally, depending on the value inside the [`Ok`.] Finally,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58499,"byte_end":58576,"line_start":340,"line_end":340,"column_start":5,"column_end":82}},{"value":"/ this method can also be used to implement behaviors that must run when a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58581,"byte_end":58657,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ service's future completes, regardless of whether it succeeded or failed.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58662,"byte_end":58739,"line_start":342,"line_end":342,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58744,"byte_end":58747,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58752,"byte_end":58826,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/ into a different type. It can also be used to change the [`Error`] type","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58831,"byte_end":58906,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ of the service. However, because the [`map_result`] function is not applied","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58911,"byte_end":58990,"line_start":346,"line_end":346,"column_start":5,"column_end":84}},{"value":"/ to the errors returned by the service's [`poll_ready`] method, it must","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":58995,"byte_end":59069,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ be possible to convert the service's [`Error`] type into the error type","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59074,"byte_end":59149,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ returned by the [`map_result`] function. This is trivial when the function","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59154,"byte_end":59232,"line_start":349,"line_end":349,"column_start":5,"column_end":83}},{"value":"/ returns the same error type as the service, but in other cases, it can","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59237,"byte_end":59311,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ be useful to use [`BoxError`] to erase differing error types.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59316,"byte_end":59381,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59386,"byte_end":59389,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59394,"byte_end":59408,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59413,"byte_end":59416,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Recovering from certain errors:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59421,"byte_end":59456,"line_start":355,"line_end":355,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59461,"byte_end":59464,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59469,"byte_end":59476,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59481,"byte_end":59518,"line_start":358,"line_end":358,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59523,"byte_end":59562,"line_start":359,"line_end":359,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59567,"byte_end":59572,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59577,"byte_end":59606,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59611,"byte_end":59639,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59644,"byte_end":59683,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59688,"byte_end":59715,"line_start":364,"line_end":364,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59720,"byte_end":59729,"line_start":365,"line_end":365,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59734,"byte_end":59741,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59746,"byte_end":59751,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/ # struct Record {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59756,"byte_end":59777,"line_start":368,"line_end":368,"column_start":5,"column_end":26}},{"value":"/ #   pub name: String,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59782,"byte_end":59807,"line_start":369,"line_end":369,"column_start":5,"column_end":30}},{"value":"/ #   pub age: u16","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59812,"byte_end":59832,"line_start":370,"line_end":370,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59837,"byte_end":59844,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59849,"byte_end":59871,"line_start":372,"line_end":372,"column_start":5,"column_end":27}},{"value":"/ # enum DbError {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59876,"byte_end":59896,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/ #   Parse(std::num::ParseIntError),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59901,"byte_end":59940,"line_start":374,"line_end":374,"column_start":5,"column_end":44}},{"value":"/ #   NoRecordsFound,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59945,"byte_end":59968,"line_start":375,"line_end":375,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59973,"byte_end":59980,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59985,"byte_end":59990,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":59995,"byte_end":60040,"line_start":378,"line_end":378,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Vec<Record>;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60045,"byte_end":60081,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ #   type Error = DbError;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60086,"byte_end":60115,"line_start":380,"line_end":380,"column_start":5,"column_end":34}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Vec<Record>, DbError>>;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60120,"byte_end":60200,"line_start":381,"line_end":381,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60205,"byte_end":60210,"line_start":382,"line_end":382,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60215,"byte_end":60304,"line_start":383,"line_end":383,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60309,"byte_end":60340,"line_start":384,"line_end":384,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60345,"byte_end":60354,"line_start":385,"line_end":385,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60359,"byte_end":60364,"line_start":386,"line_end":386,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60369,"byte_end":60427,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(vec![Record { name: \"Jack\".into(), age: 32 }]))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60432,"byte_end":60522,"line_start":388,"line_end":388,"column_start":5,"column_end":95}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60527,"byte_end":60536,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60541,"byte_end":60548,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60553,"byte_end":60558,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60563,"byte_end":60580,"line_start":392,"line_end":392,"column_start":5,"column_end":22}},{"value":"/ #    async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60585,"byte_end":60601,"line_start":393,"line_end":393,"column_start":5,"column_end":21}},{"value":"/ // A service returning Result<Vec<Record>, DbError>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60606,"byte_end":60661,"line_start":394,"line_end":394,"column_start":5,"column_end":60}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60666,"byte_end":60723,"line_start":395,"line_end":395,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60728,"byte_end":60731,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ // If the database returns no records for the query, we just want an empty `Vec`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60736,"byte_end":60821,"line_start":397,"line_end":397,"column_start":5,"column_end":90}},{"value":"/ let mut new_service = service.map_result(|result| match result {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60826,"byte_end":60894,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/     // If the error indicates that no records matched the query, return an empty","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60899,"byte_end":60983,"line_start":399,"line_end":399,"column_start":5,"column_end":89}},{"value":"/     // `Vec` instead.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":60988,"byte_end":61013,"line_start":400,"line_end":400,"column_start":5,"column_end":30}},{"value":"/     Err(DbError::NoRecordsFound) => Ok(Vec::new()),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61018,"byte_end":61073,"line_start":401,"line_end":401,"column_start":5,"column_end":60}},{"value":"/     // Propagate all other responses (`Ok` and `Err`) unchanged","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61078,"byte_end":61145,"line_start":402,"line_end":402,"column_start":5,"column_end":72}},{"value":"/     x => x,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61150,"byte_end":61165,"line_start":403,"line_end":403,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61170,"byte_end":61177,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61182,"byte_end":61185,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61190,"byte_end":61217,"line_start":406,"line_end":406,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61222,"byte_end":61238,"line_start":407,"line_end":407,"column_start":5,"column_end":21}},{"value":"/ let name = new_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61243,"byte_end":61269,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/     .ready()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61274,"byte_end":61290,"line_start":409,"line_end":409,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61295,"byte_end":61310,"line_start":410,"line_end":410,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61315,"byte_end":61332,"line_start":411,"line_end":411,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61337,"byte_end":61353,"line_start":412,"line_end":412,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), DbError>(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61358,"byte_end":61385,"line_start":413,"line_end":413,"column_start":5,"column_end":32}},{"value":"/ #    };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61390,"byte_end":61401,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61406,"byte_end":61413,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61418,"byte_end":61425,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61430,"byte_end":61433,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Rejecting some `Ok` responses:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61438,"byte_end":61472,"line_start":418,"line_end":418,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61477,"byte_end":61480,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61485,"byte_end":61492,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61497,"byte_end":61534,"line_start":421,"line_end":421,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61539,"byte_end":61578,"line_start":422,"line_end":422,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61583,"byte_end":61588,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61593,"byte_end":61622,"line_start":424,"line_end":424,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61627,"byte_end":61655,"line_start":425,"line_end":425,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61660,"byte_end":61699,"line_start":426,"line_end":426,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61704,"byte_end":61731,"line_start":427,"line_end":427,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61736,"byte_end":61745,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61750,"byte_end":61757,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61762,"byte_end":61767,"line_start":430,"line_end":430,"column_start":5,"column_end":10}},{"value":"/ # struct Record {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61772,"byte_end":61793,"line_start":431,"line_end":431,"column_start":5,"column_end":26}},{"value":"/ #   pub name: String,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61798,"byte_end":61823,"line_start":432,"line_end":432,"column_start":5,"column_end":30}},{"value":"/ #   pub age: u16","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61828,"byte_end":61848,"line_start":433,"line_end":433,"column_start":5,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61853,"byte_end":61860,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ # type DbError = String;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61865,"byte_end":61893,"line_start":435,"line_end":435,"column_start":5,"column_end":33}},{"value":"/ # type AppError = String;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61898,"byte_end":61927,"line_start":436,"line_end":436,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61932,"byte_end":61937,"line_start":437,"line_end":437,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61942,"byte_end":61987,"line_start":438,"line_end":438,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":61992,"byte_end":62023,"line_start":439,"line_end":439,"column_start":5,"column_end":36}},{"value":"/ #   type Error = DbError;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62028,"byte_end":62057,"line_start":440,"line_end":440,"column_start":5,"column_end":34}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, DbError>>;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62062,"byte_end":62137,"line_start":441,"line_end":441,"column_start":5,"column_end":80}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62142,"byte_end":62147,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62152,"byte_end":62241,"line_start":443,"line_end":443,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62246,"byte_end":62277,"line_start":444,"line_end":444,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62282,"byte_end":62291,"line_start":445,"line_end":445,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62296,"byte_end":62301,"line_start":446,"line_end":446,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62306,"byte_end":62364,"line_start":447,"line_end":447,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(Record { name: \"Jack\".into(), age: 32 }))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62369,"byte_end":62453,"line_start":448,"line_end":448,"column_start":5,"column_end":89}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62458,"byte_end":62467,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62472,"byte_end":62479,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62484,"byte_end":62489,"line_start":451,"line_end":451,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62494,"byte_end":62511,"line_start":452,"line_end":452,"column_start":5,"column_end":22}},{"value":"/ #    async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62516,"byte_end":62532,"line_start":453,"line_end":453,"column_start":5,"column_end":21}},{"value":"/ use tower::BoxError;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62537,"byte_end":62561,"line_start":454,"line_end":454,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62566,"byte_end":62569,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ // A service returning Result<Record, DbError>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62574,"byte_end":62624,"line_start":456,"line_end":456,"column_start":5,"column_end":55}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62629,"byte_end":62686,"line_start":457,"line_end":457,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62691,"byte_end":62694,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ // If the user is zero years old, return an error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62699,"byte_end":62753,"line_start":459,"line_end":459,"column_start":5,"column_end":59}},{"value":"/ let mut new_service = service.map_result(|result| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62758,"byte_end":62813,"line_start":460,"line_end":460,"column_start":5,"column_end":60}},{"value":"/    let record = result?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62818,"byte_end":62846,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62851,"byte_end":62854,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/    if record.age == 0 {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62859,"byte_end":62886,"line_start":463,"line_end":463,"column_start":5,"column_end":32}},{"value":"/         // Users must have been born to use our app!","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62891,"byte_end":62947,"line_start":464,"line_end":464,"column_start":5,"column_end":61}},{"value":"/         let app_error = AppError::from(\"users cannot be 0 years old!\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":62952,"byte_end":63027,"line_start":465,"line_end":465,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63032,"byte_end":63035,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/         // Box the error to erase its type (as it can be an `AppError`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63040,"byte_end":63114,"line_start":467,"line_end":467,"column_start":5,"column_end":79}},{"value":"/         // *or* the inner service's `DbError`).","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63119,"byte_end":63170,"line_start":468,"line_end":468,"column_start":5,"column_end":56}},{"value":"/         return Err(BoxError::from(app_error));","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63175,"byte_end":63225,"line_start":469,"line_end":469,"column_start":5,"column_end":55}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63230,"byte_end":63239,"line_start":470,"line_end":470,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63244,"byte_end":63247,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     // Otherwise, return the record.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63252,"byte_end":63292,"line_start":472,"line_end":472,"column_start":5,"column_end":45}},{"value":"/     Ok(record)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63297,"byte_end":63315,"line_start":473,"line_end":473,"column_start":5,"column_end":23}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63320,"byte_end":63327,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63332,"byte_end":63335,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63340,"byte_end":63367,"line_start":476,"line_end":476,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63372,"byte_end":63388,"line_start":477,"line_end":477,"column_start":5,"column_end":21}},{"value":"/ let record = new_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63393,"byte_end":63421,"line_start":478,"line_end":478,"column_start":5,"column_end":33}},{"value":"/     .ready()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63426,"byte_end":63442,"line_start":479,"line_end":479,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63447,"byte_end":63462,"line_start":480,"line_end":480,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63467,"byte_end":63484,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63489,"byte_end":63505,"line_start":482,"line_end":482,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), BoxError>(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63510,"byte_end":63538,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/ #    };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63543,"byte_end":63554,"line_start":484,"line_end":484,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63559,"byte_end":63566,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63571,"byte_end":63578,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63583,"byte_end":63586,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Performing an action that must be run for both successes and failures:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63591,"byte_end":63665,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63670,"byte_end":63673,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63678,"byte_end":63685,"line_start":490,"line_end":490,"column_start":5,"column_end":12}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63690,"byte_end":63722,"line_start":491,"line_end":491,"column_start":5,"column_end":37}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63727,"byte_end":63764,"line_start":492,"line_end":492,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63769,"byte_end":63808,"line_start":493,"line_end":493,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63813,"byte_end":63818,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63823,"byte_end":63852,"line_start":495,"line_end":495,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63857,"byte_end":63885,"line_start":496,"line_end":496,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63890,"byte_end":63929,"line_start":497,"line_end":497,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63934,"byte_end":63961,"line_start":498,"line_end":498,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63966,"byte_end":63975,"line_start":499,"line_end":499,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63980,"byte_end":63987,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":63992,"byte_end":63997,"line_start":501,"line_end":501,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64002,"byte_end":64047,"line_start":502,"line_end":502,"column_start":5,"column_end":50}},{"value":"/ #   type Response = String;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64052,"byte_end":64083,"line_start":503,"line_end":503,"column_start":5,"column_end":36}},{"value":"/ #   type Error = u8;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64088,"byte_end":64112,"line_start":504,"line_end":504,"column_start":5,"column_end":29}},{"value":"/ #   type Future = futures_util::future::Ready<Result<String, u8>>;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64117,"byte_end":64187,"line_start":505,"line_end":505,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64192,"byte_end":64197,"line_start":506,"line_end":506,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64202,"byte_end":64291,"line_start":507,"line_end":507,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64296,"byte_end":64327,"line_start":508,"line_end":508,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64332,"byte_end":64341,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64346,"byte_end":64351,"line_start":510,"line_end":510,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64356,"byte_end":64414,"line_start":511,"line_end":511,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(String::new()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64419,"byte_end":64477,"line_start":512,"line_end":512,"column_start":5,"column_end":63}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64482,"byte_end":64491,"line_start":513,"line_end":513,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64496,"byte_end":64503,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64508,"byte_end":64513,"line_start":515,"line_end":515,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64518,"byte_end":64535,"line_start":516,"line_end":516,"column_start":5,"column_end":22}},{"value":"/ #   async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64540,"byte_end":64555,"line_start":517,"line_end":517,"column_start":5,"column_end":20}},{"value":"/ // A service returning Result<Record, DbError>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64560,"byte_end":64610,"line_start":518,"line_end":518,"column_start":5,"column_end":55}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64615,"byte_end":64672,"line_start":519,"line_end":519,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64677,"byte_end":64680,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ // Print a message whenever a query completes.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64685,"byte_end":64735,"line_start":521,"line_end":521,"column_start":5,"column_end":55}},{"value":"/ let mut new_service = service.map_result(|result| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64740,"byte_end":64795,"line_start":522,"line_end":522,"column_start":5,"column_end":60}},{"value":"/     println!(\"query completed; success={}\", result.is_ok());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64800,"byte_end":64864,"line_start":523,"line_end":523,"column_start":5,"column_end":69}},{"value":"/     result","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64869,"byte_end":64883,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64888,"byte_end":64895,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64900,"byte_end":64903,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64908,"byte_end":64935,"line_start":527,"line_end":527,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64940,"byte_end":64956,"line_start":528,"line_end":528,"column_start":5,"column_end":21}},{"value":"/ let response = new_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64961,"byte_end":64991,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/     .ready()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":64996,"byte_end":65012,"line_start":530,"line_end":530,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65017,"byte_end":65032,"line_start":531,"line_end":531,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65037,"byte_end":65054,"line_start":532,"line_end":532,"column_start":5,"column_end":22}},{"value":"/     .await;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65059,"byte_end":65074,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/ # response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65079,"byte_end":65093,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/ #    };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65098,"byte_end":65109,"line_start":535,"line_end":535,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65114,"byte_end":65121,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65126,"byte_end":65133,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65138,"byte_end":65141,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ [`map_response`]: ServiceExt::map_response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65146,"byte_end":65192,"line_start":539,"line_end":539,"column_start":5,"column_end":51}},{"value":"/ [`map_err`]: ServiceExt::map_err","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65197,"byte_end":65233,"line_start":540,"line_end":540,"column_start":5,"column_end":41}},{"value":"/ [`map_result`]: ServiceExt::map_result","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65238,"byte_end":65280,"line_start":541,"line_end":541,"column_start":5,"column_end":47}},{"value":"/ [`Error`]: crate::Service::Error","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65285,"byte_end":65321,"line_start":542,"line_end":542,"column_start":5,"column_end":41}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65326,"byte_end":65368,"line_start":543,"line_end":543,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65373,"byte_end":65419,"line_start":544,"line_end":544,"column_start":5,"column_end":51}},{"value":"/ [`BoxError`]: crate::BoxError","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65424,"byte_end":65457,"line_start":545,"line_end":545,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67329,"byte_end":67340,"line_start":606,"line_end":606,"column_start":8,"column_end":19},"name":"map_request","qualname":"::util::ServiceExt::map_request","value":"pub fn map_request<F, NewRequest>(Self, F) -> MapRequest<Self, F> where\nSelf: Sized, F: FnMut(NewRequest) -> Request","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the service.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65735,"byte_end":65785,"line_start":555,"line_end":555,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65790,"byte_end":65793,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new service that passes each value through the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65798,"byte_end":65872,"line_start":557,"line_end":557,"column_start":5,"column_end":79}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65877,"byte_end":65928,"line_start":558,"line_end":558,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65933,"byte_end":65936,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65941,"byte_end":65954,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65959,"byte_end":65966,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":65971,"byte_end":66003,"line_start":562,"line_end":562,"column_start":5,"column_end":37}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66008,"byte_end":66045,"line_start":563,"line_end":563,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66050,"byte_end":66089,"line_start":564,"line_end":564,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66094,"byte_end":66099,"line_start":565,"line_end":565,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66104,"byte_end":66133,"line_start":566,"line_end":566,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66138,"byte_end":66166,"line_start":567,"line_end":567,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66171,"byte_end":66210,"line_start":568,"line_end":568,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66215,"byte_end":66242,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66247,"byte_end":66256,"line_start":570,"line_end":570,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66261,"byte_end":66268,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66273,"byte_end":66278,"line_start":572,"line_end":572,"column_start":5,"column_end":10}},{"value":"/ # impl Service<String> for DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66283,"byte_end":66331,"line_start":573,"line_end":573,"column_start":5,"column_end":53}},{"value":"/ #   type Response = String;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66336,"byte_end":66367,"line_start":574,"line_end":574,"column_start":5,"column_end":36}},{"value":"/ #   type Error = u8;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66372,"byte_end":66396,"line_start":575,"line_end":575,"column_start":5,"column_end":29}},{"value":"/ #   type Future = futures_util::future::Ready<Result<String, u8>>;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66401,"byte_end":66471,"line_start":576,"line_end":576,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66476,"byte_end":66481,"line_start":577,"line_end":577,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66486,"byte_end":66575,"line_start":578,"line_end":578,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66580,"byte_end":66611,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66616,"byte_end":66625,"line_start":580,"line_end":580,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66630,"byte_end":66635,"line_start":581,"line_end":581,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: String) -> Self::Future {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66640,"byte_end":66701,"line_start":582,"line_end":582,"column_start":5,"column_end":66}},{"value":"/ #       futures_util::future::ready(Ok(String::new()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66706,"byte_end":66764,"line_start":583,"line_end":583,"column_start":5,"column_end":63}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66769,"byte_end":66778,"line_start":584,"line_end":584,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66783,"byte_end":66790,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66795,"byte_end":66800,"line_start":586,"line_end":586,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66805,"byte_end":66822,"line_start":587,"line_end":587,"column_start":5,"column_end":22}},{"value":"/ #   async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66827,"byte_end":66842,"line_start":588,"line_end":588,"column_start":5,"column_end":20}},{"value":"/ // A service taking a String as a request","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66847,"byte_end":66892,"line_start":589,"line_end":589,"column_start":5,"column_end":50}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66897,"byte_end":66954,"line_start":590,"line_end":590,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66959,"byte_end":66962,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ // Map the request to a new request","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":66967,"byte_end":67006,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/ let mut new_service = service.map_request(|id: u32| id.to_string());","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67011,"byte_end":67083,"line_start":593,"line_end":593,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67088,"byte_end":67091,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67096,"byte_end":67123,"line_start":595,"line_end":595,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67128,"byte_end":67144,"line_start":596,"line_end":596,"column_start":5,"column_end":21}},{"value":"/ let response = new_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67149,"byte_end":67179,"line_start":597,"line_end":597,"column_start":5,"column_end":35}},{"value":"/     .ready()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67184,"byte_end":67200,"line_start":598,"line_end":598,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67205,"byte_end":67220,"line_start":599,"line_end":599,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67225,"byte_end":67242,"line_start":600,"line_end":600,"column_start":5,"column_end":22}},{"value":"/     .await;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67247,"byte_end":67262,"line_start":601,"line_end":601,"column_start":5,"column_end":20}},{"value":"/ # response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67267,"byte_end":67281,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/ #    };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67286,"byte_end":67297,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67302,"byte_end":67309,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":67314,"byte_end":67321,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76979,"byte_end":76983,"line_start":873,"line_end":873,"column_start":8,"column_end":12},"name":"then","qualname":"::util::ServiceExt::then","value":"pub fn then<F, Response, Error, Fut>(Self, F) -> Then<Self, F> where\nSelf: Sized, Error: From<Self::Error>,\nF: FnOnce(Result<Self::Response, Self::Error>) -> Fut + Clone,\nFut: Future<Output = Result<Response, Error>>","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Composes an asynchronous function *after* this service.","sig":null,"attributes":[{"value":"/ Composes an asynchronous function *after* this service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":72865,"byte_end":72924,"line_start":775,"line_end":775,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":72929,"byte_end":72932,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ This takes a function or closure returning a future, and returns a new","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":72937,"byte_end":73011,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ `Service` that chains that function after this service's [`Future`]. The","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73016,"byte_end":73092,"line_start":778,"line_end":778,"column_start":5,"column_end":81}},{"value":"/ new `Service`'s future will consist of this service's future, followed","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73097,"byte_end":73171,"line_start":779,"line_end":779,"column_start":5,"column_end":79}},{"value":"/ by the future returned by calling the chained function with the future's","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73176,"byte_end":73252,"line_start":780,"line_end":780,"column_start":5,"column_end":81}},{"value":"/ [`Output`] type. The chained function is called regardless of whether","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73257,"byte_end":73330,"line_start":781,"line_end":781,"column_start":5,"column_end":78}},{"value":"/ this service's future completes with a successful response or with an","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73335,"byte_end":73408,"line_start":782,"line_end":782,"column_start":5,"column_end":78}},{"value":"/ error.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73413,"byte_end":73423,"line_start":783,"line_end":783,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73428,"byte_end":73431,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ This method can be thought of as an equivalent to the [`futures`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73436,"byte_end":73504,"line_start":785,"line_end":785,"column_start":5,"column_end":73}},{"value":"/ crate]'s [`FutureExt::then`] combinator, but acting on `Service`s that","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73509,"byte_end":73583,"line_start":786,"line_end":786,"column_start":5,"column_end":79}},{"value":"/ _return_ futures, rather than on an individual future. Similarly to that","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73588,"byte_end":73664,"line_start":787,"line_end":787,"column_start":5,"column_end":81}},{"value":"/ combinator, [`ServiceExt::then`] can be used to implement asynchronous","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73669,"byte_end":73743,"line_start":788,"line_end":788,"column_start":5,"column_end":79}},{"value":"/ error recovery, by calling some asynchronous function with errors","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73748,"byte_end":73817,"line_start":789,"line_end":789,"column_start":5,"column_end":74}},{"value":"/ returned by this service. Alternatively, it may also be used to call a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73822,"byte_end":73896,"line_start":790,"line_end":790,"column_start":5,"column_end":79}},{"value":"/ fallible async function with the successful response of this service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73901,"byte_end":73974,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73979,"byte_end":73982,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":73987,"byte_end":74061,"line_start":793,"line_end":793,"column_start":5,"column_end":79}},{"value":"/ into a different type. It can also be used to change the [`Error`] type","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74066,"byte_end":74141,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ of the service. However, because the `then` function is not applied","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74146,"byte_end":74217,"line_start":795,"line_end":795,"column_start":5,"column_end":76}},{"value":"/ to the errors returned by the service's [`poll_ready`] method, it must","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74222,"byte_end":74296,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/ be possible to convert the service's [`Error`] type into the error type","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74301,"byte_end":74376,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/ returned by the `then` future. This is trivial when the function","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74381,"byte_end":74449,"line_start":798,"line_end":798,"column_start":5,"column_end":73}},{"value":"/ returns the same error type as the service, but in other cases, it can","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74454,"byte_end":74528,"line_start":799,"line_end":799,"column_start":5,"column_end":79}},{"value":"/ be useful to use [`BoxError`] to erase differing error types.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74533,"byte_end":74598,"line_start":800,"line_end":800,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74603,"byte_end":74606,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74611,"byte_end":74625,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74630,"byte_end":74633,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74638,"byte_end":74645,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74650,"byte_end":74687,"line_start":805,"line_end":805,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74692,"byte_end":74731,"line_start":806,"line_end":806,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74736,"byte_end":74741,"line_start":807,"line_end":807,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74746,"byte_end":74775,"line_start":808,"line_end":808,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74780,"byte_end":74808,"line_start":809,"line_end":809,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74813,"byte_end":74852,"line_start":810,"line_end":810,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74857,"byte_end":74884,"line_start":811,"line_end":811,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74889,"byte_end":74898,"line_start":812,"line_end":812,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74903,"byte_end":74910,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74915,"byte_end":74920,"line_start":814,"line_end":814,"column_start":5,"column_end":10}},{"value":"/ # type Record = ();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74925,"byte_end":74948,"line_start":815,"line_end":815,"column_start":5,"column_end":28}},{"value":"/ # type DbError = ();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74953,"byte_end":74977,"line_start":816,"line_end":816,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74982,"byte_end":74987,"line_start":817,"line_end":817,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":74992,"byte_end":75037,"line_start":818,"line_end":818,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75042,"byte_end":75073,"line_start":819,"line_end":819,"column_start":5,"column_end":36}},{"value":"/ #   type Error = DbError;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75078,"byte_end":75107,"line_start":820,"line_end":820,"column_start":5,"column_end":34}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, DbError>>;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75112,"byte_end":75187,"line_start":821,"line_end":821,"column_start":5,"column_end":80}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75192,"byte_end":75197,"line_start":822,"line_end":822,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75202,"byte_end":75291,"line_start":823,"line_end":823,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75296,"byte_end":75327,"line_start":824,"line_end":824,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75332,"byte_end":75341,"line_start":825,"line_end":825,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75346,"byte_end":75351,"line_start":826,"line_end":826,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75356,"byte_end":75414,"line_start":827,"line_end":827,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75419,"byte_end":75466,"line_start":828,"line_end":828,"column_start":5,"column_end":52}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75471,"byte_end":75480,"line_start":829,"line_end":829,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75485,"byte_end":75492,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75497,"byte_end":75502,"line_start":831,"line_end":831,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75507,"byte_end":75524,"line_start":832,"line_end":832,"column_start":5,"column_end":22}},{"value":"/ // A service returning Result<Record, DbError>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75529,"byte_end":75579,"line_start":833,"line_end":833,"column_start":5,"column_end":55}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75584,"byte_end":75641,"line_start":834,"line_end":834,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75646,"byte_end":75649,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ // An async function that attempts to recover from errors returned by the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75654,"byte_end":75731,"line_start":836,"line_end":836,"column_start":5,"column_end":82}},{"value":"/ // database.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75736,"byte_end":75752,"line_start":837,"line_end":837,"column_start":5,"column_end":21}},{"value":"/ async fn recover_from_error(error: DbError) -> Result<Record, DbError> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75757,"byte_end":75833,"line_start":838,"line_end":838,"column_start":5,"column_end":81}},{"value":"/     // ...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75838,"byte_end":75852,"line_start":839,"line_end":839,"column_start":5,"column_end":19}},{"value":"/     # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75857,"byte_end":75873,"line_start":840,"line_end":840,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75878,"byte_end":75883,"line_start":841,"line_end":841,"column_start":5,"column_end":10}},{"value":"/ #    async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75888,"byte_end":75904,"line_start":842,"line_end":842,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75909,"byte_end":75912,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ // If the database service returns an error, attempt to recover by","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75917,"byte_end":75987,"line_start":844,"line_end":844,"column_start":5,"column_end":75}},{"value":"/ // calling `recover_from_error`. Otherwise, return the successful response.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":75992,"byte_end":76071,"line_start":845,"line_end":845,"column_start":5,"column_end":84}},{"value":"/ let mut new_service = service.then(|result| async move {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76076,"byte_end":76136,"line_start":846,"line_end":846,"column_start":5,"column_end":65}},{"value":"/     match result {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76141,"byte_end":76163,"line_start":847,"line_end":847,"column_start":5,"column_end":27}},{"value":"/         Ok(record) => Ok(record),","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76168,"byte_end":76205,"line_start":848,"line_end":848,"column_start":5,"column_end":42}},{"value":"/         Err(e) => recover_from_error(e).await,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76210,"byte_end":76260,"line_start":849,"line_end":849,"column_start":5,"column_end":55}},{"value":"/     }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76265,"byte_end":76274,"line_start":850,"line_end":850,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76279,"byte_end":76286,"line_start":851,"line_end":851,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76291,"byte_end":76294,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76299,"byte_end":76326,"line_start":853,"line_end":853,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76331,"byte_end":76347,"line_start":854,"line_end":854,"column_start":5,"column_end":21}},{"value":"/ let record = new_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76352,"byte_end":76380,"line_start":855,"line_end":855,"column_start":5,"column_end":33}},{"value":"/     .ready()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76385,"byte_end":76401,"line_start":856,"line_end":856,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76406,"byte_end":76421,"line_start":857,"line_end":857,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76426,"byte_end":76443,"line_start":858,"line_end":858,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76448,"byte_end":76464,"line_start":859,"line_end":859,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), DbError>(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76469,"byte_end":76496,"line_start":860,"line_end":860,"column_start":5,"column_end":32}},{"value":"/ #    };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76501,"byte_end":76512,"line_start":861,"line_end":861,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76517,"byte_end":76524,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76529,"byte_end":76536,"line_start":863,"line_end":863,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76541,"byte_end":76544,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ [`Future`]: crate::Service::Future","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76549,"byte_end":76587,"line_start":865,"line_end":865,"column_start":5,"column_end":43}},{"value":"/ [`Output`]: std::future::Future::Output","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76592,"byte_end":76635,"line_start":866,"line_end":866,"column_start":5,"column_end":48}},{"value":"/ [`futures` crate]: https://docs.rs/futures","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76640,"byte_end":76686,"line_start":867,"line_end":867,"column_start":5,"column_end":51}},{"value":"/ [`FutureExt::then`]: https://docs.rs/futures/latest/futures/future/trait.FutureExt.html#method.then","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76691,"byte_end":76794,"line_start":868,"line_end":868,"column_start":5,"column_end":108}},{"value":"/ [`Error`]: crate::Service::Error","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76799,"byte_end":76835,"line_start":869,"line_end":869,"column_start":5,"column_end":41}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76840,"byte_end":76882,"line_start":870,"line_end":870,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76887,"byte_end":76933,"line_start":871,"line_end":871,"column_start":5,"column_end":51}},{"value":"/ [`BoxError`]: crate::BoxError","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":76938,"byte_end":76971,"line_start":872,"line_end":872,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79356,"byte_end":79366,"line_start":947,"line_end":947,"column_start":8,"column_end":18},"name":"map_future","qualname":"::util::ServiceExt::map_future","value":"pub fn map_future<F, Fut, Response, Error>(Self, F) -> MapFuture<Self, F>\nwhere Self: Sized, F: FnMut(Self::Future) -> Fut, Error: From<Self::Error>,\nFut: Future<Output = Result<Response, Error>>","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Composes a function that transforms futures produced by the service.","sig":null,"attributes":[{"value":"/ Composes a function that transforms futures produced by the service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77273,"byte_end":77345,"line_start":883,"line_end":883,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77350,"byte_end":77353,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ This takes a function or closure returning a future computed from the future returned by","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77358,"byte_end":77450,"line_start":885,"line_end":885,"column_start":5,"column_end":97}},{"value":"/ the service's [`call`] method, as opposed to the responses produced by the future.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77455,"byte_end":77541,"line_start":886,"line_end":886,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77546,"byte_end":77549,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77554,"byte_end":77568,"line_start":888,"line_end":888,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77573,"byte_end":77576,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77581,"byte_end":77588,"line_start":890,"line_end":890,"column_start":5,"column_end":12}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77593,"byte_end":77630,"line_start":891,"line_end":891,"column_start":5,"column_end":42}},{"value":"/ # use tower::{Service, ServiceExt, BoxError};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77635,"byte_end":77684,"line_start":892,"line_end":892,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77689,"byte_end":77694,"line_start":893,"line_end":893,"column_start":5,"column_end":10}},{"value":"/ # struct DatabaseService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77699,"byte_end":77728,"line_start":894,"line_end":894,"column_start":5,"column_end":34}},{"value":"/ # impl DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77733,"byte_end":77761,"line_start":895,"line_end":895,"column_start":5,"column_end":33}},{"value":"/ #   fn new(address: &str) -> Self {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77766,"byte_end":77805,"line_start":896,"line_end":896,"column_start":5,"column_end":44}},{"value":"/ #       DatabaseService","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77810,"byte_end":77837,"line_start":897,"line_end":897,"column_start":5,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77842,"byte_end":77851,"line_start":898,"line_end":898,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77856,"byte_end":77863,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77868,"byte_end":77873,"line_start":900,"line_end":900,"column_start":5,"column_end":10}},{"value":"/ # type Record = ();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77878,"byte_end":77901,"line_start":901,"line_end":901,"column_start":5,"column_end":28}},{"value":"/ # type DbError = crate::BoxError;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77906,"byte_end":77943,"line_start":902,"line_end":902,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77948,"byte_end":77953,"line_start":903,"line_end":903,"column_start":5,"column_end":10}},{"value":"/ # impl Service<u32> for DatabaseService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":77958,"byte_end":78003,"line_start":904,"line_end":904,"column_start":5,"column_end":50}},{"value":"/ #   type Response = Record;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78008,"byte_end":78039,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/ #   type Error = DbError;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78044,"byte_end":78073,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/ #   type Future = futures_util::future::Ready<Result<Record, DbError>>;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78078,"byte_end":78153,"line_start":907,"line_end":907,"column_start":5,"column_end":80}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78158,"byte_end":78163,"line_start":908,"line_end":908,"column_start":5,"column_end":10}},{"value":"/ #   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78168,"byte_end":78257,"line_start":909,"line_end":909,"column_start":5,"column_end":94}},{"value":"/ #       Poll::Ready(Ok(()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78262,"byte_end":78293,"line_start":910,"line_end":910,"column_start":5,"column_end":36}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78298,"byte_end":78307,"line_start":911,"line_end":911,"column_start":5,"column_end":14}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78312,"byte_end":78317,"line_start":912,"line_end":912,"column_start":5,"column_end":10}},{"value":"/ #   fn call(&mut self, request: u32) -> Self::Future {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78322,"byte_end":78380,"line_start":913,"line_end":913,"column_start":5,"column_end":63}},{"value":"/ #       futures_util::future::ready(Ok(()))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78385,"byte_end":78432,"line_start":914,"line_end":914,"column_start":5,"column_end":52}},{"value":"/ #   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78437,"byte_end":78446,"line_start":915,"line_end":915,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78451,"byte_end":78458,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78463,"byte_end":78468,"line_start":917,"line_end":917,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78473,"byte_end":78490,"line_start":918,"line_end":918,"column_start":5,"column_end":22}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78495,"byte_end":78523,"line_start":919,"line_end":919,"column_start":5,"column_end":33}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78528,"byte_end":78557,"line_start":920,"line_end":920,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78562,"byte_end":78565,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ // A service returning Result<Record, DbError>","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78570,"byte_end":78620,"line_start":922,"line_end":922,"column_start":5,"column_end":55}},{"value":"/ let service = DatabaseService::new(\"127.0.0.1:8080\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78625,"byte_end":78682,"line_start":923,"line_end":923,"column_start":5,"column_end":62}},{"value":"/ #    async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78687,"byte_end":78703,"line_start":924,"line_end":924,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78708,"byte_end":78711,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ let mut new_service = service.map_future(|future| async move {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78716,"byte_end":78782,"line_start":926,"line_end":926,"column_start":5,"column_end":71}},{"value":"/     let res = timeout(Duration::from_secs(1), future).await?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78787,"byte_end":78852,"line_start":927,"line_end":927,"column_start":5,"column_end":70}},{"value":"/     Ok::<_, BoxError>(res)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78857,"byte_end":78887,"line_start":928,"line_end":928,"column_start":5,"column_end":35}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78892,"byte_end":78899,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78904,"byte_end":78907,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ // Call the new service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78912,"byte_end":78939,"line_start":931,"line_end":931,"column_start":5,"column_end":32}},{"value":"/ let id = 13;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78944,"byte_end":78960,"line_start":932,"line_end":932,"column_start":5,"column_end":21}},{"value":"/ let record = new_service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78965,"byte_end":78993,"line_start":933,"line_end":933,"column_start":5,"column_end":33}},{"value":"/     .ready()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":78998,"byte_end":79014,"line_start":934,"line_end":934,"column_start":5,"column_end":21}},{"value":"/     .await?","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79019,"byte_end":79034,"line_start":935,"line_end":935,"column_start":5,"column_end":20}},{"value":"/     .call(id)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79039,"byte_end":79056,"line_start":936,"line_end":936,"column_start":5,"column_end":22}},{"value":"/     .await?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79061,"byte_end":79077,"line_start":937,"line_end":937,"column_start":5,"column_end":21}},{"value":"/ # Ok::<(), BoxError>(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79082,"byte_end":79110,"line_start":938,"line_end":938,"column_start":5,"column_end":33}},{"value":"/ #    };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79115,"byte_end":79126,"line_start":939,"line_end":939,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79131,"byte_end":79138,"line_start":940,"line_end":940,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79143,"byte_end":79150,"line_start":941,"line_end":941,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79155,"byte_end":79158,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ Note that normally you wouldn't implement timeouts like this and instead use [`Timeout`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79163,"byte_end":79256,"line_start":943,"line_end":943,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79261,"byte_end":79264,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ [`call`]: crate::Service::call","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79269,"byte_end":79303,"line_start":945,"line_end":945,"column_start":5,"column_end":39}},{"value":"/ [`Timeout`]: crate::timeout::Timeout","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79308,"byte_end":79348,"line_start":946,"line_end":946,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80904,"byte_end":80909,"line_start":997,"line_end":997,"column_start":8,"column_end":13},"name":"boxed","qualname":"::util::ServiceExt::boxed","value":"pub fn boxed(Self) -> BoxService<Request, Self::Response, Self::Error> where\nSelf: Sized + Send + 'static, Self::Future: Send + 'static","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Convert the service into a [`Service`] + [`Send`] trait object.","sig":null,"attributes":[{"value":"/ Convert the service into a [`Service`] + [`Send`] trait object.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79634,"byte_end":79701,"line_start":957,"line_end":957,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79706,"byte_end":79709,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ See [`BoxService`] for more details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79714,"byte_end":79754,"line_start":959,"line_end":959,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79759,"byte_end":79762,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ If `Self` implements the [`Clone`] trait, the [`boxed_clone`] method","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79767,"byte_end":79839,"line_start":961,"line_end":961,"column_start":5,"column_end":77}},{"value":"/ can be used instead, to produce a boxed service which will also","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79844,"byte_end":79911,"line_start":962,"line_end":962,"column_start":5,"column_end":72}},{"value":"/ implement [`Clone`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79916,"byte_end":79940,"line_start":963,"line_end":963,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79945,"byte_end":79948,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79953,"byte_end":79966,"line_start":965,"line_end":965,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79971,"byte_end":79974,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79979,"byte_end":79986,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ use tower::{Service, ServiceExt, BoxError, service_fn, util::BoxService};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":79991,"byte_end":80068,"line_start":968,"line_end":968,"column_start":5,"column_end":82}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80073,"byte_end":80078,"line_start":969,"line_end":969,"column_start":5,"column_end":10}},{"value":"/ # struct Request;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80083,"byte_end":80104,"line_start":970,"line_end":970,"column_start":5,"column_end":26}},{"value":"/ # struct Response;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80109,"byte_end":80131,"line_start":971,"line_end":971,"column_start":5,"column_end":27}},{"value":"/ # impl Response {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80136,"byte_end":80157,"line_start":972,"line_end":972,"column_start":5,"column_end":26}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80162,"byte_end":80197,"line_start":973,"line_end":973,"column_start":5,"column_end":40}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80202,"byte_end":80209,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80214,"byte_end":80217,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ let service = service_fn(|req: Request| async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80222,"byte_end":80273,"line_start":976,"line_end":976,"column_start":5,"column_end":56}},{"value":"/     Ok::<_, BoxError>(Response::new())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80278,"byte_end":80320,"line_start":977,"line_end":977,"column_start":5,"column_end":47}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80325,"byte_end":80332,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80337,"byte_end":80340,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ let service: BoxService<Request, Response, BoxError> = service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80345,"byte_end":80411,"line_start":980,"line_end":980,"column_start":5,"column_end":71}},{"value":"/     .map_request(|req| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80416,"byte_end":80444,"line_start":981,"line_end":981,"column_start":5,"column_end":33}},{"value":"/         println!(\"received request\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80449,"byte_end":80490,"line_start":982,"line_end":982,"column_start":5,"column_end":46}},{"value":"/         req","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80495,"byte_end":80510,"line_start":983,"line_end":983,"column_start":5,"column_end":20}},{"value":"/     })","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80515,"byte_end":80525,"line_start":984,"line_end":984,"column_start":5,"column_end":15}},{"value":"/     .map_response(|res| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80530,"byte_end":80559,"line_start":985,"line_end":985,"column_start":5,"column_end":34}},{"value":"/         println!(\"response produced\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80564,"byte_end":80606,"line_start":986,"line_end":986,"column_start":5,"column_end":47}},{"value":"/         res","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80611,"byte_end":80626,"line_start":987,"line_end":987,"column_start":5,"column_end":20}},{"value":"/     })","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80631,"byte_end":80641,"line_start":988,"line_end":988,"column_start":5,"column_end":15}},{"value":"/     .boxed();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80646,"byte_end":80663,"line_start":989,"line_end":989,"column_start":5,"column_end":22}},{"value":"/ # let service = assert_service(service);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80668,"byte_end":80712,"line_start":990,"line_end":990,"column_start":5,"column_end":49}},{"value":"/ # fn assert_service<S, R>(svc: S) -> S","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80717,"byte_end":80759,"line_start":991,"line_end":991,"column_start":5,"column_end":47}},{"value":"/ # where S: Service<R> { svc }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80764,"byte_end":80797,"line_start":992,"line_end":992,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80802,"byte_end":80809,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80814,"byte_end":80817,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80822,"byte_end":80853,"line_start":995,"line_end":995,"column_start":5,"column_end":36}},{"value":"/ [`boxed_clone`]: Self::boxed_clone","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":80858,"byte_end":80896,"line_start":996,"line_end":996,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82448,"byte_end":82459,"line_start":1046,"line_end":1046,"column_start":8,"column_end":19},"name":"boxed_clone","qualname":"::util::ServiceExt::boxed_clone","value":"pub fn boxed_clone(Self)\n-> BoxCloneService<Request, Self::Response, Self::Error> where Self: Clone +\nSized + Send + 'static, Self::Future: Send + 'static","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Convert the service into a [`Service`] + [`Clone`] + [`Send`] trait object.","sig":null,"attributes":[{"value":"/ Convert the service into a [`Service`] + [`Clone`] + [`Send`] trait object.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81101,"byte_end":81180,"line_start":1005,"line_end":1005,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81185,"byte_end":81188,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`boxed`] method, but it requires that `Self` implement","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81193,"byte_end":81275,"line_start":1007,"line_end":1007,"column_start":5,"column_end":87}},{"value":"/ [`Clone`], and the returned boxed service implements [`Clone`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81280,"byte_end":81347,"line_start":1008,"line_end":1008,"column_start":5,"column_end":72}},{"value":"/ See [`BoxCloneService`] for more details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81352,"byte_end":81397,"line_start":1009,"line_end":1009,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81402,"byte_end":81405,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81410,"byte_end":81423,"line_start":1011,"line_end":1011,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81428,"byte_end":81431,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81436,"byte_end":81443,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"/ use tower::{Service, ServiceExt, BoxError, service_fn, util::BoxCloneService};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81448,"byte_end":81530,"line_start":1014,"line_end":1014,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81535,"byte_end":81540,"line_start":1015,"line_end":1015,"column_start":5,"column_end":10}},{"value":"/ # struct Request;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81545,"byte_end":81566,"line_start":1016,"line_end":1016,"column_start":5,"column_end":26}},{"value":"/ # struct Response;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81571,"byte_end":81593,"line_start":1017,"line_end":1017,"column_start":5,"column_end":27}},{"value":"/ # impl Response {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81598,"byte_end":81619,"line_start":1018,"line_end":1018,"column_start":5,"column_end":26}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81624,"byte_end":81659,"line_start":1019,"line_end":1019,"column_start":5,"column_end":40}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81664,"byte_end":81671,"line_start":1020,"line_end":1020,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81676,"byte_end":81679,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ let service = service_fn(|req: Request| async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81684,"byte_end":81735,"line_start":1022,"line_end":1022,"column_start":5,"column_end":56}},{"value":"/     Ok::<_, BoxError>(Response::new())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81740,"byte_end":81782,"line_start":1023,"line_end":1023,"column_start":5,"column_end":47}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81787,"byte_end":81794,"line_start":1024,"line_end":1024,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81799,"byte_end":81802,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ let service: BoxCloneService<Request, Response, BoxError> = service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81807,"byte_end":81878,"line_start":1026,"line_end":1026,"column_start":5,"column_end":76}},{"value":"/     .map_request(|req| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81883,"byte_end":81911,"line_start":1027,"line_end":1027,"column_start":5,"column_end":33}},{"value":"/         println!(\"received request\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81916,"byte_end":81957,"line_start":1028,"line_end":1028,"column_start":5,"column_end":46}},{"value":"/         req","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81962,"byte_end":81977,"line_start":1029,"line_end":1029,"column_start":5,"column_end":20}},{"value":"/     })","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81982,"byte_end":81992,"line_start":1030,"line_end":1030,"column_start":5,"column_end":15}},{"value":"/     .map_response(|res| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":81997,"byte_end":82026,"line_start":1031,"line_end":1031,"column_start":5,"column_end":34}},{"value":"/         println!(\"response produced\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82031,"byte_end":82073,"line_start":1032,"line_end":1032,"column_start":5,"column_end":47}},{"value":"/         res","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82078,"byte_end":82093,"line_start":1033,"line_end":1033,"column_start":5,"column_end":20}},{"value":"/     })","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82098,"byte_end":82108,"line_start":1034,"line_end":1034,"column_start":5,"column_end":15}},{"value":"/     .boxed_clone();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82113,"byte_end":82136,"line_start":1035,"line_end":1035,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82141,"byte_end":82144,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ // The boxed service can still be cloned.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82149,"byte_end":82194,"line_start":1037,"line_end":1037,"column_start":5,"column_end":50}},{"value":"/ service.clone();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82199,"byte_end":82219,"line_start":1038,"line_end":1038,"column_start":5,"column_end":25}},{"value":"/ # let service = assert_service(service);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82224,"byte_end":82268,"line_start":1039,"line_end":1039,"column_start":5,"column_end":49}},{"value":"/ # fn assert_service<S, R>(svc: S) -> S","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82273,"byte_end":82315,"line_start":1040,"line_end":1040,"column_start":5,"column_end":47}},{"value":"/ # where S: Service<R> { svc }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82320,"byte_end":82353,"line_start":1041,"line_end":1041,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82358,"byte_end":82365,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82370,"byte_end":82373,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82378,"byte_end":82409,"line_start":1044,"line_end":1044,"column_start":5,"column_end":36}},{"value":"/ [`boxed`]: Self::boxed","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82414,"byte_end":82440,"line_start":1045,"line_end":1045,"column_start":5,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":83417,"byte_end":83429,"line_start":1077,"line_end":1077,"column_start":8,"column_end":20},"name":"option_layer","qualname":"::util::option_layer","value":"pub fn option_layer<L>(Option<L>) -> Either<L, Identity>","parent":null,"children":[],"decl_id":null,"docs":" Convert an `Option<Layer>` into a [`Layer`].","sig":null,"attributes":[{"value":"/ Convert an `Option<Layer>` into a [`Layer`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82763,"byte_end":82811,"line_start":1057,"line_end":1057,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82812,"byte_end":82815,"line_start":1058,"line_end":1058,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82816,"byte_end":82823,"line_start":1059,"line_end":1059,"column_start":1,"column_end":8}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82824,"byte_end":82854,"line_start":1060,"line_end":1060,"column_start":1,"column_end":31}},{"value":"/ # use tower::Service;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82855,"byte_end":82880,"line_start":1061,"line_end":1061,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82881,"byte_end":82922,"line_start":1062,"line_end":1062,"column_start":1,"column_end":42}},{"value":"/ use tower::util::option_layer;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82923,"byte_end":82957,"line_start":1063,"line_end":1063,"column_start":1,"column_end":35}},{"value":"/ # use tower::timeout::TimeoutLayer;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82958,"byte_end":82997,"line_start":1064,"line_end":1064,"column_start":1,"column_end":40}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82998,"byte_end":83107,"line_start":1065,"line_end":1065,"column_start":1,"column_end":110}},{"value":"/ # let timeout = Some(Duration::new(10, 0));","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":83108,"byte_end":83155,"line_start":1066,"line_end":1066,"column_start":1,"column_end":48}},{"value":"/ // Layer to apply a timeout if configured","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":83156,"byte_end":83201,"line_start":1067,"line_end":1067,"column_start":1,"column_end":46}},{"value":"/ let maybe_timeout = option_layer(timeout.map(TimeoutLayer::new));","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":83202,"byte_end":83271,"line_start":1068,"line_end":1068,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":83272,"byte_end":83275,"line_start":1069,"line_end":1069,"column_start":1,"column_end":4}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":83276,"byte_end":83301,"line_start":1070,"line_end":1070,"column_start":1,"column_end":26}},{"value":"/     .layer(maybe_timeout)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":83302,"byte_end":83331,"line_start":1071,"line_end":1071,"column_start":1,"column_end":30}},{"value":"/     .service(svc);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":83332,"byte_end":83354,"line_start":1072,"line_end":1072,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":83355,"byte_end":83362,"line_start":1073,"line_end":1073,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":83363,"byte_end":83370,"line_start":1074,"line_end":1074,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":83371,"byte_end":83374,"line_start":1075,"line_end":1075,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: crate::layer::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":83375,"byte_end":83409,"line_start":1076,"line_end":1076,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"builder","qualname":"::builder","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","parent":null,"children":[{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":1762},{"krate":0,"index":3371},{"krate":0,"index":3374},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":1769},{"krate":0,"index":1814},{"krate":0,"index":1817}],"decl_id":null,"docs":" Builder types to compose layers and services\n","sig":null,"attributes":[{"value":"/ Builder types to compose layers and services","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":146428,"byte_end":146476,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3371},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149960,"byte_end":149974,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"ServiceBuilder","qualname":"::builder::ServiceBuilder","value":"ServiceBuilder {  }","parent":null,"children":[{"krate":0,"index":3373}],"decl_id":null,"docs":" Declaratively construct [`Service`] values.","sig":null,"attributes":[{"value":"/ Declaratively construct [`Service`] values.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":146565,"byte_end":146612,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":146613,"byte_end":146616,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`ServiceBuilder`] provides a [builder-like interface][builder] for composing","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":146617,"byte_end":146698,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ layers to be applied to a [`Service`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":146699,"byte_end":146741,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":146742,"byte_end":146745,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":146746,"byte_end":146759,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":146760,"byte_end":146763,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A [`Service`] is a trait representing an asynchronous function of a request","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":146764,"byte_end":146843,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ to a response. It is similar to `async fn(Request) -> Result<Response, Error>`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":146844,"byte_end":146927,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":146928,"byte_end":146931,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ A [`Service`] is typically bound to a single transport, such as a TCP","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":146932,"byte_end":147005,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ connection.  It defines how _all_ inbound or outbound requests are handled","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147006,"byte_end":147084,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ by that connection.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147085,"byte_end":147108,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147109,"byte_end":147112,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [builder]: https://doc.rust-lang.org/1.0.0/style/ownership/builders.html","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147113,"byte_end":147189,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147190,"byte_end":147193,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147194,"byte_end":147205,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147206,"byte_end":147209,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The order in which layers are added impacts how requests are handled. Layers","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147210,"byte_end":147290,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ that are added first will be called with the request first. The argument to","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147291,"byte_end":147370,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ `service` will be last to see the request.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147371,"byte_end":147417,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147418,"byte_end":147421,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147422,"byte_end":147429,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # // this (and other) doctest is ignored because we don't have a way","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147430,"byte_end":147502,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ # // to say that it should only be run with cfg(feature = \"...\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147503,"byte_end":147571,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ # use tower::Service;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147572,"byte_end":147597,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147598,"byte_end":147639,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ # #[cfg(all(feature = \"buffer\", feature = \"limit\"))]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147640,"byte_end":147696,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147697,"byte_end":147806,"line_start":36,"line_end":36,"column_start":1,"column_end":110}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147807,"byte_end":147832,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/     .buffer(100)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147833,"byte_end":147853,"line_start":38,"line_end":38,"column_start":1,"column_end":21}},{"value":"/     .concurrency_limit(10)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147854,"byte_end":147884,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/     .service(svc)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147885,"byte_end":147906,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ # ;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147907,"byte_end":147914,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147915,"byte_end":147922,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147923,"byte_end":147930,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147931,"byte_end":147934,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ In the above example, the buffer layer receives the request first followed","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":147935,"byte_end":148013,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ by `concurrency_limit`. `buffer` enables up to 100 request to be in-flight","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148014,"byte_end":148092,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ **on top of** the requests that have already been forwarded to the next","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148093,"byte_end":148168,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ layer. Combined with `concurrency_limit`, this allows up to 110 requests to be","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148169,"byte_end":148251,"line_start":48,"line_end":48,"column_start":1,"column_end":83}},{"value":"/ in-flight.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148252,"byte_end":148266,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148267,"byte_end":148270,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148271,"byte_end":148278,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # use tower::Service;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148279,"byte_end":148304,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148305,"byte_end":148346,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/ # #[cfg(all(feature = \"buffer\", feature = \"limit\"))]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148347,"byte_end":148403,"line_start":54,"line_end":54,"column_start":1,"column_end":57}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148404,"byte_end":148513,"line_start":55,"line_end":55,"column_start":1,"column_end":110}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148514,"byte_end":148539,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/     .concurrency_limit(10)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148540,"byte_end":148570,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"/     .buffer(100)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148571,"byte_end":148591,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/     .service(svc)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148592,"byte_end":148613,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/ # ;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148614,"byte_end":148621,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148622,"byte_end":148629,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148630,"byte_end":148637,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148638,"byte_end":148641,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The above example is similar, but the order of layers is reversed. Now,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148642,"byte_end":148717,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ `concurrency_limit` applies first and only allows 10 requests to be in-flight","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148718,"byte_end":148799,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ total.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148800,"byte_end":148810,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148811,"byte_end":148814,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148815,"byte_end":148829,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148830,"byte_end":148833,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ A [`Service`] stack with a single layer:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148834,"byte_end":148878,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148879,"byte_end":148882,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148883,"byte_end":148890,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # use tower::Service;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148891,"byte_end":148916,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148917,"byte_end":148958,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ # #[cfg(feature = \"limit\")]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148959,"byte_end":148990,"line_start":75,"line_end":75,"column_start":1,"column_end":32}},{"value":"/ # use tower::limit::concurrency::ConcurrencyLimitLayer;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":148991,"byte_end":149050,"line_start":76,"line_end":76,"column_start":1,"column_end":60}},{"value":"/ # #[cfg(feature = \"limit\")]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149051,"byte_end":149082,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149083,"byte_end":149192,"line_start":78,"line_end":78,"column_start":1,"column_end":110}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149193,"byte_end":149218,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/     .concurrency_limit(5)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149219,"byte_end":149248,"line_start":80,"line_end":80,"column_start":1,"column_end":30}},{"value":"/     .service(svc);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149249,"byte_end":149271,"line_start":81,"line_end":81,"column_start":1,"column_end":23}},{"value":"/ # ;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149272,"byte_end":149279,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149280,"byte_end":149287,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149288,"byte_end":149295,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149296,"byte_end":149299,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ A [`Service`] stack with _multiple_ layers that contain rate limiting,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149300,"byte_end":149374,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ in-flight request limits, and a channel-backed, clonable [`Service`]:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149375,"byte_end":149448,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149449,"byte_end":149452,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149453,"byte_end":149460,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ # use tower::Service;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149461,"byte_end":149486,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149487,"byte_end":149528,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149529,"byte_end":149559,"line_start":92,"line_end":92,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(all(feature = \"buffer\", feature = \"limit\"))]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149560,"byte_end":149616,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149617,"byte_end":149726,"line_start":94,"line_end":94,"column_start":1,"column_end":110}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149727,"byte_end":149752,"line_start":95,"line_end":95,"column_start":1,"column_end":26}},{"value":"/     .buffer(5)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149753,"byte_end":149771,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/     .concurrency_limit(5)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149772,"byte_end":149801,"line_start":97,"line_end":97,"column_start":1,"column_end":30}},{"value":"/     .rate_limit(5, Duration::from_secs(1))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149802,"byte_end":149848,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/     .service(svc);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149849,"byte_end":149871,"line_start":99,"line_end":99,"column_start":1,"column_end":23}},{"value":"/ # ;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149872,"byte_end":149879,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149880,"byte_end":149887,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149888,"byte_end":149895,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149896,"byte_end":149899,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":149900,"byte_end":149931,"line_start":104,"line_end":104,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150181,"byte_end":150184,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<ServiceBuilder<Identity>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`ServiceBuilder`].\n","sig":null,"attributes":[{"value":"/ Create a new [`ServiceBuilder`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150133,"byte_end":150169,"line_start":117,"line_end":117,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150576,"byte_end":150581,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"layer","qualname":"<ServiceBuilder<L>>::layer","value":"pub fn layer<T>(Self, T) -> ServiceBuilder<Stack<T, L>>","parent":null,"children":[],"decl_id":null,"docs":" Add a new layer `T` into the [`ServiceBuilder`].","sig":null,"attributes":[{"value":"/ Add a new layer `T` into the [`ServiceBuilder`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150309,"byte_end":150361,"line_start":126,"line_end":126,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150366,"byte_end":150369,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with the service provided by a user-defined","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150374,"byte_end":150450,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ [`Layer`]. The provided layer must implement the [`Layer`] trait.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150455,"byte_end":150524,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150529,"byte_end":150532,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150537,"byte_end":150564,"line_start":131,"line_end":131,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151418,"byte_end":151430,"line_start":156,"line_end":156,"column_start":12,"column_end":24},"name":"option_layer","qualname":"<ServiceBuilder<L>>::option_layer","value":"pub fn option_layer<T>(Self, Option<T>)\n-> ServiceBuilder<Stack<crate::util::Either<T, Identity>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Optionally add a new layer `T` into the [`ServiceBuilder`].","sig":null,"attributes":[{"value":"/ Optionally add a new layer `T` into the [`ServiceBuilder`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150730,"byte_end":150793,"line_start":138,"line_end":138,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150798,"byte_end":150801,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150806,"byte_end":150813,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150818,"byte_end":150848,"line_start":141,"line_end":141,"column_start":5,"column_end":35}},{"value":"/ # use tower::Service;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150853,"byte_end":150878,"line_start":142,"line_end":142,"column_start":5,"column_end":30}},{"value":"/ # use tower::builder::ServiceBuilder;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150883,"byte_end":150924,"line_start":143,"line_end":143,"column_start":5,"column_end":46}},{"value":"/ # use tower::timeout::TimeoutLayer;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150929,"byte_end":150968,"line_start":144,"line_end":144,"column_start":5,"column_end":44}},{"value":"/ # async fn wrap<S>(svc: S) where S: Service<(), Error = &'static str> + 'static + Send, S::Future: Send {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150973,"byte_end":151082,"line_start":145,"line_end":145,"column_start":5,"column_end":114}},{"value":"/ # let timeout = Some(Duration::new(10, 0));","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151087,"byte_end":151134,"line_start":146,"line_end":146,"column_start":5,"column_end":52}},{"value":"/ // Apply a timeout if configured","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151139,"byte_end":151175,"line_start":147,"line_end":147,"column_start":5,"column_end":41}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151180,"byte_end":151205,"line_start":148,"line_end":148,"column_start":5,"column_end":30}},{"value":"/     .option_layer(timeout.map(TimeoutLayer::new))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151210,"byte_end":151263,"line_start":149,"line_end":149,"column_start":5,"column_end":58}},{"value":"/     .service(svc)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151268,"byte_end":151289,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/ # ;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151294,"byte_end":151301,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151306,"byte_end":151313,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151318,"byte_end":151325,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151330,"byte_end":151354,"line_start":154,"line_end":154,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151840,"byte_end":151848,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"layer_fn","qualname":"<ServiceBuilder<L>>::layer_fn","value":"pub fn layer_fn<F>(Self, F)\n-> ServiceBuilder<Stack<crate::layer::LayerFn<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Add a [`Layer`] built from a function that accepts a service and returns another service.","sig":null,"attributes":[{"value":"/ Add a [`Layer`] built from a function that accepts a service and returns another service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151609,"byte_end":151702,"line_start":163,"line_end":163,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151707,"byte_end":151710,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`layer_fn`] for more details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151715,"byte_end":151775,"line_start":165,"line_end":165,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151780,"byte_end":151783,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ [`layer_fn`]: crate::layer::layer_fn","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151788,"byte_end":151828,"line_start":167,"line_end":167,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":152269,"byte_end":152275,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"buffer","qualname":"<ServiceBuilder<L>>::buffer","value":"pub fn buffer<Request>(Self, usize)\n-> ServiceBuilder<Stack<crate::buffer::BufferLayer<Request>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Buffer requests when the next layer is not ready.","sig":null,"attributes":[{"value":"/ Buffer requests when the next layer is not ready.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":151977,"byte_end":152030,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":152035,"byte_end":152038,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`Buffer`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":152043,"byte_end":152110,"line_start":174,"line_end":174,"column_start":5,"column_end":72}},{"value":"/ middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":152115,"byte_end":152130,"line_start":175,"line_end":175,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":152135,"byte_end":152138,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ [`Buffer`]: crate::buffer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":152143,"byte_end":152172,"line_start":177,"line_end":177,"column_start":5,"column_end":34}},{"value":"cfg(feature = \"buffer\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":152177,"byte_end":152203,"line_start":178,"line_end":178,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159100,"byte_end":159111,"line_start":375,"line_end":375,"column_start":12,"column_end":23},"name":"map_request","qualname":"<ServiceBuilder<L>>::map_request","value":"pub fn map_request<F, R1, R2>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapRequestLayer<F>, L>> where\nF: FnMut(R1) -> R2 + Clone","parent":null,"children":[],"decl_id":null,"docs":" Map one request type to another.","sig":null,"attributes":[{"value":"/ Map one request type to another.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157121,"byte_end":157157,"line_start":313,"line_end":313,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157162,"byte_end":157165,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapRequest`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157170,"byte_end":157241,"line_start":315,"line_end":315,"column_start":5,"column_end":76}},{"value":"/ middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157246,"byte_end":157261,"line_start":316,"line_end":316,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157266,"byte_end":157269,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157274,"byte_end":157288,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157293,"byte_end":157296,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Changing the type of a request:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157301,"byte_end":157336,"line_start":320,"line_end":320,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157341,"byte_end":157344,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157349,"byte_end":157360,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157365,"byte_end":157395,"line_start":323,"line_end":323,"column_start":5,"column_end":35}},{"value":"/ use tower::ServiceExt;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157400,"byte_end":157426,"line_start":324,"line_end":324,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157431,"byte_end":157434,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157439,"byte_end":157459,"line_start":326,"line_end":326,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), ()> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157464,"byte_end":157505,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ // Suppose we have some `Service` whose request type is `String`:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157510,"byte_end":157579,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ let string_svc = tower::service_fn(|request: String| async move {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157584,"byte_end":157653,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/     println!(\"request: {}\", request);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157658,"byte_end":157699,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/     Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157704,"byte_end":157718,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157723,"byte_end":157730,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157735,"byte_end":157738,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ // ...but we want to call that service with a `usize`. What do we do?","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157743,"byte_end":157816,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157821,"byte_end":157824,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let usize_svc = ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157829,"byte_end":157870,"line_start":336,"line_end":336,"column_start":5,"column_end":46}},{"value":"/      // Add a middlware that converts the request type to a `String`:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157875,"byte_end":157948,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/     .map_request(|request: usize| format!(\"{}\", request))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":157953,"byte_end":158014,"line_start":338,"line_end":338,"column_start":5,"column_end":66}},{"value":"/     // ...and wrap the string service with that middleware:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158019,"byte_end":158082,"line_start":339,"line_end":339,"column_start":5,"column_end":68}},{"value":"/     .service(string_svc);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158087,"byte_end":158116,"line_start":340,"line_end":340,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158121,"byte_end":158124,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ // Now, we can call that service with a `usize`:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158129,"byte_end":158181,"line_start":342,"line_end":342,"column_start":5,"column_end":57}},{"value":"/ usize_svc.oneshot(42).await?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158186,"byte_end":158219,"line_start":343,"line_end":343,"column_start":5,"column_end":38}},{"value":"/ # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158224,"byte_end":158236,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158241,"byte_end":158248,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158253,"byte_end":158260,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158265,"byte_end":158268,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ Modifying the request value:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158273,"byte_end":158305,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158310,"byte_end":158313,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158318,"byte_end":158329,"line_start":350,"line_end":350,"column_start":5,"column_end":16}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158334,"byte_end":158364,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/ use tower::ServiceExt;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158369,"byte_end":158395,"line_start":352,"line_end":352,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158400,"byte_end":158403,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158408,"byte_end":158428,"line_start":354,"line_end":354,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), ()> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158433,"byte_end":158474,"line_start":355,"line_end":355,"column_start":5,"column_end":46}},{"value":"/ // A service that takes a number and returns it:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158479,"byte_end":158531,"line_start":356,"line_end":356,"column_start":5,"column_end":57}},{"value":"/ let svc = tower::service_fn(|request: usize| async move {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158536,"byte_end":158597,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/    Ok(request)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158602,"byte_end":158620,"line_start":358,"line_end":358,"column_start":5,"column_end":23}},{"value":"/ });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158625,"byte_end":158632,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158637,"byte_end":158640,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ let svc = ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158645,"byte_end":158680,"line_start":361,"line_end":361,"column_start":5,"column_end":40}},{"value":"/      // Add a middleware that adds 1 to each request","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158685,"byte_end":158741,"line_start":362,"line_end":362,"column_start":5,"column_end":61}},{"value":"/     .map_request(|request: usize| request + 1)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158746,"byte_end":158796,"line_start":363,"line_end":363,"column_start":5,"column_end":55}},{"value":"/     .service(svc);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158801,"byte_end":158823,"line_start":364,"line_end":364,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158828,"byte_end":158831,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ let response = svc.oneshot(1).await?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158836,"byte_end":158877,"line_start":366,"line_end":366,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(response, 2);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158882,"byte_end":158910,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158915,"byte_end":158927,"line_start":368,"line_end":368,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158932,"byte_end":158939,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158944,"byte_end":158951,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158956,"byte_end":158959,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`MapRequest`]: crate::util::MapRequest","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":158964,"byte_end":159007,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159012,"byte_end":159036,"line_start":373,"line_end":373,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159794,"byte_end":159806,"line_start":396,"line_end":396,"column_start":12,"column_end":24},"name":"map_response","qualname":"<ServiceBuilder<L>>::map_response","value":"pub fn map_response<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapResponseLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Map one response type to another.","sig":null,"attributes":[{"value":"/ Map one response type to another.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159339,"byte_end":159376,"line_start":385,"line_end":385,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159381,"byte_end":159384,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapResponse`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159389,"byte_end":159461,"line_start":387,"line_end":387,"column_start":5,"column_end":77}},{"value":"/ middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159466,"byte_end":159481,"line_start":388,"line_end":388,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159486,"byte_end":159489,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`map_response` combinator] for details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159494,"byte_end":159568,"line_start":390,"line_end":390,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159573,"byte_end":159576,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [`MapResponse`]: crate::util::MapResponse","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159581,"byte_end":159626,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"/ [`map_response` combinator]: crate::util::ServiceExt::map_response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159631,"byte_end":159701,"line_start":393,"line_end":393,"column_start":5,"column_end":75}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159706,"byte_end":159730,"line_start":394,"line_end":394,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160400,"byte_end":160407,"line_start":414,"line_end":414,"column_start":12,"column_end":19},"name":"map_err","qualname":"<ServiceBuilder<L>>::map_err","value":"pub fn map_err<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapErrLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Map one error type to another.","sig":null,"attributes":[{"value":"/ Map one error type to another.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":159978,"byte_end":160012,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160017,"byte_end":160020,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapErr`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160025,"byte_end":160092,"line_start":405,"line_end":405,"column_start":5,"column_end":72}},{"value":"/ middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160097,"byte_end":160112,"line_start":406,"line_end":406,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160117,"byte_end":160120,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`map_err` combinator] for details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160125,"byte_end":160194,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160199,"byte_end":160202,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ [`MapErr`]: crate::util::MapErr","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160207,"byte_end":160242,"line_start":410,"line_end":410,"column_start":5,"column_end":40}},{"value":"/ [`map_err` combinator]: crate::util::ServiceExt::map_err","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160247,"byte_end":160307,"line_start":411,"line_end":411,"column_start":5,"column_end":65}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160312,"byte_end":160336,"line_start":412,"line_end":412,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161020,"byte_end":161030,"line_start":428,"line_end":428,"column_start":12,"column_end":22},"name":"map_future","qualname":"<ServiceBuilder<L>>::map_future","value":"pub fn map_future<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapFutureLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Composes a function that transforms futures produced by the service.","sig":null,"attributes":[{"value":"/ Composes a function that transforms futures produced by the service.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160546,"byte_end":160618,"line_start":418,"line_end":418,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160623,"byte_end":160626,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapFutureLayer`] middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160631,"byte_end":160718,"line_start":420,"line_end":420,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160723,"byte_end":160726,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`map_future`] combinator for details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160731,"byte_end":160803,"line_start":422,"line_end":422,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160808,"byte_end":160811,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ [`MapFutureLayer`]: crate::util::MapFutureLayer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160816,"byte_end":160867,"line_start":424,"line_end":424,"column_start":5,"column_end":56}},{"value":"/ [`map_future`]: crate::util::ServiceExt::map_future","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160872,"byte_end":160927,"line_start":425,"line_end":425,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":160932,"byte_end":160956,"line_start":426,"line_end":426,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162095,"byte_end":162099,"line_start":452,"line_end":452,"column_start":12,"column_end":16},"name":"then","qualname":"<ServiceBuilder<L>>::then","value":"pub fn then<F>(Self, F) -> ServiceBuilder<Stack<crate::util::ThenLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Apply an asynchronous function after the service, regardless of whether the future\n succeeds or fails.","sig":null,"attributes":[{"value":"/ Apply an asynchronous function after the service, regardless of whether the future","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161175,"byte_end":161261,"line_start":432,"line_end":432,"column_start":5,"column_end":91}},{"value":"/ succeeds or fails.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161266,"byte_end":161288,"line_start":433,"line_end":433,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161293,"byte_end":161296,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`Then`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161301,"byte_end":161366,"line_start":435,"line_end":435,"column_start":5,"column_end":70}},{"value":"/ middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161371,"byte_end":161386,"line_start":436,"line_end":436,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161391,"byte_end":161394,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`map_response`] and [`map_err`] functions,","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161399,"byte_end":161469,"line_start":438,"line_end":438,"column_start":5,"column_end":75}},{"value":"/ except that the *same* function is invoked when the service's future","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161474,"byte_end":161546,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ completes, whether it completes successfully or fails. This function","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161551,"byte_end":161623,"line_start":440,"line_end":440,"column_start":5,"column_end":77}},{"value":"/ takes the [`Result`] returned by the service's future, and returns a","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161628,"byte_end":161700,"line_start":441,"line_end":441,"column_start":5,"column_end":77}},{"value":"/ [`Result`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161705,"byte_end":161720,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161725,"byte_end":161728,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`then` combinator] for details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161733,"byte_end":161799,"line_start":444,"line_end":444,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161804,"byte_end":161807,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ [`Then`]: crate::util::Then","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161812,"byte_end":161843,"line_start":446,"line_end":446,"column_start":5,"column_end":36}},{"value":"/ [`then` combinator]: crate::util::ServiceExt::then","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161848,"byte_end":161902,"line_start":447,"line_end":447,"column_start":5,"column_end":59}},{"value":"/ [`map_response`]: ServiceBuilder::map_response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161907,"byte_end":161957,"line_start":448,"line_end":448,"column_start":5,"column_end":55}},{"value":"/ [`map_err`]: ServiceBuilder::map_err","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":161962,"byte_end":162002,"line_start":449,"line_end":449,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162007,"byte_end":162031,"line_start":450,"line_end":450,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163087,"byte_end":163095,"line_start":474,"line_end":474,"column_start":12,"column_end":20},"name":"and_then","qualname":"<ServiceBuilder<L>>::and_then","value":"pub fn and_then<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::AndThenLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Executes a new future after this service's future resolves. This does\n not alter the behaviour of the [`poll_ready`] method.","sig":null,"attributes":[{"value":"/ Executes a new future after this service's future resolves. This does","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162234,"byte_end":162307,"line_start":456,"line_end":456,"column_start":5,"column_end":78}},{"value":"/ not alter the behaviour of the [`poll_ready`] method.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162312,"byte_end":162369,"line_start":457,"line_end":457,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162374,"byte_end":162377,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Response`] type of the service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162382,"byte_end":162456,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ into a different type. You can use this method to chain along a computation once the","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162461,"byte_end":162549,"line_start":460,"line_end":460,"column_start":5,"column_end":93}},{"value":"/ service's response has been resolved.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162554,"byte_end":162595,"line_start":461,"line_end":461,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162600,"byte_end":162603,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`AndThen`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162608,"byte_end":162676,"line_start":463,"line_end":463,"column_start":5,"column_end":73}},{"value":"/ middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162681,"byte_end":162696,"line_start":464,"line_end":464,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162701,"byte_end":162704,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`and_then` combinator] for details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162709,"byte_end":162779,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162784,"byte_end":162787,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [`Response`]: crate::Service::Response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162792,"byte_end":162834,"line_start":468,"line_end":468,"column_start":5,"column_end":47}},{"value":"/ [`poll_ready`]: crate::Service::poll_ready","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162839,"byte_end":162885,"line_start":469,"line_end":469,"column_start":5,"column_end":51}},{"value":"/ [`and_then` combinator]: crate::util::ServiceExt::and_then","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162890,"byte_end":162952,"line_start":470,"line_end":470,"column_start":5,"column_end":67}},{"value":"/ [`AndThen`]: crate::util::AndThen","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162957,"byte_end":162994,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":162999,"byte_end":163023,"line_start":472,"line_end":472,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163807,"byte_end":163817,"line_start":491,"line_end":491,"column_start":12,"column_end":22},"name":"map_result","qualname":"<ServiceBuilder<L>>::map_result","value":"pub fn map_result<F>(Self, F)\n-> ServiceBuilder<Stack<crate::util::MapResultLayer<F>, L>>","parent":null,"children":[],"decl_id":null,"docs":" Maps this service's result type (`Result<Self::Response, Self::Error>`)\n to a different value, regardless of whether the future succeeds or\n fails.","sig":null,"attributes":[{"value":"/ Maps this service's result type (`Result<Self::Response, Self::Error>`)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163236,"byte_end":163311,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ to a different value, regardless of whether the future succeeds or","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163316,"byte_end":163386,"line_start":479,"line_end":479,"column_start":5,"column_end":75}},{"value":"/ fails.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163391,"byte_end":163401,"line_start":480,"line_end":480,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163406,"byte_end":163409,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This wraps the inner service with an instance of the [`MapResult`]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163414,"byte_end":163484,"line_start":482,"line_end":482,"column_start":5,"column_end":75}},{"value":"/ middleware.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163489,"byte_end":163504,"line_start":483,"line_end":483,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163509,"byte_end":163512,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ See the documentation for the [`map_result` combinator] for details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163517,"byte_end":163589,"line_start":485,"line_end":485,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163594,"byte_end":163597,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ [`map_result` combinator]: crate::util::ServiceExt::map_result","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163602,"byte_end":163668,"line_start":487,"line_end":487,"column_start":5,"column_end":71}},{"value":"/ [`MapResult`]: crate::util::MapResult","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163673,"byte_end":163714,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163719,"byte_end":163743,"line_start":489,"line_end":489,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164024,"byte_end":164034,"line_start":496,"line_end":496,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ServiceBuilder<L>>::into_inner","value":"pub fn into_inner(Self) -> L","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `Layer` implementation.\n","sig":null,"attributes":[{"value":"/ Returns the underlying `Layer` implementation.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":163962,"byte_end":164012,"line_start":495,"line_end":495,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164298,"byte_end":164305,"line_start":505,"line_end":505,"column_start":12,"column_end":19},"name":"service","qualname":"<ServiceBuilder<L>>::service","value":"pub fn service<S>(&Self, S) -> L::Service where L: Layer<S>","parent":null,"children":[],"decl_id":null,"docs":" Wrap the service `S` with the middleware provided by this\n [`ServiceBuilder`]'s [`Layer`]'s, returning a new [`Service`].","sig":null,"attributes":[{"value":"/ Wrap the service `S` with the middleware provided by this","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164078,"byte_end":164139,"line_start":500,"line_end":500,"column_start":5,"column_end":66}},{"value":"/ [`ServiceBuilder`]'s [`Layer`]'s, returning a new [`Service`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164144,"byte_end":164210,"line_start":501,"line_end":501,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164215,"byte_end":164218,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164223,"byte_end":164250,"line_start":503,"line_end":503,"column_start":5,"column_end":32}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164255,"byte_end":164286,"line_start":504,"line_end":504,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165851,"byte_end":165861,"line_start":557,"line_end":557,"column_start":12,"column_end":22},"name":"service_fn","qualname":"<ServiceBuilder<L>>::service_fn","value":"pub fn service_fn<F>(Self, F) -> L::Service where\nL: Layer<crate::util::ServiceFn<F>>","parent":null,"children":[],"decl_id":null,"docs":" Wrap the async function `F` with the middleware provided by this [`ServiceBuilder`]'s\n [`Layer`]s, returning a new [`Service`].","sig":null,"attributes":[{"value":"/ Wrap the async function `F` with the middleware provided by this [`ServiceBuilder`]'s","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164424,"byte_end":164513,"line_start":512,"line_end":512,"column_start":5,"column_end":94}},{"value":"/ [`Layer`]s, returning a new [`Service`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164518,"byte_end":164562,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164567,"byte_end":164570,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method which is equivalent to calling","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164575,"byte_end":164638,"line_start":515,"line_end":515,"column_start":5,"column_end":68}},{"value":"/ [`ServiceBuilder::service`] with a [`service_fn`], like this:","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164643,"byte_end":164708,"line_start":516,"line_end":516,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164713,"byte_end":164716,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164721,"byte_end":164732,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # use tower::{ServiceBuilder, service_fn};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164737,"byte_end":164783,"line_start":519,"line_end":519,"column_start":5,"column_end":51}},{"value":"/ # async fn handler_fn(_: ()) -> Result<(), ()> { Ok(()) }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164788,"byte_end":164849,"line_start":520,"line_end":520,"column_start":5,"column_end":66}},{"value":"/ # let _ = {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164854,"byte_end":164869,"line_start":521,"line_end":521,"column_start":5,"column_end":20}},{"value":"/ ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164874,"byte_end":164899,"line_start":522,"line_end":522,"column_start":5,"column_end":30}},{"value":"/     // ...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164904,"byte_end":164918,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/     .service(service_fn(handler_fn))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164923,"byte_end":164963,"line_start":524,"line_end":524,"column_start":5,"column_end":45}},{"value":"/ # };","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164968,"byte_end":164976,"line_start":525,"line_end":525,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164981,"byte_end":164988,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":164993,"byte_end":164996,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165001,"byte_end":165014,"line_start":528,"line_end":528,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165019,"byte_end":165022,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165027,"byte_end":165038,"line_start":530,"line_end":530,"column_start":5,"column_end":16}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165043,"byte_end":165071,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/ use tower::{ServiceBuilder, ServiceExt, BoxError, service_fn};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165076,"byte_end":165142,"line_start":532,"line_end":532,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165147,"byte_end":165150,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165155,"byte_end":165175,"line_start":534,"line_end":534,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), BoxError> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165180,"byte_end":165227,"line_start":535,"line_end":535,"column_start":5,"column_end":52}},{"value":"/ async fn handle(request: &'static str) -> Result<&'static str, BoxError> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165232,"byte_end":165310,"line_start":536,"line_end":536,"column_start":5,"column_end":83}},{"value":"/    Ok(request)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165315,"byte_end":165333,"line_start":537,"line_end":537,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165338,"byte_end":165343,"line_start":538,"line_end":538,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165348,"byte_end":165351,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let svc = ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165356,"byte_end":165391,"line_start":540,"line_end":540,"column_start":5,"column_end":40}},{"value":"/     .buffer(1024)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165396,"byte_end":165417,"line_start":541,"line_end":541,"column_start":5,"column_end":26}},{"value":"/     .timeout(Duration::from_secs(10))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165422,"byte_end":165463,"line_start":542,"line_end":542,"column_start":5,"column_end":46}},{"value":"/     .service_fn(handle);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165468,"byte_end":165496,"line_start":543,"line_end":543,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165501,"byte_end":165504,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ let response = svc.oneshot(\"foo\").await?;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165509,"byte_end":165554,"line_start":545,"line_end":545,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165559,"byte_end":165562,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response, \"foo\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165567,"byte_end":165599,"line_start":547,"line_end":547,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165604,"byte_end":165616,"line_start":548,"line_end":548,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165621,"byte_end":165628,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165633,"byte_end":165640,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165645,"byte_end":165648,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165653,"byte_end":165680,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/ [`Service`]: crate::Service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165685,"byte_end":165716,"line_start":553,"line_end":553,"column_start":5,"column_end":36}},{"value":"/ [`service_fn`]: crate::service_fn","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165721,"byte_end":165758,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":165763,"byte_end":165787,"line_start":555,"line_end":555,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166873,"byte_end":166884,"line_start":590,"line_end":590,"column_start":12,"column_end":23},"name":"check_clone","qualname":"<ServiceBuilder<L>>::check_clone","value":"pub fn check_clone(Self) -> Self where Self: Clone","parent":null,"children":[],"decl_id":null,"docs":" Check that the builder implements `Clone`.","sig":null,"attributes":[{"value":"/ Check that the builder implements `Clone`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166012,"byte_end":166058,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166063,"byte_end":166066,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ This can be useful when debugging type errors in `ServiceBuilder`s with lots of layers.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166071,"byte_end":166162,"line_start":566,"line_end":566,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166167,"byte_end":166170,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ Doesn't actually change the builder but serves as a type check.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166175,"byte_end":166242,"line_start":568,"line_end":568,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166247,"byte_end":166250,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166255,"byte_end":166268,"line_start":570,"line_end":570,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166273,"byte_end":166276,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166281,"byte_end":166292,"line_start":572,"line_end":572,"column_start":5,"column_end":16}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166297,"byte_end":166327,"line_start":573,"line_end":573,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166332,"byte_end":166335,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ let builder = ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166340,"byte_end":166379,"line_start":575,"line_end":575,"column_start":5,"column_end":44}},{"value":"/     // Do something before processing the request","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166384,"byte_end":166437,"line_start":576,"line_end":576,"column_start":5,"column_end":58}},{"value":"/     .map_request(|request: String| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166442,"byte_end":166482,"line_start":577,"line_end":577,"column_start":5,"column_end":45}},{"value":"/         println!(\"got request!\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166487,"byte_end":166524,"line_start":578,"line_end":578,"column_start":5,"column_end":42}},{"value":"/         request","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166529,"byte_end":166548,"line_start":579,"line_end":579,"column_start":5,"column_end":24}},{"value":"/     })","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166553,"byte_end":166563,"line_start":580,"line_end":580,"column_start":5,"column_end":15}},{"value":"/     // Ensure our `ServiceBuilder` can be cloned","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166568,"byte_end":166620,"line_start":581,"line_end":581,"column_start":5,"column_end":57}},{"value":"/     .check_clone()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166625,"byte_end":166647,"line_start":582,"line_end":582,"column_start":5,"column_end":27}},{"value":"/     // Do something after processing the request","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166652,"byte_end":166704,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/     .map_response(|response: String| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166709,"byte_end":166751,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/         println!(\"got response!\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166756,"byte_end":166794,"line_start":585,"line_end":585,"column_start":5,"column_end":43}},{"value":"/         response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166799,"byte_end":166819,"line_start":586,"line_end":586,"column_start":5,"column_end":25}},{"value":"/     });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166824,"byte_end":166835,"line_start":587,"line_end":587,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166840,"byte_end":166847,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166852,"byte_end":166861,"line_start":589,"line_end":589,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167999,"byte_end":168018,"line_start":627,"line_end":627,"column_start":12,"column_end":31},"name":"check_service_clone","qualname":"<ServiceBuilder<L>>::check_service_clone","value":"pub fn check_service_clone<S>(Self) -> Self where L: Layer<S>,\nL::Service: Clone","parent":null,"children":[],"decl_id":null,"docs":" Check that the builder when given a service of type `S` produces a service that implements\n `Clone`.","sig":null,"attributes":[{"value":"/ Check that the builder when given a service of type `S` produces a service that implements","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":166960,"byte_end":167054,"line_start":597,"line_end":597,"column_start":5,"column_end":99}},{"value":"/ `Clone`.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167059,"byte_end":167071,"line_start":598,"line_end":598,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167076,"byte_end":167079,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ This can be useful when debugging type errors in `ServiceBuilder`s with lots of layers.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167084,"byte_end":167175,"line_start":600,"line_end":600,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167180,"byte_end":167183,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ Doesn't actually change the builder but serves as a type check.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167188,"byte_end":167255,"line_start":602,"line_end":602,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167260,"byte_end":167263,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167268,"byte_end":167281,"line_start":604,"line_end":604,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167286,"byte_end":167289,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167294,"byte_end":167305,"line_start":606,"line_end":606,"column_start":5,"column_end":16}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167310,"byte_end":167340,"line_start":607,"line_end":607,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167345,"byte_end":167348,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167353,"byte_end":167375,"line_start":609,"line_end":609,"column_start":5,"column_end":27}},{"value":"/ # struct MyService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167380,"byte_end":167403,"line_start":610,"line_end":610,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167408,"byte_end":167413,"line_start":611,"line_end":611,"column_start":5,"column_end":10}},{"value":"/ let builder = ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167418,"byte_end":167457,"line_start":612,"line_end":612,"column_start":5,"column_end":44}},{"value":"/     // Do something before processing the request","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167462,"byte_end":167515,"line_start":613,"line_end":613,"column_start":5,"column_end":58}},{"value":"/     .map_request(|request: String| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167520,"byte_end":167560,"line_start":614,"line_end":614,"column_start":5,"column_end":45}},{"value":"/         println!(\"got request!\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167565,"byte_end":167602,"line_start":615,"line_end":615,"column_start":5,"column_end":42}},{"value":"/         request","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167607,"byte_end":167626,"line_start":616,"line_end":616,"column_start":5,"column_end":24}},{"value":"/     })","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167631,"byte_end":167641,"line_start":617,"line_end":617,"column_start":5,"column_end":15}},{"value":"/     // Ensure that the service produced when given a `MyService` implements","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167646,"byte_end":167725,"line_start":618,"line_end":618,"column_start":5,"column_end":84}},{"value":"/     .check_service_clone::<MyService>()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167730,"byte_end":167773,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/     // Do something after processing the request","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167778,"byte_end":167830,"line_start":620,"line_end":620,"column_start":5,"column_end":57}},{"value":"/     .map_response(|response: String| {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167835,"byte_end":167877,"line_start":621,"line_end":621,"column_start":5,"column_end":47}},{"value":"/         println!(\"got response!\");","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167882,"byte_end":167920,"line_start":622,"line_end":622,"column_start":5,"column_end":43}},{"value":"/         response","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167925,"byte_end":167945,"line_start":623,"line_end":623,"column_start":5,"column_end":25}},{"value":"/     });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167950,"byte_end":167961,"line_start":624,"line_end":624,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167966,"byte_end":167973,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":167978,"byte_end":167987,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169887,"byte_end":169900,"line_start":684,"line_end":684,"column_start":12,"column_end":25},"name":"check_service","qualname":"<ServiceBuilder<L>>::check_service","value":"pub fn check_service<S, T, U, E>(Self) -> Self where L: Layer<S>,\nL::Service: Service<T, Response = U, Error = U>","parent":null,"children":[],"decl_id":null,"docs":" Check that the builder when given a service of type `S` produces a service with the given\n request, response, and error types.","sig":null,"attributes":[{"value":"/ Check that the builder when given a service of type `S` produces a service with the given","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168124,"byte_end":168217,"line_start":635,"line_end":635,"column_start":5,"column_end":98}},{"value":"/ request, response, and error types.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168222,"byte_end":168261,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168266,"byte_end":168269,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ This can be useful when debugging type errors in `ServiceBuilder`s with lots of layers.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168274,"byte_end":168365,"line_start":638,"line_end":638,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168370,"byte_end":168373,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Doesn't actually change the builder but serves as a type check.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168378,"byte_end":168445,"line_start":640,"line_end":640,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168450,"byte_end":168453,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168458,"byte_end":168471,"line_start":642,"line_end":642,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168476,"byte_end":168479,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168484,"byte_end":168495,"line_start":644,"line_end":644,"column_start":5,"column_end":16}},{"value":"/ use tower::ServiceBuilder;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168500,"byte_end":168530,"line_start":645,"line_end":645,"column_start":5,"column_end":35}},{"value":"/ use std::task::{Poll, Context};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168535,"byte_end":168570,"line_start":646,"line_end":646,"column_start":5,"column_end":40}},{"value":"/ use tower::{Service, ServiceExt};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168575,"byte_end":168612,"line_start":647,"line_end":647,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168617,"byte_end":168620,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ // An example service","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168625,"byte_end":168650,"line_start":649,"line_end":649,"column_start":5,"column_end":30}},{"value":"/ struct MyService;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168655,"byte_end":168676,"line_start":650,"line_end":650,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168681,"byte_end":168684,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ impl Service<Request> for MyService {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168689,"byte_end":168730,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/   type Response = Response;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168735,"byte_end":168766,"line_start":653,"line_end":653,"column_start":5,"column_end":36}},{"value":"/   type Error = Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168771,"byte_end":168796,"line_start":654,"line_end":654,"column_start":5,"column_end":30}},{"value":"/   type Future = futures_util::future::Ready<Result<Response, Error>>;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168801,"byte_end":168874,"line_start":655,"line_end":655,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168879,"byte_end":168882,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/   fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168887,"byte_end":168974,"line_start":657,"line_end":657,"column_start":5,"column_end":92}},{"value":"/       // ...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":168979,"byte_end":168995,"line_start":658,"line_end":658,"column_start":5,"column_end":21}},{"value":"/       # todo!()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169000,"byte_end":169019,"line_start":659,"line_end":659,"column_start":5,"column_end":24}},{"value":"/   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169024,"byte_end":169031,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169036,"byte_end":169039,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/   fn call(&mut self, request: Request) -> Self::Future {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169044,"byte_end":169104,"line_start":662,"line_end":662,"column_start":5,"column_end":65}},{"value":"/       // ...","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169109,"byte_end":169125,"line_start":663,"line_end":663,"column_start":5,"column_end":21}},{"value":"/       # todo!()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169130,"byte_end":169149,"line_start":664,"line_end":664,"column_start":5,"column_end":24}},{"value":"/   }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169154,"byte_end":169161,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169166,"byte_end":169171,"line_start":666,"line_end":666,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169176,"byte_end":169179,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ struct Request;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169184,"byte_end":169203,"line_start":668,"line_end":668,"column_start":5,"column_end":24}},{"value":"/ struct Response;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169208,"byte_end":169228,"line_start":669,"line_end":669,"column_start":5,"column_end":25}},{"value":"/ struct Error;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169233,"byte_end":169250,"line_start":670,"line_end":670,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169255,"byte_end":169258,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ struct WrappedResponse(Response);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169263,"byte_end":169300,"line_start":672,"line_end":672,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169305,"byte_end":169308,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let builder = ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169313,"byte_end":169352,"line_start":674,"line_end":674,"column_start":5,"column_end":44}},{"value":"/     // At this point in the builder if given a `MyService` it produces a service that","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169357,"byte_end":169446,"line_start":675,"line_end":675,"column_start":5,"column_end":94}},{"value":"/     // accepts `Request`s, produces `Response`s, and fails with `Error`s","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169451,"byte_end":169527,"line_start":676,"line_end":676,"column_start":5,"column_end":81}},{"value":"/     .check_service::<MyService, Request, Response, Error>()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169532,"byte_end":169595,"line_start":677,"line_end":677,"column_start":5,"column_end":68}},{"value":"/     // Wrap responses in `WrappedResponse`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169600,"byte_end":169646,"line_start":678,"line_end":678,"column_start":5,"column_end":51}},{"value":"/     .map_response(|response: Response| WrappedResponse(response))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169651,"byte_end":169720,"line_start":679,"line_end":679,"column_start":5,"column_end":74}},{"value":"/     // Now the response type will be `WrappedResponse`","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169725,"byte_end":169783,"line_start":680,"line_end":680,"column_start":5,"column_end":63}},{"value":"/     .check_service::<MyService, _, WrappedResponse, _>();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169788,"byte_end":169849,"line_start":681,"line_end":681,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169854,"byte_end":169861,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":169866,"byte_end":169875,"line_start":683,"line_end":683,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":171124,"byte_end":171129,"line_start":724,"line_end":724,"column_start":12,"column_end":17},"name":"boxed","qualname":"<ServiceBuilder<L>>::boxed","value":"pub fn boxed<S, R>(Self)\n->\n    ServiceBuilder<Stack<tower_layer::LayerFn<fn(: L::Service)\n                                                  ->\n                                                      crate::util::BoxService<R,\n                                                                              <L::Service\n                                                                              as\n                                                                              Service<R>>::Response,\n                                                                              <L::Service\n                                                                              as\n                                                                              Service<R>>::Error>>,\n                         L>> where L: Layer<S>, L::Service: Service<R> +\nSend + 'static, <L::Service as Service<R>>::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" This wraps the inner service with the [`Layer`] returned by [`BoxService::layer()`].","sig":null,"attributes":[{"value":"/ This wraps the inner service with the [`Layer`] returned by [`BoxService::layer()`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170045,"byte_end":170133,"line_start":692,"line_end":692,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170138,"byte_end":170141,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ See that method for more details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170146,"byte_end":170183,"line_start":694,"line_end":694,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170188,"byte_end":170191,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170196,"byte_end":170209,"line_start":696,"line_end":696,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170214,"byte_end":170217,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170222,"byte_end":170229,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ use tower::{Service, ServiceBuilder, BoxError, util::BoxService};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170234,"byte_end":170303,"line_start":699,"line_end":699,"column_start":5,"column_end":74}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170308,"byte_end":170336,"line_start":700,"line_end":700,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170341,"byte_end":170346,"line_start":701,"line_end":701,"column_start":5,"column_end":10}},{"value":"/ # struct Request;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170351,"byte_end":170372,"line_start":702,"line_end":702,"column_start":5,"column_end":26}},{"value":"/ # struct Response;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170377,"byte_end":170399,"line_start":703,"line_end":703,"column_start":5,"column_end":27}},{"value":"/ # impl Response {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170404,"byte_end":170425,"line_start":704,"line_end":704,"column_start":5,"column_end":26}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170430,"byte_end":170465,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170470,"byte_end":170477,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170482,"byte_end":170485,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ let service: BoxService<Request, Response, BoxError> = ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170490,"byte_end":170570,"line_start":708,"line_end":708,"column_start":5,"column_end":85}},{"value":"/     .boxed()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170575,"byte_end":170591,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/     .load_shed()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170596,"byte_end":170616,"line_start":710,"line_end":710,"column_start":5,"column_end":25}},{"value":"/     .concurrency_limit(64)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170621,"byte_end":170651,"line_start":711,"line_end":711,"column_start":5,"column_end":35}},{"value":"/     .timeout(Duration::from_secs(10))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170656,"byte_end":170697,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/     .service_fn(|req: Request| async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170702,"byte_end":170744,"line_start":713,"line_end":713,"column_start":5,"column_end":47}},{"value":"/         Ok::<_, BoxError>(Response::new())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170749,"byte_end":170795,"line_start":714,"line_end":714,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170800,"byte_end":170811,"line_start":715,"line_end":715,"column_start":5,"column_end":16}},{"value":"/ # let service = assert_service(service);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170816,"byte_end":170860,"line_start":716,"line_end":716,"column_start":5,"column_end":49}},{"value":"/ # fn assert_service<S, R>(svc: S) -> S","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170865,"byte_end":170907,"line_start":717,"line_end":717,"column_start":5,"column_end":47}},{"value":"/ # where S: Service<R> { svc }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170912,"byte_end":170945,"line_start":718,"line_end":718,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170950,"byte_end":170957,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170962,"byte_end":170965,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ [`BoxService::layer()`]: crate::util::BoxService::layer()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":170970,"byte_end":171031,"line_start":721,"line_end":721,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":171036,"byte_end":171060,"line_start":722,"line_end":722,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":173192,"byte_end":173203,"line_start":788,"line_end":788,"column_start":12,"column_end":23},"name":"boxed_clone","qualname":"<ServiceBuilder<L>>::boxed_clone","value":"pub fn boxed_clone<S, R>(Self)\n->\n    ServiceBuilder<Stack<tower_layer::LayerFn<fn(: L::Service)\n                                                  ->\n                                                      crate::util::BoxCloneService<R,\n                                                                                   <L::Service\n                                                                                   as\n                                                                                   Service<R>>::Response,\n                                                                                   <L::Service\n                                                                                   as\n                                                                                   Service<R>>::Error>>,\n                         L>> where L: Layer<S>, L::Service: Service<R> +\nClone + Send + 'static, <L::Service as Service<R>>::Future: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" This wraps the inner service with the [`Layer`] returned by [`BoxCloneService::layer()`].","sig":null,"attributes":[{"value":"/ This wraps the inner service with the [`Layer`] returned by [`BoxCloneService::layer()`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":171735,"byte_end":171828,"line_start":748,"line_end":748,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":171833,"byte_end":171836,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`boxed`] method, but it requires that `Self` implement","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":171841,"byte_end":171923,"line_start":750,"line_end":750,"column_start":5,"column_end":87}},{"value":"/ [`Clone`], and the returned boxed service implements [`Clone`].","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":171928,"byte_end":171995,"line_start":751,"line_end":751,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172000,"byte_end":172003,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ See [`BoxCloneService`] for more details.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172008,"byte_end":172053,"line_start":753,"line_end":753,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172058,"byte_end":172061,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172066,"byte_end":172079,"line_start":755,"line_end":755,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172084,"byte_end":172087,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172092,"byte_end":172099,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ use tower::{Service, ServiceBuilder, BoxError, util::BoxCloneService};","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172104,"byte_end":172178,"line_start":758,"line_end":758,"column_start":5,"column_end":79}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172183,"byte_end":172211,"line_start":759,"line_end":759,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172216,"byte_end":172221,"line_start":760,"line_end":760,"column_start":5,"column_end":10}},{"value":"/ # struct Request;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172226,"byte_end":172247,"line_start":761,"line_end":761,"column_start":5,"column_end":26}},{"value":"/ # struct Response;","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172252,"byte_end":172274,"line_start":762,"line_end":762,"column_start":5,"column_end":27}},{"value":"/ # impl Response {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172279,"byte_end":172300,"line_start":763,"line_end":763,"column_start":5,"column_end":26}},{"value":"/ #     fn new() -> Self { Self }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172305,"byte_end":172340,"line_start":764,"line_end":764,"column_start":5,"column_end":40}},{"value":"/ # }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172345,"byte_end":172352,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172357,"byte_end":172360,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ let service: BoxCloneService<Request, Response, BoxError> = ServiceBuilder::new()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172365,"byte_end":172450,"line_start":767,"line_end":767,"column_start":5,"column_end":90}},{"value":"/     .boxed_clone()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172455,"byte_end":172477,"line_start":768,"line_end":768,"column_start":5,"column_end":27}},{"value":"/     .load_shed()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172482,"byte_end":172502,"line_start":769,"line_end":769,"column_start":5,"column_end":25}},{"value":"/     .concurrency_limit(64)","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172507,"byte_end":172537,"line_start":770,"line_end":770,"column_start":5,"column_end":35}},{"value":"/     .timeout(Duration::from_secs(10))","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172542,"byte_end":172583,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/     .service_fn(|req: Request| async {","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172588,"byte_end":172630,"line_start":772,"line_end":772,"column_start":5,"column_end":47}},{"value":"/         Ok::<_, BoxError>(Response::new())","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172635,"byte_end":172681,"line_start":773,"line_end":773,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172686,"byte_end":172697,"line_start":774,"line_end":774,"column_start":5,"column_end":16}},{"value":"/ # let service = assert_service(service);","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172702,"byte_end":172746,"line_start":775,"line_end":775,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172751,"byte_end":172754,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ // The boxed service can still be cloned.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172759,"byte_end":172804,"line_start":777,"line_end":777,"column_start":5,"column_end":50}},{"value":"/ service.clone();","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172809,"byte_end":172829,"line_start":778,"line_end":778,"column_start":5,"column_end":25}},{"value":"/ # fn assert_service<S, R>(svc: S) -> S","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172834,"byte_end":172876,"line_start":779,"line_end":779,"column_start":5,"column_end":47}},{"value":"/ # where S: Service<R> { svc }","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172881,"byte_end":172914,"line_start":780,"line_end":780,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172919,"byte_end":172926,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172931,"byte_end":172934,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ [`BoxCloneService::layer()`]: crate::util::BoxCloneService::layer()","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":172939,"byte_end":173010,"line_start":783,"line_end":783,"column_start":5,"column_end":76}},{"value":"/ [`BoxCloneService`]: crate::util::BoxCloneService","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":173015,"byte_end":173068,"line_start":784,"line_end":784,"column_start":5,"column_end":58}},{"value":"/ [`boxed`]: Self::boxed","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":173073,"byte_end":173099,"line_start":785,"line_end":785,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"util\")","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":173104,"byte_end":173128,"line_start":786,"line_end":786,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"layer","qualname":"::layer","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1827},{"krate":0,"index":1830},{"krate":0,"index":1833}],"decl_id":null,"docs":" A collection of [`Layer`] based tower services","sig":null,"attributes":[{"value":"/ A collection of [`Layer`] based tower services","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174209,"byte_end":174259,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174260,"byte_end":174263,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174264,"byte_end":174291,"line_start":3,"line_end":3,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":1833},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174506,"byte_end":174510,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"util","qualname":"::layer::util","value":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1838}],"decl_id":null,"docs":" Utilities for combining layers","sig":null,"attributes":[{"value":"/ Utilities for combining layers","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174343,"byte_end":174377,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174378,"byte_end":174381,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Identity`]: crate::layer::util::Identity","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174382,"byte_end":174428,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/ [`Layer`]: crate::Layer","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174429,"byte_end":174456,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/ [`Stack`]: crate::layer::util::Stack","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/layer.rs","byte_start":174457,"byte_end":174497,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":1861},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":9444,"byte_end":9450,"line_start":238,"line_end":238,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":9509,"byte_end":9517,"line_start":242,"line_end":242,"column_start":10,"column_end":18},"name":"BoxError","qualname":"::BoxError","value":"Box<dyn std::error::Error + Send + Sync>","parent":null,"children":[],"decl_id":null,"docs":" Alias for a type-erased error type.\n","sig":null,"attributes":[{"value":"/ Alias for a type-erased error type.","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":9460,"byte_end":9499,"line_start":241,"line_end":241,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":12882,"byte_end":12894,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":13254,"byte_end":13266,"line_start":36,"line_end":36,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":13429,"byte_end":13441,"line_start":42,"line_end":42,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":13583,"byte_end":13589,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":13681,"byte_end":13687,"line_start":56,"line_end":56,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":13825,"byte_end":13831,"line_start":62,"line_end":62,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":13992,"byte_end":13998,"line_start":68,"line_end":68,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/future.rs","byte_start":14822,"byte_end":14836,"line_start":41,"line_end":41,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/future.rs","byte_start":15170,"byte_end":15184,"line_start":55,"line_end":55,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16575,"byte_end":16586,"line_start":17,"line_end":17,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":17772,"byte_end":17783,"line_start":44,"line_end":44,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":18114,"byte_end":18125,"line_start":58,"line_end":58,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":18330,"byte_end":18341,"line_start":66,"line_end":66,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":18500,"byte_end":18511,"line_start":75,"line_end":75,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":20566,"byte_end":20572,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":23132,"byte_end":23138,"line_start":108,"line_end":108,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":25341,"byte_end":25347,"line_start":169,"line_end":169,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/worker.rs","byte_start":27171,"byte_end":27177,"line_start":51,"line_end":51,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/worker.rs","byte_start":27637,"byte_end":27643,"line_start":67,"line_end":67,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/worker.rs","byte_start":31614,"byte_end":31620,"line_start":168,"line_end":168,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/worker.rs","byte_start":34599,"byte_end":34605,"line_start":239,"line_end":239,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/worker.rs","byte_start":34885,"byte_end":34891,"line_start":250,"line_end":250,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":36490,"byte_end":36491,"line_start":29,"line_end":29,"column_start":39,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":36564,"byte_end":36565,"line_start":31,"line_end":31,"column_start":44,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45978,"byte_end":45984,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":46135,"byte_end":46141,"line_start":83,"line_end":83,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":41173,"byte_end":41174,"line_start":132,"line_end":132,"column_start":59,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":41310,"byte_end":41311,"line_start":139,"line_end":139,"column_start":62,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":42058,"byte_end":42069,"line_start":169,"line_end":169,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":42271,"byte_end":42282,"line_start":181,"line_end":181,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":42541,"byte_end":42552,"line_start":192,"line_end":192,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":43275,"byte_end":43284,"line_start":222,"line_end":222,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":43545,"byte_end":43554,"line_start":233,"line_end":233,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":84011,"byte_end":84018,"line_start":19,"line_end":19,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":84603,"byte_end":84616,"line_start":41,"line_end":41,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":84804,"byte_end":84817,"line_start":47,"line_end":47,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85053,"byte_end":85066,"line_start":55,"line_end":55,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85558,"byte_end":85565,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":86020,"byte_end":86027,"line_start":91,"line_end":91,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":86585,"byte_end":86597,"line_start":111,"line_end":111,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":86740,"byte_end":86752,"line_start":118,"line_end":118,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":90225,"byte_end":90233,"line_start":58,"line_end":58,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":90766,"byte_end":90774,"line_start":77,"line_end":77,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":90950,"byte_end":90958,"line_start":85,"line_end":85,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":91115,"byte_end":91123,"line_start":93,"line_end":93,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":92226,"byte_end":92236,"line_start":32,"line_end":32,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":92909,"byte_end":92919,"line_start":56,"line_end":56,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":93254,"byte_end":93264,"line_start":70,"line_end":70,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":94020,"byte_end":94036,"line_start":27,"line_end":27,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":94658,"byte_end":94674,"line_start":50,"line_end":50,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":95021,"byte_end":95037,"line_start":64,"line_end":64,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":95211,"byte_end":95222,"line_start":70,"line_end":70,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97534,"byte_end":97549,"line_start":65,"line_end":65,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":98247,"byte_end":98262,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":98626,"byte_end":98641,"line_start":105,"line_end":105,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":98968,"byte_end":98969,"line_start":120,"line_end":120,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":99233,"byte_end":99248,"line_start":132,"line_end":132,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/common.rs","byte_start":100426,"byte_end":100433,"line_start":30,"line_end":30,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/common.rs","byte_start":101396,"byte_end":101403,"line_start":66,"line_end":66,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":106845,"byte_end":106852,"line_start":98,"line_end":98,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108523,"byte_end":108530,"line_start":154,"line_end":154,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108865,"byte_end":108879,"line_start":167,"line_end":167,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110163,"byte_end":110179,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":111339,"byte_end":111355,"line_start":75,"line_end":75,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":111690,"byte_end":111706,"line_start":88,"line_end":88,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":112815,"byte_end":112821,"line_start":29,"line_end":29,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":113712,"byte_end":113718,"line_start":59,"line_end":59,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":114265,"byte_end":114271,"line_start":76,"line_end":76,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116660,"byte_end":116673,"line_start":64,"line_end":64,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":118526,"byte_end":118539,"line_start":111,"line_end":111,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":118866,"byte_end":118871,"line_start":128,"line_end":128,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":119309,"byte_end":119322,"line_start":143,"line_end":143,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":121778,"byte_end":121784,"line_start":16,"line_end":16,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122398,"byte_end":122404,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122857,"byte_end":122863,"line_start":59,"line_end":59,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":123380,"byte_end":123391,"line_start":79,"line_end":79,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":123526,"byte_end":123537,"line_start":86,"line_end":86,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124047,"byte_end":124057,"line_start":15,"line_end":15,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124347,"byte_end":124357,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124821,"byte_end":124831,"line_start":43,"line_end":43,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":125405,"byte_end":125420,"line_start":71,"line_end":71,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":125563,"byte_end":125578,"line_start":78,"line_end":78,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126151,"byte_end":126162,"line_start":16,"line_end":16,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126803,"byte_end":126814,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127298,"byte_end":127309,"line_start":59,"line_end":59,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127817,"byte_end":127833,"line_start":79,"line_end":79,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127984,"byte_end":128000,"line_start":86,"line_end":86,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":128562,"byte_end":128571,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129196,"byte_end":129205,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129686,"byte_end":129695,"line_start":59,"line_end":59,"column_start":59,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":130273,"byte_end":130287,"line_start":80,"line_end":80,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":130434,"byte_end":130448,"line_start":87,"line_end":87,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":130975,"byte_end":130984,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131789,"byte_end":131798,"line_start":49,"line_end":49,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":132264,"byte_end":132273,"line_start":69,"line_end":69,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":132713,"byte_end":132727,"line_start":89,"line_end":89,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":132864,"byte_end":132878,"line_start":96,"line_end":96,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":133068,"byte_end":133082,"line_start":107,"line_end":107,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/oneshot.rs","byte_start":134092,"byte_end":134097,"line_start":37,"line_end":37,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/oneshot.rs","byte_start":134310,"byte_end":134315,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/oneshot.rs","byte_start":134964,"byte_end":134971,"line_start":69,"line_end":69,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/oneshot.rs","byte_start":135193,"byte_end":135200,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/error.rs","byte_start":137852,"byte_end":137856,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/error.rs","byte_start":137941,"byte_end":137945,"line_start":15,"line_end":15,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/error.rs","byte_start":138068,"byte_end":138072,"line_start":21,"line_end":21,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/future.rs","byte_start":138462,"byte_end":138476,"line_start":21,"line_end":21,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/future.rs","byte_start":138612,"byte_end":138626,"line_start":27,"line_end":27,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136642,"byte_end":136650,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136908,"byte_end":136916,"line_start":35,"line_end":35,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139652,"byte_end":139664,"line_start":22,"line_end":22,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139698,"byte_end":139710,"line_start":24,"line_end":24,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139945,"byte_end":139957,"line_start":37,"line_end":37,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":140383,"byte_end":140395,"line_start":54,"line_end":54,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141389,"byte_end":141394,"line_start":81,"line_end":81,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141436,"byte_end":141441,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141645,"byte_end":141650,"line_start":93,"line_end":93,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141916,"byte_end":141921,"line_start":104,"line_end":104,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143438,"byte_end":143447,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143703,"byte_end":143712,"line_start":66,"line_end":66,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144402,"byte_end":144406,"line_start":19,"line_end":19,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144841,"byte_end":144845,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":145473,"byte_end":145477,"line_start":62,"line_end":62,"column_start":64,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":146082,"byte_end":146091,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":146228,"byte_end":146237,"line_start":91,"line_end":91,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82716,"byte_end":82717,"line_start":1055,"line_end":1055,"column_start":50,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150014,"byte_end":150028,"line_start":110,"line_end":110,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150102,"byte_end":150116,"line_start":116,"line_end":116,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150285,"byte_end":150299,"line_start":125,"line_end":125,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1771},{"krate":0,"index":1773},{"krate":0,"index":1775},{"krate":0,"index":1777},{"krate":0,"index":1779},{"krate":0,"index":1783},{"krate":0,"index":1785},{"krate":0,"index":1787},{"krate":0,"index":1789},{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1798},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1803},{"krate":0,"index":1808},{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":173860,"byte_end":173874,"line_start":813,"line_end":813,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":174044,"byte_end":174058,"line_start":819,"line_end":819,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":7616,"byte_end":7622,"line_start":172,"line_end":172,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12295,"byte_end":12300,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/mod.rs","byte_start":12310,"byte_end":12316,"line_start":40,"line_end":40,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":33}},{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":8267,"byte_end":8271,"line_start":194,"line_end":194,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":265}},{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":8948,"byte_end":8952,"line_start":215,"line_end":215,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":448}},{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136206,"byte_end":136211,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1335}},{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136256,"byte_end":136262,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1348}},{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":8963,"byte_end":8970,"line_start":217,"line_end":217,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1748}},{"kind":"Mod","span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/lib.rs","byte_start":8980,"byte_end":8985,"line_start":218,"line_end":218,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1822}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":12882,"byte_end":12894,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":13254,"byte_end":13266,"line_start":36,"line_end":36,"column_start":23,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1864},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":13429,"byte_end":13441,"line_start":42,"line_end":42,"column_start":28,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1864},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":13583,"byte_end":13589,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":17},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":13681,"byte_end":13687,"line_start":56,"line_end":56,"column_start":21,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":17},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":13825,"byte_end":13831,"line_start":62,"line_end":62,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":17},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/error.rs","byte_start":13992,"byte_end":13998,"line_start":68,"line_end":68,"column_start":28,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":17},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/future.rs","byte_start":14822,"byte_end":14836,"line_start":41,"line_end":41,"column_start":9,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/future.rs","byte_start":15170,"byte_end":15184,"line_start":55,"line_end":55,"column_start":26,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1868},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":16575,"byte_end":16586,"line_start":17,"line_end":17,"column_start":15,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":17772,"byte_end":17783,"line_start":44,"line_end":44,"column_start":31,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":88},"to":{"krate":20,"index":71}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":18114,"byte_end":18125,"line_start":58,"line_end":58,"column_start":30,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":18330,"byte_end":18341,"line_start":66,"line_end":66,"column_start":25,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/layer.rs","byte_start":18500,"byte_end":18511,"line_start":75,"line_end":75,"column_start":24,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":3026}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":20566,"byte_end":20572,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":23132,"byte_end":23138,"line_start":108,"line_end":108,"column_start":39,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1955},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/service.rs","byte_start":25341,"byte_end":25347,"line_start":169,"line_end":169,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1955},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/worker.rs","byte_start":27171,"byte_end":27177,"line_start":51,"line_end":51,"column_start":18,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/worker.rs","byte_start":27637,"byte_end":27643,"line_start":67,"line_end":67,"column_start":18,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/worker.rs","byte_start":31614,"byte_end":31620,"line_start":168,"line_end":168,"column_start":29,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2001},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/worker.rs","byte_start":34599,"byte_end":34605,"line_start":239,"line_end":239,"column_start":6,"column_end":12},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/buffer/worker.rs","byte_start":34885,"byte_end":34891,"line_start":250,"line_end":250,"column_start":16,"column_end":22},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":35850,"byte_end":35856,"line_start":12,"line_end":12,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":1861},"to":{"krate":0,"index":290}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":36490,"byte_end":36491,"line_start":29,"line_end":29,"column_start":39,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":298},"to":{"krate":0,"index":1861}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_connection.rs","byte_start":36564,"byte_end":36565,"line_start":31,"line_end":31,"column_start":44,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":290}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":45978,"byte_end":45984,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service/shared.rs","byte_start":46135,"byte_end":46141,"line_start":83,"line_end":83,"column_start":27,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2531},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":37746,"byte_end":37752,"line_start":21,"line_end":21,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":1861},"to":{"krate":0,"index":356}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":41173,"byte_end":41174,"line_start":132,"line_end":132,"column_start":59,"column_end":60},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":369},"to":{"krate":0,"index":1861}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":41310,"byte_end":41311,"line_start":139,"line_end":139,"column_start":62,"column_end":63},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":374},"to":{"krate":0,"index":356}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":42058,"byte_end":42069,"line_start":169,"line_end":169,"column_start":28,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":385},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":42271,"byte_end":42282,"line_start":181,"line_end":181,"column_start":33,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":385},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":42541,"byte_end":42552,"line_start":192,"line_end":192,"column_start":49,"column_end":60},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":385},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":43275,"byte_end":43284,"line_start":222,"line_end":222,"column_start":33,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/make/make_service.rs","byte_start":43545,"byte_end":43554,"line_start":233,"line_end":233,"column_start":49,"column_end":58},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":408},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":84011,"byte_end":84018,"line_start":19,"line_end":19,"column_start":27,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2585},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":84603,"byte_end":84616,"line_start":41,"line_end":41,"column_start":28,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":84804,"byte_end":84817,"line_start":47,"line_end":47,"column_start":48,"column_end":61},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2594},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85053,"byte_end":85066,"line_start":55,"line_end":55,"column_start":39,"column_end":52},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2594},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":85558,"byte_end":85565,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":86020,"byte_end":86027,"line_start":91,"line_end":91,"column_start":47,"column_end":54},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2585},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":86585,"byte_end":86597,"line_start":111,"line_end":111,"column_start":9,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/and_then.rs","byte_start":86740,"byte_end":86752,"line_start":118,"line_end":118,"column_start":25,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2643},"to":{"krate":20,"index":71}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":90225,"byte_end":90233,"line_start":58,"line_end":58,"column_start":19,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":90766,"byte_end":90774,"line_start":77,"line_end":77,"column_start":33,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":547},"to":{"krate":20,"index":71}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":90950,"byte_end":90958,"line_start":85,"line_end":85,"column_start":29,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/layer.rs","byte_start":91115,"byte_end":91123,"line_start":93,"line_end":93,"column_start":34,"column_end":42},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":92226,"byte_end":92236,"line_start":32,"line_end":32,"column_start":15,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":92909,"byte_end":92919,"line_start":56,"line_end":56,"column_start":30,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":611},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/sync.rs","byte_start":93254,"byte_end":93264,"line_start":70,"line_end":70,"column_start":30,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":94020,"byte_end":94036,"line_start":27,"line_end":27,"column_start":15,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":94658,"byte_end":94674,"line_start":50,"line_end":50,"column_start":30,"column_end":46},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":670},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":95021,"byte_end":95037,"line_start":64,"line_end":64,"column_start":30,"column_end":46},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed/unsync.rs","byte_start":95211,"byte_end":95222,"line_start":70,"line_end":70,"column_start":39,"column_end":50},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2652},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":97534,"byte_end":97549,"line_start":65,"line_end":65,"column_start":15,"column_end":30},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":98247,"byte_end":98262,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":746},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":98626,"byte_end":98641,"line_start":105,"line_end":105,"column_start":25,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":746},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":98748,"byte_end":98755,"line_start":111,"line_end":111,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":21,"index":13},"to":{"krate":0,"index":775}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":98968,"byte_end":98969,"line_start":120,"line_end":120,"column_start":32,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":780},"to":{"krate":0,"index":775}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/boxed_clone.rs","byte_start":99233,"byte_end":99248,"line_start":132,"line_end":132,"column_start":30,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":746},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/common.rs","byte_start":100426,"byte_end":100433,"line_start":30,"line_end":30,"column_start":17,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/common.rs","byte_start":101396,"byte_end":101403,"line_start":66,"line_end":66,"column_start":28,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2658},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":106845,"byte_end":106852,"line_start":98,"line_end":98,"column_start":14,"column_end":21},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108523,"byte_end":108530,"line_start":154,"line_end":154,"column_start":25,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2724},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/ordered.rs","byte_start":108865,"byte_end":108879,"line_start":167,"line_end":167,"column_start":38,"column_end":52},"kind":{"Impl":{"id":62}},"from":{"krate":41,"index":5539},"to":{"krate":0,"index":816}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":110163,"byte_end":110179,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":111339,"byte_end":111355,"line_start":75,"line_end":75,"column_start":25,"column_end":41},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2769},"to":{"krate":18,"index":96}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/call_all/unordered.rs","byte_start":111690,"byte_end":111706,"line_start":88,"line_end":88,"column_start":38,"column_end":54},"kind":{"Impl":{"id":65}},"from":{"krate":41,"index":5897},"to":{"krate":0,"index":816}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":112815,"byte_end":112821,"line_start":29,"line_end":29,"column_start":42,"column_end":48},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2864},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":113712,"byte_end":113718,"line_start":59,"line_end":59,"column_start":34,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2864},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/either.rs","byte_start":114265,"byte_end":114271,"line_start":76,"line_end":76,"column_start":28,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2864},"to":{"krate":20,"index":71}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":116660,"byte_end":116673,"line_start":64,"line_end":64,"column_start":12,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":118526,"byte_end":118539,"line_start":111,"line_end":111,"column_start":27,"column_end":40},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2873},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":118866,"byte_end":118871,"line_start":128,"line_end":128,"column_start":27,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2881},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/future_service.rs","byte_start":119309,"byte_end":119322,"line_start":143,"line_end":143,"column_start":33,"column_end":46},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2873},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":121778,"byte_end":121784,"line_start":16,"line_end":16,"column_start":27,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2894},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122398,"byte_end":122404,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":122857,"byte_end":122863,"line_start":59,"line_end":59,"column_start":49,"column_end":55},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2894},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":123380,"byte_end":123391,"line_start":79,"line_end":79,"column_start":9,"column_end":20},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_err.rs","byte_start":123526,"byte_end":123537,"line_start":86,"line_end":86,"column_start":25,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2903},"to":{"krate":20,"index":71}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124047,"byte_end":124057,"line_start":15,"line_end":15,"column_start":27,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124347,"byte_end":124357,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":124821,"byte_end":124831,"line_start":43,"line_end":43,"column_start":36,"column_end":46},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2966},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":125405,"byte_end":125420,"line_start":71,"line_end":71,"column_start":9,"column_end":24},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_request.rs","byte_start":125563,"byte_end":125578,"line_start":78,"line_end":78,"column_start":25,"column_end":40},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2975},"to":{"krate":20,"index":71}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126151,"byte_end":126162,"line_start":16,"line_end":16,"column_start":27,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2984},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":126803,"byte_end":126814,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127298,"byte_end":127309,"line_start":59,"line_end":59,"column_start":52,"column_end":63},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2984},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127817,"byte_end":127833,"line_start":79,"line_end":79,"column_start":9,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_response.rs","byte_start":127984,"byte_end":128000,"line_start":86,"line_end":86,"column_start":25,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2993},"to":{"krate":20,"index":71}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":128562,"byte_end":128571,"line_start":16,"line_end":16,"column_start":27,"column_end":36},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3056},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129196,"byte_end":129205,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":129686,"byte_end":129695,"line_start":59,"line_end":59,"column_start":59,"column_end":68},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3056},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":130273,"byte_end":130287,"line_start":80,"line_end":80,"column_start":9,"column_end":23},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_result.rs","byte_start":130434,"byte_end":130448,"line_start":87,"line_end":87,"column_start":25,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3065},"to":{"krate":20,"index":71}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":130975,"byte_end":130984,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":131789,"byte_end":131798,"line_start":49,"line_end":49,"column_start":41,"column_end":50},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3128},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":132264,"byte_end":132273,"line_start":69,"line_end":69,"column_start":27,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3128},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":132713,"byte_end":132727,"line_start":89,"line_end":89,"column_start":9,"column_end":23},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":132864,"byte_end":132878,"line_start":96,"line_end":96,"column_start":25,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3137},"to":{"krate":20,"index":71}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/map_future.rs","byte_start":133068,"byte_end":133082,"line_start":107,"line_end":107,"column_start":24,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3137},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/oneshot.rs","byte_start":134092,"byte_end":134097,"line_start":37,"line_end":37,"column_start":28,"column_end":33},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/oneshot.rs","byte_start":134310,"byte_end":134315,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3188},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/oneshot.rs","byte_start":134964,"byte_end":134971,"line_start":69,"line_end":69,"column_start":14,"column_end":21},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/oneshot.rs","byte_start":135193,"byte_end":135200,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3143},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/error.rs","byte_start":137852,"byte_end":137856,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/error.rs","byte_start":137941,"byte_end":137945,"line_start":15,"line_end":15,"column_start":23,"column_end":27},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3233},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/error.rs","byte_start":138068,"byte_end":138072,"line_start":21,"line_end":21,"column_start":23,"column_end":27},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3233},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/future.rs","byte_start":138462,"byte_end":138476,"line_start":21,"line_end":21,"column_start":9,"column_end":23},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/future.rs","byte_start":138612,"byte_end":138626,"line_start":27,"line_end":27,"column_start":26,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3238},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136642,"byte_end":136650,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/optional/mod.rs","byte_start":136908,"byte_end":136916,"line_start":35,"line_end":35,"column_start":39,"column_end":47},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3274},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139652,"byte_end":139664,"line_start":22,"line_end":22,"column_start":28,"column_end":40},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1435},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139698,"byte_end":139710,"line_start":24,"line_end":24,"column_start":18,"column_end":30},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":139945,"byte_end":139957,"line_start":37,"line_end":37,"column_start":29,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1435},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":140383,"byte_end":140395,"line_start":54,"line_end":54,"column_start":33,"column_end":45},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1435},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141389,"byte_end":141394,"line_start":81,"line_end":81,"column_start":32,"column_end":37},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1456},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141436,"byte_end":141441,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141645,"byte_end":141650,"line_start":93,"line_end":93,"column_start":33,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1456},"to":{"krate":2,"index":12710}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/ready.rs","byte_start":141916,"byte_end":141921,"line_start":104,"line_end":104,"column_start":37,"column_end":42},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1456},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143438,"byte_end":143447,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3280},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/service_fn.rs","byte_start":143703,"byte_end":143712,"line_start":66,"line_end":66,"column_start":48,"column_end":57},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3280},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144402,"byte_end":144406,"line_start":19,"line_end":19,"column_start":27,"column_end":31},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3288},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":144841,"byte_end":144845,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":145473,"byte_end":145477,"line_start":62,"line_end":62,"column_start":64,"column_end":68},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3288},"to":{"krate":21,"index":13}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":146082,"byte_end":146091,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/then.rs","byte_start":146228,"byte_end":146237,"line_start":91,"line_end":91,"column_start":25,"column_end":34},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3297},"to":{"krate":20,"index":71}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":49442,"byte_end":49449,"line_start":65,"line_end":65,"column_start":47,"column_end":54},"kind":"SuperTrait","from":{"krate":21,"index":13},"to":{"krate":0,"index":1708}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/util/mod.rs","byte_start":82716,"byte_end":82717,"line_start":1055,"line_end":1055,"column_start":50,"column_end":51},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1744},"to":{"krate":0,"index":1708}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150014,"byte_end":150028,"line_start":110,"line_end":110,"column_start":18,"column_end":32},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3371},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150102,"byte_end":150116,"line_start":116,"line_end":116,"column_start":6,"column_end":20},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":150285,"byte_end":150299,"line_start":125,"line_end":125,"column_start":9,"column_end":23},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":173860,"byte_end":173874,"line_start":813,"line_end":813,"column_start":36,"column_end":50},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3371},"to":{"krate":2,"index":9396}},{"span":{"file_name":"/Users/yinheng/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-0.4.12/src/builder/mod.rs","byte_start":174044,"byte_end":174058,"line_start":819,"line_end":819,"column_start":25,"column_end":39},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3371},"to":{"krate":20,"index":71}}]}